import { EditorWidget } from '@theia/editor/lib/browser/editor-widget';
import { StrictEditorTextFocusContext } from '@theia/editor/lib/browser/editor-keybinding-contexts';
/**
 * Besides checking whether this editor is the currently active one and has the focus, it also checks the followings:
 *  - the suggest widget is visible
 *  - the find (and replace) widget is visible.
 *  - the rename input widget (which we use for refactoring and not find and replace) is visible.
 *
 * If any of the above-mentioned additional checks evaluates to `true` the `canHandle` will evaluate to `false`.
 *
 * See: https://github.com/eamodio/vscode-gitlens/blob/57226d54d1e929be04b02ee31ca294c50305481b/package.json#L2857
 */
export declare class MonacoStrictEditorTextFocusContext extends StrictEditorTextFocusContext {
    protected canHandle(widget: EditorWidget): boolean;
}
//# sourceMappingURL=monaco-keybinding-contexts.d.ts.map