import { KeybindingContext } from '@theia/core/lib/browser';
import { ConsoleManager } from './console-manager';
import { ConsoleWidget } from './console-widget';
export declare namespace ConsoleKeybindingContexts {
    /**
     * ID of a keybinding context that is enabled when the console content has the focus.
     */
    const consoleContentFocus = "consoleContentFocus";
    /**
     * ID of a keybinding context that is enabled when the console input has the focus.
     */
    const consoleInputFocus = "consoleInputFocus";
    /**
     * ID of a keybinding context that is enabled when the console history navigation back is enabled.
     */
    const consoleNavigationBackEnabled = "consoleNavigationBackEnabled";
    /**
     * ID of a keybinding context that is enabled when the console history navigation forward is enabled.
     */
    const consoleNavigationForwardEnabled = "consoleNavigationForwardEnabled";
}
export declare class ConsoleInputFocusContext implements KeybindingContext {
    readonly id: string;
    protected readonly manager: ConsoleManager;
    isEnabled(): boolean;
    protected isConsoleEnabled(console: ConsoleWidget): boolean;
}
export declare class ConsoleContentFocusContext extends ConsoleInputFocusContext {
    readonly id: string;
    protected isConsoleEnabled(console: ConsoleWidget): boolean;
}
export declare class ConsoleNavigationBackEnabled extends ConsoleInputFocusContext {
    readonly id: string;
    protected isConsoleEnabled(console: ConsoleWidget): boolean;
}
export declare class ConsoleNavigationForwardEnabled extends ConsoleInputFocusContext {
    readonly id: string;
    protected isConsoleEnabled(console: ConsoleWidget): boolean;
}
//# sourceMappingURL=console-keybinding-contexts.d.ts.map