import { ResolvedKeybinding } from '../../../../base/common/keybindings';
import { CodeAction } from '../../../common/languages';
import { CodeActionKind } from './types';
import { IKeybindingService } from '../../../../platform/keybinding/common/keybinding';
export interface ResolveCodeActionKeybinding {
    readonly kind: CodeActionKind;
    readonly preferred: boolean;
    readonly resolvedKeybinding: ResolvedKeybinding;
}
export declare class CodeActionKeybindingResolver {
    private readonly keybindingService;
    private static readonly codeActionCommands;
    constructor(keybindingService: IKeybindingService);
    getResolver(): (action: CodeAction) => ResolvedKeybinding | undefined;
    private bestKeybindingForCodeAction;
}
//# sourceMappingURL=codeActionKeybindingResolver.d.ts.map