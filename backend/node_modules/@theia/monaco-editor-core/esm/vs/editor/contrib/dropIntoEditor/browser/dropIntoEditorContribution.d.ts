import { VSDataTransfer } from '../../../../base/common/dataTransfer';
import { Disposable } from '../../../../base/common/lifecycle';
import { ICodeEditor } from '../../../browser/editorBrowser';
import { IBulkEditService } from '../../../browser/services/bulkEditService';
import { IEditorContribution } from '../../../common/editorCommon';
import { ILanguageFeaturesService } from '../../../common/services/languageFeatures';
import { IProgressService } from '../../../../platform/progress/common/progress';
import { IWorkspaceContextService } from '../../../../platform/workspace/common/workspace';
export declare class DropIntoEditorController extends Disposable implements IEditorContribution {
    private readonly _bulkEditService;
    private readonly _languageFeaturesService;
    private readonly _progressService;
    static readonly ID = "editor.contrib.dropIntoEditorController";
    constructor(editor: ICodeEditor, _bulkEditService: IBulkEditService, _languageFeaturesService: ILanguageFeaturesService, _progressService: IProgressService, workspaceContextService: IWorkspaceContextService);
    private onDropIntoEditor;
    extractDataTransferData(dragEvent: DragEvent): Promise<VSDataTransfer>;
}
//# sourceMappingURL=dropIntoEditorContribution.d.ts.map