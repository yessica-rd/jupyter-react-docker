import { ContextKey, ContextKeyService } from '@theia/core/lib/browser/context-key-service';
export declare class ViewContextKeyService {
    protected _view: ContextKey<string>;
    get view(): ContextKey<string>;
    protected _viewItem: ContextKey<string>;
    get viewItem(): ContextKey<string>;
    protected _activeViewlet: ContextKey<string>;
    /**
     * Viewlet is a tab in the left area in VS Code. Active means visible in this context.
     *
     * In VS Code there can be only one visible viewlet at any time.
     * It is not true for Theia, since views can be layed-out again to different areas.
     * So only last visible view will be an active viewlet.
     */
    get activeViewlet(): ContextKey<string>;
    protected _activePanel: ContextKey<string>;
    /**
     * Panel is a tab in the bottom area in VS Code. Active means visible in this context.
     *
     * In VS Code there can be only one visible panel at any time.
     * It is not true for Theia, since views can be layed-out again to different areas.
     * So only last visible view will be an active panel.
     */
    get activePanel(): ContextKey<string>;
    protected _focusedView: ContextKey<string>;
    get focusedView(): ContextKey<string>;
    protected readonly contextKeyService: ContextKeyService;
    protected init(): void;
    match(expression: string | undefined): boolean;
}
//# sourceMappingURL=view-context-key-service.d.ts.map