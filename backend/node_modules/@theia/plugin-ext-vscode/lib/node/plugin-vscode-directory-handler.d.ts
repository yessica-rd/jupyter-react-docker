import { RecursivePartial } from '@theia/core';
import { PluginDeployerDirectoryHandler, PluginDeployerEntry, PluginDeployerDirectoryHandlerContext, PluginPackage } from '@theia/plugin-ext';
import { PluginCliContribution } from '@theia/plugin-ext/lib/main/node/plugin-cli-contribution';
export declare class PluginVsCodeDirectoryHandler implements PluginDeployerDirectoryHandler {
    protected readonly deploymentDirectory: import("@theia/core").URI;
    protected readonly pluginCli: PluginCliContribution;
    accept(plugin: PluginDeployerEntry): boolean;
    protected attemptResolution(plugin: PluginDeployerEntry): boolean;
    protected deriveMetadata(plugin: PluginDeployerEntry): boolean;
    handle(context: PluginDeployerDirectoryHandlerContext): Promise<void>;
    protected copyDirectory(context: PluginDeployerDirectoryHandlerContext): Promise<void>;
    protected resolveFromSources(plugin: PluginDeployerEntry): boolean;
    protected resolveFromVSIX(plugin: PluginDeployerEntry): boolean;
    protected resolveFromNpmTarball(plugin: PluginDeployerEntry): boolean;
    protected resolvePackage(plugin: PluginDeployerEntry, options?: {
        pluginPath: string;
        pck?: RecursivePartial<PluginPackage>;
    }): boolean;
    protected requirePackage(pluginPath: string): PluginPackage | undefined;
    protected getExtensionDir(context: PluginDeployerDirectoryHandlerContext): Promise<string>;
}
//# sourceMappingURL=plugin-vscode-directory-handler.d.ts.map