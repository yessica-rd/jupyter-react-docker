{"version":3,"file":"vendors-node_modules_theia_terminal_lib_browser_terminal-frontend-contribution_js-node_module-120d16.js","mappings":"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C,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KA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","sources":["webpack:///./node_modules/@theia/terminal/src/browser/style/terminal-search.css?./node_modules/css-loader/dist/cjs.js","webpack:///./node_modules/@theia/terminal/src/browser/base/terminal-service.ts?","webpack:///./node_modules/@theia/terminal/src/browser/base/terminal-widget.ts?","webpack:///./node_modules/@theia/terminal/src/browser/search/terminal-search-widget.tsx?","webpack:///./node_modules/@theia/terminal/src/browser/shell-terminal-profile.ts?","webpack:///./node_modules/@theia/terminal/src/browser/terminal-copy-on-selection-handler.ts?","webpack:///./node_modules/@theia/terminal/src/browser/terminal-frontend-contribution.ts?","webpack:///./node_modules/@theia/terminal/src/browser/terminal-keybinding-contexts.ts?","webpack:///./node_modules/@theia/terminal/src/browser/terminal-preferences.ts?","webpack:///./node_modules/@theia/terminal/src/browser/terminal-profile-service.ts?","webpack:///./node_modules/@theia/terminal/src/browser/terminal-theme-service.ts?","webpack:///./node_modules/@theia/terminal/src/browser/terminal-widget-impl.ts?","webpack:///./node_modules/@theia/terminal/src/common/base-terminal-protocol.ts?","webpack:///./node_modules/@theia/terminal/src/common/shell-terminal-protocol.ts?","webpack:///./node_modules/@theia/terminal/src/common/terminal-protocol.ts?","webpack:///./node_modules/@theia/terminal/src/common/terminal-watcher.ts?","webpack:///FitAddon/webpack/universalModuleDefinition?","webpack:///FitAddon/./src/FitAddon.ts?","webpack:///FitAddon/webpack/bootstrap?","webpack:///FitAddon/webpack/startup?","webpack:///SearchAddon/webpack/universalModuleDefinition?","webpack:///SearchAddon/./src/SearchAddon.ts?","webpack:///xterm/webpack/universalModuleDefinition?","webpack:///xterm/./src/browser/AccessibilityManager.ts?","webpack:///xterm/./src/browser/Clipboard.ts?","webpack:///xterm/./src/browser/ColorContrastCache.ts?","webpack:///xterm/./src/browser/ColorManager.ts?","webpack:///xterm/./src/browser/Dom.ts?","webpack:///xterm/./src/browser/Lifecycle.ts?","webpack:///xterm/./src/browser/Linkifier.ts?","webpack:///xterm/./src/browser/Linkifier2.ts?","webpack:///xterm/./src/browser/LocalizableStrings.ts?","webpack:///xterm/./src/browser/MouseZoneManager.ts?","webpack:///xterm/./src/browser/RenderDebouncer.ts?","webpack:///xterm/./src/browser/ScreenDprMonitor.ts?","webpack:///xterm/./src/browser/Terminal.ts?","webpack:///xterm/./src/browser/TimeBasedDebouncer.ts?","webpack:///xterm/./src/browser/Viewport.ts?","webpack:///xterm/./src/browser/decorations/BufferDecorationRenderer.ts?","webpack:///xterm/./src/browser/decorations/ColorZoneStore.ts?","webpack:///xterm/./src/browser/decorations/OverviewRulerRenderer.ts?","webpack:///xterm/./src/browser/input/CompositionHelper.ts?","webpack:///xterm/./src/browser/input/Mouse.ts?","webpack:///xterm/./src/browser/input/MoveToCell.ts?","webpack:///xterm/./src/browser/public/Terminal.ts?","webpack:///xterm/./src/browser/renderer/BaseRenderLayer.ts?","webpack:///xterm/./src/browser/renderer/CursorRenderLayer.ts?","webpack:///xterm/./src/browser/renderer/CustomGlyphs.ts?","webpack:///xterm/./src/browser/renderer/GridCache.ts?","webpack:///xterm/./src/browser/renderer/LinkRenderLayer.ts?","webpack:///xterm/./src/browser/renderer/Renderer.ts?","webpack:///xterm/./src/browser/renderer/RendererUtils.ts?","webpack:///xterm/./src/browser/renderer/SelectionRenderLayer.ts?","webpack:///xterm/./src/browser/renderer/TextRenderLayer.ts?","webpack:///xterm/./src/browser/renderer/atlas/BaseCharAtlas.ts?","webpack:///xterm/./src/browser/renderer/atlas/CharAtlasCache.ts?","webpack:///xterm/./src/browser/renderer/atlas/CharAtlasUtils.ts?","webpack:///xterm/./src/browser/renderer/atlas/Constants.ts?","webpack:///xterm/./src/browser/renderer/atlas/DynamicCharAtlas.ts?","webpack:///xterm/./src/browser/renderer/atlas/LRUMap.ts?","webpack:///xterm/./src/browser/renderer/dom/DomRenderer.ts?","webpack:///xterm/./src/browser/renderer/dom/DomRendererRowFactory.ts?","webpack:///xterm/./src/browser/selection/SelectionModel.ts?","webpack:///xterm/./src/browser/services/CharSizeService.ts?","webpack:///xterm/./src/browser/services/CharacterJoinerService.ts?","webpack:///xterm/./src/browser/services/CoreBrowserService.ts?","webpack:///xterm/./src/browser/services/MouseService.ts?","webpack:///xterm/./src/browser/services/RenderService.ts?","webpack:///xterm/./src/browser/services/SelectionService.ts?","webpack:///xterm/./src/browser/services/Services.ts?","webpack:///xterm/./src/browser/services/SoundService.ts?","webpack:///xterm/./src/common/CircularList.ts?","webpack:///xterm/./src/common/Clone.ts?","webpack:///xterm/./src/common/Color.ts?","webpack:///xterm/./src/common/CoreTerminal.ts?","webpack:///xterm/./src/common/EventEmitter.ts?","webpack:///xterm/./src/common/InputHandler.ts?","webpack:///xterm/./src/common/Lifecycle.ts?","webpack:///xterm/./src/common/Platform.ts?","webpack:///xterm/./src/common/SortedList.ts?","webpack:///xterm/./src/common/TypedArrayUtils.ts?","webpack:///xterm/./src/common/WindowsMode.ts?","webpack:///xterm/./src/common/buffer/AttributeData.ts?","webpack:///xterm/./src/common/buffer/Buffer.ts?","webpack:///xterm/./src/common/buffer/BufferLine.ts?","webpack:///xterm/./src/common/buffer/BufferRange.ts?","webpack:///xterm/./src/common/buffer/BufferReflow.ts?","webpack:///xterm/./src/common/buffer/BufferSet.ts?","webpack:///xterm/./src/common/buffer/CellData.ts?","webpack:///xterm/./src/common/buffer/Constants.ts?","webpack:///xterm/./src/common/buffer/Marker.ts?","webpack:///xterm/./src/common/data/Charsets.ts?","webpack:///xterm/./src/common/data/EscapeSequences.ts?","webpack:///xterm/./src/common/input/Keyboard.ts?","webpack:///xterm/./src/common/input/TextDecoder.ts?","webpack:///xterm/./src/common/input/UnicodeV6.ts?","webpack:///xterm/./src/common/input/WriteBuffer.ts?","webpack:///xterm/./src/common/input/XParseColor.ts?","webpack:///xterm/./src/common/parser/Constants.ts?","webpack:///xterm/./src/common/parser/DcsParser.ts?","webpack:///xterm/./src/common/parser/EscapeSequenceParser.ts?","webpack:///xterm/./src/common/parser/OscParser.ts?","webpack:///xterm/./src/common/parser/Params.ts?","webpack:///xterm/./src/common/public/AddonManager.ts?","webpack:///xterm/./src/common/public/BufferApiView.ts?","webpack:///xterm/./src/common/public/BufferLineApiView.ts?","webpack:///xterm/./src/common/public/BufferNamespaceApi.ts?","webpack:///xterm/./src/common/public/ParserApi.ts?","webpack:///xterm/./src/common/public/UnicodeApi.ts?","webpack:///xterm/./src/common/services/BufferService.ts?","webpack:///xterm/./src/common/services/CharsetService.ts?","webpack:///xterm/./src/common/services/CoreMouseService.ts?","webpack:///xterm/./src/common/services/CoreService.ts?","webpack:///xterm/./src/common/services/DecorationService.ts?","webpack:///xterm/./src/common/services/DirtyRowService.ts?","webpack:///xterm/./src/common/services/InstantiationService.ts?","webpack:///xterm/./src/common/services/LogService.ts?","webpack:///xterm/./src/common/services/OptionsService.ts?","webpack:///xterm/./src/common/services/ServiceRegistry.ts?","webpack:///xterm/./src/common/services/Services.ts?","webpack:///xterm/./src/common/services/UnicodeService.ts?","webpack:///xterm/webpack/bootstrap?","webpack:///xterm/webpack/startup?","webpack:///./node_modules/@theia/terminal/src/browser/style/terminal-search.css?"],"sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `/********************************************************************************\n * Copyright (C) 2019 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n.theia-search-terminal-widget-parent {\n    background: var(--theia-sideBar-background);\n    position: absolute;\n    margin: 0px;\n    border: var(--theia-border-width) solid transparent;\n    padding: 0px;\n    top: 1px;\n    right: 19px;\n\n    z-index: 10;\n}\n\n.theia-search-terminal-widget-parent .theia-search-elem-box {\n    display: flex;\n    margin: 0px;\n    border: var(--theia-border-width) solid transparent;\n    padding: 0px;\n    align-items: center;\n    color: var(--theia-input-foreground);\n    background: var(--theia-input-background);\n}\n\n.theia-search-terminal-widget-parent .theia-search-elem-box input {\n    margin-left: 5px;\n    padding: 0px;\n    width: 100px;\n    height: 18px;\n    color: inherit;\n    background-color: inherit;\n    border: var(--theia-border-width) solid transparent;\n    outline: none;\n}\n\n.theia-search-terminal-widget-parent .theia-search-elem-box .search-elem.codicon {\n    height: 16px;\n    width: 18px;\n}\n\n.theia-search-terminal-widget-parent .search-elem.codicon {\n    border: var(--theia-border-width) solid transparent;\n    height: 20px;\n    width: 20px;\n    opacity: 0.7;\n    outline: none;\n    color: var(--theia-input-foreground);\n    padding: 0px;\n    margin-left: 3px;\n}\n\n.theia-search-terminal-widget-parent .search-elem:hover {\n    opacity: 1;\n}\n\n.theia-search-terminal-widget-parent .theia-search-elem-box.focused {\n    border: var(--theia-border-width) solid var(--theia-focusBorder);\n}\n\n.theia-search-terminal-widget-parent .theia-search-elem-box .search-elem.option-enabled {\n    border: var(--theia-border-width) solid var(--theia-inputOption-activeBorder);\n    background-color: var(--theia-inputOption-activeBackground);\n}\n\n.theia-search-terminal-widget-parent .theia-search-terminal-widget {\n    margin: 2px;\n    display: flex;\n    align-items: center;\n    font: var(--theia-content-font-size);\n    color: var(--theia-input-foreground);\n}\n\n.theia-search-terminal-widget-parent .theia-search-terminal-widget button {\n    background-color: transparent;\n}\n\n.theia-search-terminal-widget-parent .theia-search-terminal-widget button:focus {\n    border: var(--theia-border-width) var(--theia-focusBorder) solid;\n}\n`, \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/@theia/terminal/src/browser/style/terminal-search.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;iFAciF;;AAEjF;IACI,2CAA2C;IAC3C,kBAAkB;IAClB,WAAW;IACX,mDAAmD;IACnD,YAAY;IACZ,QAAQ;IACR,WAAW;;IAEX,WAAW;AACf;;AAEA;IACI,aAAa;IACb,WAAW;IACX,mDAAmD;IACnD,YAAY;IACZ,mBAAmB;IACnB,oCAAoC;IACpC,yCAAyC;AAC7C;;AAEA;IACI,gBAAgB;IAChB,YAAY;IACZ,YAAY;IACZ,YAAY;IACZ,cAAc;IACd,yBAAyB;IACzB,mDAAmD;IACnD,aAAa;AACjB;;AAEA;IACI,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,mDAAmD;IACnD,YAAY;IACZ,WAAW;IACX,YAAY;IACZ,aAAa;IACb,oCAAoC;IACpC,YAAY;IACZ,gBAAgB;AACpB;;AAEA;IACI,UAAU;AACd;;AAEA;IACI,gEAAgE;AACpE;;AAEA;IACI,6EAA6E;IAC7E,2DAA2D;AAC/D;;AAEA;IACI,WAAW;IACX,aAAa;IACb,mBAAmB;IACnB,oCAAoC;IACpC,oCAAoC;AACxC;;AAEA;IACI,6BAA6B;AACjC;;AAEA;IACI,gEAAgE;AACpE\",\"sourcesContent\":[\"/********************************************************************************\\n * Copyright (C) 2019 Red Hat, Inc. and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-search-terminal-widget-parent {\\n    background: var(--theia-sideBar-background);\\n    position: absolute;\\n    margin: 0px;\\n    border: var(--theia-border-width) solid transparent;\\n    padding: 0px;\\n    top: 1px;\\n    right: 19px;\\n\\n    z-index: 10;\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box {\\n    display: flex;\\n    margin: 0px;\\n    border: var(--theia-border-width) solid transparent;\\n    padding: 0px;\\n    align-items: center;\\n    color: var(--theia-input-foreground);\\n    background: var(--theia-input-background);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box input {\\n    margin-left: 5px;\\n    padding: 0px;\\n    width: 100px;\\n    height: 18px;\\n    color: inherit;\\n    background-color: inherit;\\n    border: var(--theia-border-width) solid transparent;\\n    outline: none;\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box .search-elem.codicon {\\n    height: 16px;\\n    width: 18px;\\n}\\n\\n.theia-search-terminal-widget-parent .search-elem.codicon {\\n    border: var(--theia-border-width) solid transparent;\\n    height: 20px;\\n    width: 20px;\\n    opacity: 0.7;\\n    outline: none;\\n    color: var(--theia-input-foreground);\\n    padding: 0px;\\n    margin-left: 3px;\\n}\\n\\n.theia-search-terminal-widget-parent .search-elem:hover {\\n    opacity: 1;\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box.focused {\\n    border: var(--theia-border-width) solid var(--theia-focusBorder);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-elem-box .search-elem.option-enabled {\\n    border: var(--theia-border-width) solid var(--theia-inputOption-activeBorder);\\n    background-color: var(--theia-inputOption-activeBackground);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-terminal-widget {\\n    margin: 2px;\\n    display: flex;\\n    align-items: center;\\n    font: var(--theia-content-font-size);\\n    color: var(--theia-input-foreground);\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-terminal-widget button {\\n    background-color: transparent;\\n}\\n\\n.theia-search-terminal-widget-parent .theia-search-terminal-widget button:focus {\\n    border: var(--theia-border-width) var(--theia-focusBorder) solid;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n// *****************************************************************************\nimport { Event } from '@theia/core/lib/common/event';\nimport { WidgetOpenerOptions } from '@theia/core/lib/browser';\nimport { TerminalWidgetOptions, TerminalWidget } from './terminal-widget';\n\n/**\n * Service manipulating terminal widgets.\n */\nexport const TerminalService = Symbol('TerminalService');\nexport interface TerminalService {\n\n    /**\n     * Create new terminal with predefined options.\n     * @param options - terminal options.\n     */\n    newTerminal(options: TerminalWidgetOptions): Promise<TerminalWidget>;\n\n    open(terminal: TerminalWidget, options?: WidgetOpenerOptions): void;\n\n    readonly all: TerminalWidget[];\n\n    /**\n     * @param id - the widget id (NOT the terminal id!)\n     * @return the widget\n     */\n    getById(id: string): TerminalWidget | undefined;\n\n    /**\n     * @param id - the terminal id (NOT the terminal widget id!)\n     * @return the widget\n     */\n    getByTerminalId(terminalId: number): TerminalWidget | undefined;\n\n    /**\n     * Returns detected default shell.\n     */\n    getDefaultShell(): Promise<string>;\n\n    readonly onDidCreateTerminal: Event<TerminalWidget>;\n\n    readonly currentTerminal: TerminalWidget | undefined;\n\n    readonly onDidChangeCurrentTerminal: Event<TerminalWidget | undefined>;\n\n    readonly lastUsedTerminal: TerminalWidget | undefined;\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Event, ViewColumn } from '@theia/core';\nimport { BaseWidget } from '@theia/core/lib/browser';\nimport { CommandLineOptions } from '@theia/process/lib/common/shell-command-builder';\nimport { TerminalSearchWidget } from '../search/terminal-search-widget';\nimport { TerminalProcessInfo, TerminalExitReason } from '../../common/base-terminal-protocol';\nimport URI from '@theia/core/lib/common/uri';\n\nexport interface TerminalDimensions {\n    cols: number;\n    rows: number;\n}\n\nexport interface TerminalExitStatus {\n    readonly code: number | undefined;\n    readonly reason: TerminalExitReason;\n}\n\nexport type TerminalLocationOptions = TerminalLocation | TerminalEditorLocation | TerminalSplitLocation;\n\nexport enum TerminalLocation {\n    Panel = 1,\n    Editor = 2\n}\n\nexport interface TerminalEditorLocation {\n    readonly viewColumn: ViewColumn;\n    readonly preserveFocus?: boolean;\n}\n\nexport interface TerminalSplitLocation {\n    readonly parentTerminal: string;\n}\n\n/**\n * Terminal UI widget.\n */\nexport abstract class TerminalWidget extends BaseWidget {\n\n    abstract processId: Promise<number>;\n    /**\n     * Get the current executable and arguments.\n     */\n    abstract processInfo: Promise<TerminalProcessInfo>;\n\n    /** Terminal kind that indicates whether a terminal is created by a user or by some extension for a user */\n    abstract readonly kind: 'user' | string;\n\n    abstract readonly terminalId: number;\n\n    abstract readonly dimensions: TerminalDimensions;\n\n    abstract readonly exitStatus: TerminalExitStatus | undefined;\n\n    /** Terminal widget can be hidden from users until explicitly shown once. */\n    abstract readonly hiddenFromUser: boolean;\n\n    /** The position of the terminal widget. */\n    abstract readonly location: TerminalLocationOptions;\n\n    /** The last CWD assigned to the terminal, useful when attempting getCwdURI on a task terminal fails */\n    lastCwd: URI;\n\n    /**\n     * Start terminal and return terminal id.\n     * @param id - terminal id.\n     */\n    abstract start(id?: number): Promise<number>;\n\n    /**\n     * Send text to the terminal server.\n     * @param text - text content.\n     */\n    abstract sendText(text: string): void;\n\n    /**\n     * Resolves when the command is successfully sent, this doesn't mean that it\n     * was evaluated. Might reject if terminal wasn't properly started yet.\n     *\n     * Note that this method will try to escape your arguments as if it was\n     * someone inputting everything in a shell.\n     *\n     * Supported shells: `bash`, `cmd.exe`, `wsl.exe`, `pwsh/powershell.exe`\n     */\n    abstract executeCommand(commandOptions: CommandLineOptions): Promise<void>;\n\n    /** Event that fires when the terminal is connected or reconnected */\n    abstract onDidOpen: Event<void>;\n\n    /** Event that fires when the terminal fails to connect or reconnect */\n    abstract onDidOpenFailure: Event<void>;\n\n    /** Event that fires when the terminal size changed */\n    abstract onSizeChanged: Event<{ cols: number; rows: number; }>;\n\n    /** Event that fires when the terminal receives a key event. */\n    abstract onKey: Event<{ key: string, domEvent: KeyboardEvent }>;\n\n    /** Event that fires when the terminal input data */\n    abstract onData: Event<string>;\n\n    abstract scrollLineUp(): void;\n\n    abstract scrollLineDown(): void;\n\n    abstract scrollToTop(): void;\n\n    abstract scrollToBottom(): void;\n\n    abstract scrollPageUp(): void;\n\n    abstract scrollPageDown(): void;\n\n    abstract resetTerminal(): void;\n    /**\n     * Event which fires when terminal did closed. Event value contains closed terminal widget definition.\n     */\n    abstract onTerminalDidClose: Event<TerminalWidget>;\n\n    /**\n     * Cleat terminal output.\n     */\n    abstract clearOutput(): void;\n\n    /**\n     * Select entire content in the terminal.\n     */\n    abstract selectAll(): void;\n\n    abstract writeLine(line: string): void;\n\n    abstract write(data: string): void;\n\n    abstract resize(cols: number, rows: number): void;\n\n    /**\n     * Return Terminal search box widget.\n     */\n    abstract getSearchBox(): TerminalSearchWidget;\n    /**\n     * Whether the terminal process has child processes.\n     */\n    abstract hasChildProcesses(): Promise<boolean>;\n\n    abstract setTitle(title: string): void;\n\n    abstract waitOnExit(waitOnExit?: boolean | string): void;\n}\n\n/**\n * Terminal widget options.\n */\nexport const TerminalWidgetOptions = Symbol('TerminalWidgetOptions');\nexport interface TerminalWidgetOptions {\n\n    /**\n     * Human readable terminal representation on the UI.\n     */\n    readonly title?: string;\n\n    /**\n     * icon class\n     */\n    readonly iconClass?: string;\n\n    /**\n     * Path to the executable shell. For example: `/bin/bash`, `bash`, `sh`.\n     */\n    readonly shellPath?: string;\n\n    /**\n     * Args for the custom shell executable. A string can be used on Windows only which allows\n     * specifying shell args in [command-line format](https://msdn.microsoft.com/en-au/08dfcab2-eb6e-49a4-80eb-87d4076c98c6).\n     */\n    readonly shellArgs?: string[] | string;\n\n    /**\n     * Current working directory.\n     */\n    readonly cwd?: string | URI;\n\n    /**\n     * Environment variables for terminal.\n     */\n    readonly env?: { [key: string]: string | null };\n\n    /**\n     * Whether the terminal process environment should be exactly as provided in `env`.\n     */\n    readonly strictEnv?: boolean;\n\n    /**\n     * In case `destroyTermOnClose` is true - terminal process will be destroyed on close terminal widget, otherwise will be kept\n     * alive.\n     */\n    readonly destroyTermOnClose?: boolean;\n\n    /**\n     * Terminal server side can send to the client `terminal title` to display this value on the UI. If\n     * useServerTitle = true then display this title, otherwise display title defined by 'title' argument.\n     */\n    readonly useServerTitle?: boolean;\n\n    /**\n     * Whether it is a pseudo terminal where an extension controls its input and output.\n     */\n    readonly isPseudoTerminal?: boolean;\n\n    /**\n     * Terminal id. Should be unique for all DOM.\n     */\n    readonly id?: string;\n\n    /**\n     * Terminal attributes. Can be useful to apply some implementation specific information.\n     */\n    readonly attributes?: { [key: string]: string | null };\n\n    /**\n     * Terminal kind that indicates whether a terminal is created by a user or by some extension for a user\n     */\n    readonly kind?: 'user' | string;\n\n    /**\n     * When enabled the terminal will run the process as normal but not be surfaced to the user until `Terminal.show` is called.\n     */\n    readonly hideFromUser?: boolean;\n\n    readonly location?: TerminalLocationOptions;\n\n    /**\n     * When enabled, the terminal will not be persisted across window reloads.\n     */\n    readonly isTransient?: boolean;\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject, postConstruct } from '@theia/core/shared/inversify';\nimport { ReactWidget } from '@theia/core/lib/browser/widgets/react-widget';\nimport * as React from '@theia/core/shared/react';\nimport '../../../src/browser/style/terminal-search.css';\nimport { Terminal } from 'xterm';\nimport { SearchAddon, ISearchOptions } from 'xterm-addon-search';\nimport { codicon, Key } from '@theia/core/lib/browser';\n\nexport const TERMINAL_SEARCH_WIDGET_FACTORY_ID = 'terminal-search';\nexport const TerminalSearchWidgetFactory = Symbol('TerminalSearchWidgetFactory');\nexport type TerminalSearchWidgetFactory = (terminal: Terminal) => TerminalSearchWidget;\n\n@injectable()\nexport class TerminalSearchWidget extends ReactWidget {\n\n    private searchInput: HTMLInputElement | null;\n    private searchBox: HTMLDivElement | null;\n    private searchOptions: ISearchOptions = {};\n    private searchAddon: SearchAddon;\n\n    @inject(Terminal)\n    protected terminal: Terminal;\n\n    @postConstruct()\n    protected init(): void {\n        this.node.classList.add('theia-search-terminal-widget-parent');\n\n        this.searchAddon = new SearchAddon();\n        this.terminal.loadAddon(this.searchAddon);\n\n        this.hide();\n        this.update();\n    }\n\n    protected render(): React.ReactNode {\n        return <div className='theia-search-terminal-widget'>\n            <div className='theia-search-elem-box' ref={searchBox => this.searchBox = searchBox} >\n                <input\n                    title='Find'\n                    type='text'\n                    spellCheck='false'\n                    placeholder='Find'\n                    ref={ip => this.searchInput = ip}\n                    onKeyUp={this.onInputChanged}\n                    onFocus={this.onSearchInputFocus}\n                    onBlur={this.onSearchInputBlur}\n                />\n                <div title='Match case' tabIndex={0} className={'search-elem ' + codicon('case-sensitive')} onClick={this.handleCaseSensitiveOptionClicked}></div>\n                <div title='Match whole word' tabIndex={0} className={'search-elem ' + codicon('whole-word')} onClick={this.handleWholeWordOptionClicked}></div>\n                <div title='Use regular expression' tabIndex={0} className={'search-elem ' + codicon('regex')} onClick={this.handleRegexOptionClicked}></div>\n            </div>\n            <button title='Previous match' className={'search-elem ' + codicon('arrow-up')} onClick={this.handlePreviousButtonClicked}></button>\n            <button title='Next match' className={'search-elem ' + codicon('arrow-down')} onClick={this.handleNextButtonClicked}></button>\n            <button title='Close' className={'search-elem ' + codicon('close')} onClick={this.handleHide}></button>\n        </div>;\n    }\n\n    onSearchInputFocus = (): void => {\n        if (this.searchBox) {\n            this.searchBox.classList.add('focused');\n        }\n    };\n\n    onSearchInputBlur = (): void => {\n        if (this.searchBox) {\n            this.searchBox.classList.remove('focused');\n        }\n    };\n\n    private handleHide = (): void => {\n        this.hide();\n    };\n\n    private handleCaseSensitiveOptionClicked = (event: React.MouseEvent<HTMLSpanElement>): void => {\n        this.searchOptions.caseSensitive = !this.searchOptions.caseSensitive;\n        this.updateSearchInputBox(this.searchOptions.caseSensitive, event.currentTarget);\n    };\n\n    private handleWholeWordOptionClicked = (event: React.MouseEvent<HTMLSpanElement>): void => {\n        this.searchOptions.wholeWord = !this.searchOptions.wholeWord;\n        this.updateSearchInputBox(this.searchOptions.wholeWord, event.currentTarget);\n    };\n\n    private handleRegexOptionClicked = (event: React.MouseEvent<HTMLSpanElement>): void => {\n        this.searchOptions.regex = !this.searchOptions.regex;\n        this.updateSearchInputBox(this.searchOptions.regex, event.currentTarget);\n    };\n\n    private updateSearchInputBox(enable: boolean, optionElement: HTMLSpanElement): void {\n        if (enable) {\n            optionElement.classList.add('option-enabled');\n        } else {\n            optionElement.classList.remove('option-enabled');\n        }\n        this.searchInput!.focus();\n    }\n\n    private onInputChanged = (event: React.KeyboardEvent): void => {\n        // move to previous search result on `Shift + Enter`\n        if (event && event.shiftKey && event.keyCode === Key.ENTER.keyCode) {\n            this.search(false, 'previous');\n            return;\n        }\n        // move to next search result on `Enter`\n        if (event && event.keyCode === Key.ENTER.keyCode) {\n            this.search(false, 'next');\n            return;\n        }\n\n        this.search(true, 'next');\n    };\n\n    search(incremental: boolean, searchDirection: 'next' | 'previous'): void {\n        if (this.searchInput) {\n            this.searchOptions.incremental = incremental;\n            const searchText = this.searchInput.value;\n\n            if (searchDirection === 'next') {\n                this.searchAddon.findNext(searchText, this.searchOptions);\n            }\n\n            if (searchDirection === 'previous') {\n                this.searchAddon.findPrevious(searchText, this.searchOptions);\n            }\n        }\n    }\n\n    private handleNextButtonClicked = (): void => {\n        this.search(false, 'next');\n    };\n\n    private handlePreviousButtonClicked = (): void => {\n        this.search(false, 'previous');\n    };\n\n    override onAfterHide(): void {\n        this.terminal.focus();\n    }\n\n    override onAfterShow(): void {\n        if (this.searchInput) {\n            this.searchInput.select();\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2022 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { URI } from '@theia/core';\nimport { TerminalService } from './base/terminal-service';\nimport { TerminalWidget, TerminalWidgetOptions } from './base/terminal-widget';\nimport { TerminalProfile } from './terminal-profile-service';\n\nexport class ShellTerminalProfile implements TerminalProfile {\n    constructor(protected readonly terminalService: TerminalService, protected readonly options: TerminalWidgetOptions) { }\n\n    async start(): Promise<TerminalWidget> {\n        const widget = await this.terminalService.newTerminal(this.options);\n        widget.start();\n        return widget;\n    }\n\n    /**\n     * Makes a copy of this profile modified with the options given\n     * as an argument.\n     * @param options the options to override\n     * @returns a modified copy of this profile\n     */\n    modify(options: { cwd?: string | URI }): TerminalProfile {\n        return new ShellTerminalProfile(this.terminalService, { ...this.options, ...options });\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 Red Hat, Inc. and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, postConstruct } from '@theia/core/shared/inversify';\nimport { isFirefox } from '@theia/core/lib/browser';\n\n@injectable()\nexport class TerminalCopyOnSelectionHandler {\n\n    private textToCopy: string;\n    private interceptCopy: boolean;\n\n    private copyListener = (ev: ClipboardEvent) => {\n        if (this.interceptCopy && ev.clipboardData) {\n            ev.clipboardData.setData('text/plain', this.textToCopy);\n            ev.preventDefault();\n        }\n    };\n\n    @postConstruct()\n    protected init(): void {\n        document.addEventListener('copy', this.copyListener);\n    }\n\n    private async clipBoardCopyIsGranted(): Promise<boolean> {\n        // Unfortunately Firefox doesn't support permission check `clipboard-write`, so let try to copy anyway,\n        if (isFirefox) {\n            return true;\n        }\n        try {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const permissions = (navigator as any).permissions;\n            const { state } = await permissions.query({ name: 'clipboard-write' });\n            if (state === 'granted') {\n                return true;\n            }\n        } catch (e) { }\n\n        return false;\n    }\n\n    private executeCommandCopy(): void {\n        try {\n            this.interceptCopy = true;\n            document.execCommand('copy');\n            this.interceptCopy = false;\n        } catch (e) {\n            // do nothing\n        }\n    }\n\n    private async writeToClipBoard(): Promise<void> {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const clipboard = (navigator as any).clipboard;\n\n        if (!clipboard) {\n            this.executeCommandCopy();\n            return;\n        }\n\n        try {\n            await clipboard.writeText(this.textToCopy);\n        } catch (e) {\n            this.executeCommandCopy();\n        }\n    }\n\n    async copy(text: string): Promise<void> {\n        this.textToCopy = text;\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const permissions = (navigator as any).permissions;\n        if (permissions && permissions.query && await this.clipBoardCopyIsGranted()) {\n            await this.writeToClipBoard();\n        } else {\n            this.executeCommandCopy();\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { inject, injectable, optional, postConstruct } from '@theia/core/shared/inversify';\nimport {\n    CommandContribution,\n    Command,\n    CommandRegistry,\n    DisposableCollection,\n    MenuContribution,\n    MenuModelRegistry,\n    isOSX,\n    SelectionService,\n    Emitter,\n    Event,\n    ViewColumn,\n    OS\n} from '@theia/core/lib/common';\nimport {\n    ApplicationShell, KeybindingContribution, KeyCode, Key, WidgetManager, PreferenceService,\n    KeybindingRegistry, LabelProvider, WidgetOpenerOptions, StorageService, QuickInputService,\n    codicon, CommonCommands, FrontendApplicationContribution, OnWillStopAction, Dialog, ConfirmDialog, FrontendApplication, PreferenceScope\n} from '@theia/core/lib/browser';\nimport { TabBarToolbarContribution, TabBarToolbarRegistry } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { TERMINAL_WIDGET_FACTORY_ID, TerminalWidgetFactoryOptions, TerminalWidgetImpl } from './terminal-widget-impl';\nimport { TerminalKeybindingContexts } from './terminal-keybinding-contexts';\nimport { TerminalService } from './base/terminal-service';\nimport { TerminalWidgetOptions, TerminalWidget, TerminalLocation } from './base/terminal-widget';\nimport { ContributedTerminalProfileStore, NULL_PROFILE, TerminalProfile, TerminalProfileService, TerminalProfileStore, UserTerminalProfileStore } from './terminal-profile-service';\nimport { UriAwareCommandHandler } from '@theia/core/lib/common/uri-command-handler';\nimport { ShellTerminalServerProxy } from '../common/shell-terminal-protocol';\nimport URI from '@theia/core/lib/common/uri';\nimport { MAIN_MENU_BAR } from '@theia/core';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { ContextKeyService } from '@theia/core/lib/browser/context-key-service';\nimport { ColorContribution } from '@theia/core/lib/browser/color-application-contribution';\nimport { ColorRegistry } from '@theia/core/lib/browser/color-registry';\nimport { terminalAnsiColorMap } from './terminal-theme-service';\nimport { FileService } from '@theia/filesystem/lib/browser/file-service';\nimport { FileStat } from '@theia/filesystem/lib/common/files';\nimport { TerminalWatcher } from '../common/terminal-watcher';\nimport {\n    ENVIRONMENT_VARIABLE_COLLECTIONS_KEY,\n    SerializableExtensionEnvironmentVariableCollection\n} from '../common/base-terminal-protocol';\nimport { nls } from '@theia/core/lib/common/nls';\nimport { Profiles, TerminalPreferences } from './terminal-preferences';\nimport { ShellTerminalProfile } from './shell-terminal-profile';\nimport { VariableResolverService } from '@theia/variable-resolver/lib/browser';\n\nexport namespace TerminalMenus {\n    export const TERMINAL = [...MAIN_MENU_BAR, '7_terminal'];\n    export const TERMINAL_NEW = [...TERMINAL, '1_terminal'];\n\n    export const TERMINAL_TASKS = [...TERMINAL, '2_terminal'];\n    export const TERMINAL_TASKS_INFO = [...TERMINAL_TASKS, '3_terminal'];\n    export const TERMINAL_TASKS_CONFIG = [...TERMINAL_TASKS, '4_terminal'];\n    export const TERMINAL_NAVIGATOR_CONTEXT_MENU = ['navigator-context-menu', 'navigation'];\n    export const TERMINAL_OPEN_EDITORS_CONTEXT_MENU = ['open-editors-context-menu', 'navigation'];\n\n    export const TERMINAL_CONTEXT_MENU = ['terminal-context-menu'];\n}\n\nexport namespace TerminalCommands {\n    const TERMINAL_CATEGORY = 'Terminal';\n    export const NEW = Command.toDefaultLocalizedCommand({\n        id: 'terminal:new',\n        category: TERMINAL_CATEGORY,\n        label: 'Create New Terminal'\n    });\n    export const PROFILE_NEW = Command.toLocalizedCommand({\n        id: 'terminal:new:profile',\n        category: TERMINAL_CATEGORY,\n        label: 'Create New Integrated Terminal from a Profile'\n    });\n    export const PROFILE_DEFAULT = Command.toLocalizedCommand({\n        id: 'terminal:profile:default',\n        category: TERMINAL_CATEGORY,\n        label: 'Choose the default Terminal Profile'\n    });\n    export const NEW_ACTIVE_WORKSPACE = Command.toDefaultLocalizedCommand({\n        id: 'terminal:new:active:workspace',\n        category: TERMINAL_CATEGORY,\n        label: 'Create New Terminal (In Active Workspace)'\n    });\n    export const TERMINAL_CLEAR = Command.toDefaultLocalizedCommand({\n        id: 'terminal:clear',\n        category: TERMINAL_CATEGORY,\n        label: 'Clear'\n    });\n    export const TERMINAL_CONTEXT = Command.toDefaultLocalizedCommand({\n        id: 'terminal:context',\n        category: TERMINAL_CATEGORY,\n        label: 'Open in Terminal'\n    });\n    export const SPLIT = Command.toDefaultLocalizedCommand({\n        id: 'terminal:split',\n        category: TERMINAL_CATEGORY,\n        label: 'Split Terminal'\n    });\n    export const TERMINAL_FIND_TEXT = Command.toDefaultLocalizedCommand({\n        id: 'terminal:find',\n        category: TERMINAL_CATEGORY,\n        label: 'Find'\n    });\n    export const TERMINAL_FIND_TEXT_CANCEL = Command.toDefaultLocalizedCommand({\n        id: 'terminal:find:cancel',\n        category: TERMINAL_CATEGORY,\n        label: 'Hide Find'\n    });\n\n    export const SCROLL_LINE_UP = Command.toDefaultLocalizedCommand({\n        id: 'terminal:scroll:line:up',\n        category: TERMINAL_CATEGORY,\n        label: 'Scroll Up (Line)'\n    });\n    export const SCROLL_LINE_DOWN = Command.toDefaultLocalizedCommand({\n        id: 'terminal:scroll:line:down',\n        category: TERMINAL_CATEGORY,\n        label: 'Scroll Down (Line)'\n    });\n    export const SCROLL_TO_TOP = Command.toDefaultLocalizedCommand({\n        id: 'terminal:scroll:top',\n        category: TERMINAL_CATEGORY,\n        label: 'Scroll to Top'\n    });\n    export const SCROLL_PAGE_UP = Command.toDefaultLocalizedCommand({\n        id: 'terminal:scroll:page:up',\n        category: TERMINAL_CATEGORY,\n        label: 'Scroll Up (Page)'\n    });\n    export const SCROLL_PAGE_DOWN = Command.toDefaultLocalizedCommand({\n        id: 'terminal:scroll:page:down',\n        category: TERMINAL_CATEGORY,\n        label: 'Scroll Down (Page)'\n    });\n    export const TOGGLE_TERMINAL = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.terminal.toggleTerminal',\n        category: TERMINAL_CATEGORY,\n        label: 'Toggle Terminal'\n    });\n    export const KILL_TERMINAL = Command.toDefaultLocalizedCommand({\n        id: 'terminal:kill',\n        category: TERMINAL_CATEGORY,\n        label: 'Kill Terminal'\n    });\n    export const SELECT_ALL: Command = {\n        id: 'terminal:select:all',\n        label: CommonCommands.SELECT_ALL.label,\n        category: TERMINAL_CATEGORY,\n    };\n\n    /**\n     * Command that displays all terminals that are currently opened\n     */\n    export const SHOW_ALL_OPENED_TERMINALS = Command.toDefaultLocalizedCommand({\n        id: 'workbench.action.showAllTerminals',\n        category: CommonCommands.VIEW_CATEGORY,\n        label: 'Show All Opened Terminals'\n    });\n}\n\n@injectable()\nexport class TerminalFrontendContribution implements FrontendApplicationContribution, TerminalService, CommandContribution, MenuContribution,\n    KeybindingContribution, TabBarToolbarContribution, ColorContribution {\n\n    @inject(ApplicationShell) protected readonly shell: ApplicationShell;\n    @inject(ShellTerminalServerProxy) protected readonly shellTerminalServer: ShellTerminalServerProxy;\n    @inject(WidgetManager) protected readonly widgetManager: WidgetManager;\n    @inject(FileService) protected readonly fileService: FileService;\n    @inject(SelectionService) protected readonly selectionService: SelectionService;\n\n    @inject(LabelProvider)\n    protected readonly labelProvider: LabelProvider;\n\n    @inject(QuickInputService) @optional()\n    protected readonly quickInputService: QuickInputService;\n\n    @inject(WorkspaceService)\n    protected readonly workspaceService: WorkspaceService;\n\n    @inject(TerminalProfileService)\n    protected readonly profileService: TerminalProfileService;\n\n    @inject(UserTerminalProfileStore)\n    protected readonly userProfileStore: TerminalProfileStore;\n\n    @inject(ContributedTerminalProfileStore)\n    protected readonly contributedProfileStore: TerminalProfileStore;\n\n    @inject(TerminalWatcher)\n    protected readonly terminalWatcher: TerminalWatcher;\n\n    @inject(VariableResolverService)\n    protected readonly variableResolver: VariableResolverService;\n\n    @inject(StorageService)\n    protected readonly storageService: StorageService;\n\n    @inject(PreferenceService)\n    protected readonly preferenceService: PreferenceService;\n\n    @inject(TerminalPreferences)\n    protected terminalPreferences: TerminalPreferences;\n\n    protected mergePreferencesPromise: Promise<void> = Promise.resolve();\n\n    protected readonly onDidCreateTerminalEmitter = new Emitter<TerminalWidget>();\n    readonly onDidCreateTerminal: Event<TerminalWidget> = this.onDidCreateTerminalEmitter.event;\n\n    protected readonly onDidChangeCurrentTerminalEmitter = new Emitter<TerminalWidget | undefined>();\n    readonly onDidChangeCurrentTerminal: Event<TerminalWidget | undefined> = this.onDidChangeCurrentTerminalEmitter.event;\n\n    @inject(ContextKeyService)\n    protected readonly contextKeyService: ContextKeyService;\n\n    @postConstruct()\n    protected init(): void {\n        this.shell.onDidChangeCurrentWidget(() => this.updateCurrentTerminal());\n        this.widgetManager.onDidCreateWidget(({ widget }) => {\n            if (widget instanceof TerminalWidget) {\n                this.updateCurrentTerminal();\n                this.onDidCreateTerminalEmitter.fire(widget);\n                this.setLastUsedTerminal(widget);\n            }\n        });\n\n        const terminalFocusKey = this.contextKeyService.createKey<boolean>('terminalFocus', false);\n        const updateFocusKey = () => terminalFocusKey.set(this.shell.activeWidget instanceof TerminalWidget);\n        updateFocusKey();\n        this.shell.onDidChangeActiveWidget(updateFocusKey);\n\n        this.terminalWatcher.onStoreTerminalEnvVariablesRequested(data => {\n            this.storageService.setData(ENVIRONMENT_VARIABLE_COLLECTIONS_KEY, data);\n        });\n        this.terminalWatcher.onUpdateTerminalEnvVariablesRequested(() => {\n            this.storageService.getData<string>(ENVIRONMENT_VARIABLE_COLLECTIONS_KEY).then(data => {\n                if (data) {\n                    const collectionsJson: SerializableExtensionEnvironmentVariableCollection[] = JSON.parse(data);\n                    collectionsJson.forEach(c => this.shellTerminalServer.setCollection(c.extensionIdentifier, true, c.collection));\n                }\n            });\n        });\n    }\n\n    async onStart(app: FrontendApplication): Promise<void> {\n        await this.contributeDefaultProfiles();\n\n        this.terminalPreferences.onPreferenceChanged(e => {\n            if (e.preferenceName.startsWith('terminal.integrated.')) {\n                this.mergePreferencesPromise = this.mergePreferencesPromise.finally(() => this.mergePreferences());\n            }\n        });\n        this.mergePreferencesPromise = this.mergePreferencesPromise.finally(() => this.mergePreferences());\n\n        // extension contributions get read after this point: need to set the default profile if necessary\n        this.profileService.onAdded(id => {\n            let defaultProfileId: string | undefined;\n            switch (OS.backend.type()) {\n                case OS.Type.Windows: {\n                    defaultProfileId = this.terminalPreferences['terminal.integrated.defaultProfile.windows'];\n                    break;\n                }\n                case OS.Type.Linux: {\n                    defaultProfileId = this.terminalPreferences['terminal.integrated.defaultProfile.linux'];\n                    break;\n                }\n                case OS.Type.OSX: {\n                    defaultProfileId = this.terminalPreferences['terminal.integrated.defaultProfile.osx'];\n                    break;\n                }\n            }\n            if (defaultProfileId) {\n                this.profileService.setDefaultProfile(defaultProfileId);\n            }\n        });\n    }\n\n    async contributeDefaultProfiles(): Promise<void> {\n        if (OS.backend.isWindows) {\n            this.contributedProfileStore.registerTerminalProfile('cmd', new ShellTerminalProfile(this, {\n                shellPath: await this.resolveShellPath([\n                    '${env:windir}\\\\Sysnative\\\\cmd.exe',\n                    '${env:windir}\\\\System32\\\\cmd.exe'\n                ])!\n            }));\n        } else {\n            this.contributedProfileStore.registerTerminalProfile('SHELL', new ShellTerminalProfile(this, {\n                shellPath: await this.resolveShellPath('${SHELL}')!,\n                shellArgs: ['-l']\n            }));\n        }\n\n        // contribute default profiles based on legacy preferences\n    }\n\n    protected async mergePreferences(): Promise<void> {\n        let profiles: Profiles;\n        let defaultProfile: string;\n        let legacyShellPath: string | undefined;\n        let legacyShellArgs: string[] | undefined;\n        const removed = new Set(this.userProfileStore.all.map(([id, profile]) => id));\n        switch (OS.backend.type()) {\n            case OS.Type.Windows: {\n                profiles = this.terminalPreferences['terminal.integrated.profiles.windows'];\n                defaultProfile = this.terminalPreferences['terminal.integrated.defaultProfile.windows'];\n                legacyShellPath = this.terminalPreferences['terminal.integrated.shell.windows'] ?? undefined;\n                legacyShellArgs = this.terminalPreferences['terminal.integrated.shellArgs.windows'];\n                break;\n            }\n            case OS.Type.Linux: {\n                profiles = this.terminalPreferences['terminal.integrated.profiles.linux'];\n                defaultProfile = this.terminalPreferences['terminal.integrated.defaultProfile.linux'];\n                legacyShellPath = this.terminalPreferences['terminal.integrated.shell.linux'] ?? undefined;\n                legacyShellArgs = this.terminalPreferences['terminal.integrated.shellArgs.linux'];\n                break;\n            }\n            case OS.Type.OSX: {\n                profiles = this.terminalPreferences['terminal.integrated.profiles.osx'];\n                defaultProfile = this.terminalPreferences['terminal.integrated.defaultProfile.osx'];\n                legacyShellPath = this.terminalPreferences['terminal.integrated.shell.osx'] ?? undefined;\n                legacyShellArgs = this.terminalPreferences['terminal.integrated.shellArgs.osx'];\n                break;\n            }\n        }\n        if (profiles) {\n            for (const id of Object.getOwnPropertyNames(profiles)) {\n                const profile = profiles[id];\n                removed.delete(id);\n                if (profile) {\n                    const shellPath = await this.resolveShellPath(profile.path);\n\n                    if (shellPath) {\n                        const options: TerminalWidgetOptions = {\n                            shellPath: shellPath,\n                            shellArgs: profile.args ? await this.variableResolver.resolve(profile.args) : undefined,\n                            useServerTitle: profile.overrideName ? false : undefined,\n                            env: profile.env ? await this.variableResolver.resolve(profile.env) : undefined,\n                            title: profile.overrideName ? id : undefined\n                        };\n\n                        this.userProfileStore.registerTerminalProfile(id, new ShellTerminalProfile(this, options));\n                    }\n                } else {\n                    this.userProfileStore.registerTerminalProfile(id, NULL_PROFILE);\n                }\n            }\n        }\n\n        if (legacyShellPath) {\n            this.userProfileStore.registerTerminalProfile('Legacy Shell Preferences', new ShellTerminalProfile(this, {\n                shellPath: legacyShellPath!,\n                shellArgs: legacyShellArgs\n            }));\n            // if no other default is set, use the legacy preferences as default if they exist\n            this.profileService.setDefaultProfile('Legacy Shell Preferences');\n        }\n\n        if (defaultProfile && this.profileService.getProfile(defaultProfile)) {\n            this.profileService.setDefaultProfile(defaultProfile);\n        }\n\n        for (const id of removed) {\n            this.userProfileStore.unregisterTerminalProfile(id);\n        }\n    }\n\n    protected async resolveShellPath(path: string | string[] | undefined): Promise<string | undefined> {\n        if (!path) {\n            return undefined;\n        }\n        if (typeof path === 'string') {\n            path = [path];\n        }\n        for (const p of path) {\n            const resolved = await this.variableResolver.resolve(p);\n            if (resolved) {\n                const resolvedURI = URI.fromFilePath(resolved);\n                if (await this.fileService.exists(resolvedURI)) {\n                    return resolved;\n                }\n            }\n        }\n        return undefined;\n    }\n\n    onWillStop(): OnWillStopAction<number> | undefined {\n        const preferenceValue = this.terminalPreferences['terminal.integrated.confirmOnExit'];\n        if (preferenceValue !== 'never') {\n            const allTerminals = this.widgetManager.getWidgets(TERMINAL_WIDGET_FACTORY_ID) as TerminalWidget[];\n            if (allTerminals.length) {\n                return {\n                    prepare: async () => {\n                        if (preferenceValue === 'always') {\n                            return allTerminals.length;\n                        } else {\n                            const activeTerminals = await Promise.all(allTerminals.map(widget => widget.hasChildProcesses()))\n                                .then(hasChildProcesses => hasChildProcesses.filter(hasChild => hasChild));\n                            return activeTerminals.length;\n                        }\n                    },\n                    action: async activeTerminalCount => activeTerminalCount === 0 || this.confirmExitWithActiveTerminals(activeTerminalCount),\n                    reason: 'Active integrated terminal',\n                };\n            }\n        }\n    }\n\n    protected async confirmExitWithActiveTerminals(activeTerminalCount: number): Promise<boolean> {\n        const msg = activeTerminalCount === 1\n            ? nls.localizeByDefault('Do you want to terminate the active terminal session?')\n            : nls.localizeByDefault('Do you want to terminate the {0} active terminal sessions?', activeTerminalCount);\n        const safeToExit = await new ConfirmDialog({\n            title: '',\n            msg,\n            ok: nls.localizeByDefault('Terminate'),\n            cancel: Dialog.CANCEL,\n        }).open();\n        return safeToExit === true;\n    }\n\n    protected _currentTerminal: TerminalWidget | undefined;\n    get currentTerminal(): TerminalWidget | undefined {\n        return this._currentTerminal;\n    }\n    protected setCurrentTerminal(current: TerminalWidget | undefined): void {\n        if (this._currentTerminal !== current) {\n            this._currentTerminal = current;\n            this.onDidChangeCurrentTerminalEmitter.fire(this._currentTerminal);\n        }\n    }\n    protected updateCurrentTerminal(): void {\n        const widget = this.shell.currentWidget;\n        if (widget instanceof TerminalWidget) {\n            this.setCurrentTerminal(widget);\n        } else if (!this._currentTerminal || !this._currentTerminal.isVisible) {\n            this.setCurrentTerminal(undefined);\n        }\n    }\n\n    // IDs of the most recently used terminals\n    protected mostRecentlyUsedTerminalEntries: { id: string, disposables: DisposableCollection }[] = [];\n\n    protected getLastUsedTerminalId(): string | undefined {\n        const mostRecent = this.mostRecentlyUsedTerminalEntries[this.mostRecentlyUsedTerminalEntries.length - 1];\n        if (mostRecent) {\n            return mostRecent.id;\n        }\n    }\n\n    get lastUsedTerminal(): TerminalWidget | undefined {\n        const id = this.getLastUsedTerminalId();\n        if (id) {\n            return this.getById(id);\n        }\n    }\n\n    protected setLastUsedTerminal(lastUsedTerminal: TerminalWidget): void {\n        const lastUsedTerminalId = lastUsedTerminal.id;\n        const entryIndex = this.mostRecentlyUsedTerminalEntries.findIndex(entry => entry.id === lastUsedTerminalId);\n        let toDispose: DisposableCollection | undefined;\n        if (entryIndex >= 0) {\n            toDispose = this.mostRecentlyUsedTerminalEntries[entryIndex].disposables;\n            this.mostRecentlyUsedTerminalEntries.splice(entryIndex, 1);\n        } else {\n            toDispose = new DisposableCollection();\n            toDispose.push(\n                lastUsedTerminal.onDidChangeVisibility((isVisible: boolean) => {\n                    if (isVisible) {\n                        this.setLastUsedTerminal(lastUsedTerminal);\n                    }\n                })\n            );\n            toDispose.push(\n                lastUsedTerminal.onDidDispose(() => {\n                    const index = this.mostRecentlyUsedTerminalEntries.findIndex(entry => entry.id === lastUsedTerminalId);\n                    if (index >= 0) {\n                        this.mostRecentlyUsedTerminalEntries[index].disposables.dispose();\n                        this.mostRecentlyUsedTerminalEntries.splice(index, 1);\n                    }\n                })\n            );\n        }\n\n        const newEntry = { id: lastUsedTerminalId, disposables: toDispose };\n        if (lastUsedTerminal.isVisible) {\n            this.mostRecentlyUsedTerminalEntries.push(newEntry);\n        } else {\n            this.mostRecentlyUsedTerminalEntries = [newEntry, ...this.mostRecentlyUsedTerminalEntries];\n        }\n    }\n\n    get all(): TerminalWidget[] {\n        return this.widgetManager.getWidgets(TERMINAL_WIDGET_FACTORY_ID) as TerminalWidget[];\n    }\n\n    getById(id: string): TerminalWidget | undefined {\n        return this.all.find(terminal => terminal.id === id);\n    }\n\n    getByTerminalId(terminalId: number): TerminalWidget | undefined {\n        return this.all.find(terminal => terminal.terminalId === terminalId);\n    }\n\n    getDefaultShell(): Promise<string> {\n        return this.shellTerminalServer.getDefaultShell();\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(TerminalCommands.NEW, {\n            execute: () => this.openTerminal()\n        });\n\n        commands.registerCommand(TerminalCommands.PROFILE_NEW, {\n            execute: async () => {\n                const profile = await this.selectTerminalProfile(nls.localize('theia/terminal/selectProfile', 'Select a profile for the new terminal'));\n                if (!profile) {\n                    return;\n                }\n                this.openTerminal(undefined, profile[1]);\n            }\n        });\n\n        commands.registerCommand(TerminalCommands.PROFILE_DEFAULT, {\n            execute: () => this.chooseDefaultProfile()\n        });\n\n        commands.registerCommand(TerminalCommands.NEW_ACTIVE_WORKSPACE, {\n            execute: () => this.openActiveWorkspaceTerminal()\n        });\n        commands.registerCommand(TerminalCommands.SPLIT, {\n            execute: () => this.splitTerminal(),\n            isEnabled: () => this.shell.currentWidget instanceof TerminalWidget,\n            isVisible: () => this.shell.currentWidget instanceof TerminalWidget,\n        });\n        commands.registerCommand(TerminalCommands.TERMINAL_CLEAR);\n        commands.registerHandler(TerminalCommands.TERMINAL_CLEAR.id, {\n            execute: () => this.currentTerminal?.clearOutput()\n        });\n        commands.registerCommand(TerminalCommands.TERMINAL_CONTEXT, UriAwareCommandHandler.MonoSelect(this.selectionService, {\n            execute: uri => this.openInTerminal(uri)\n        }));\n        commands.registerCommand(TerminalCommands.TERMINAL_FIND_TEXT);\n        commands.registerHandler(TerminalCommands.TERMINAL_FIND_TEXT.id, {\n            isEnabled: () => {\n                if (this.shell.activeWidget instanceof TerminalWidget) {\n                    return !this.shell.activeWidget.getSearchBox().isVisible;\n                }\n                return false;\n            },\n            execute: () => {\n                const termWidget = (this.shell.activeWidget as TerminalWidget);\n                const terminalSearchBox = termWidget.getSearchBox();\n                terminalSearchBox.show();\n            }\n        });\n        commands.registerCommand(TerminalCommands.TERMINAL_FIND_TEXT_CANCEL);\n        commands.registerHandler(TerminalCommands.TERMINAL_FIND_TEXT_CANCEL.id, {\n            isEnabled: () => {\n                if (this.shell.activeWidget instanceof TerminalWidget) {\n                    return this.shell.activeWidget.getSearchBox().isVisible;\n                }\n                return false;\n            },\n            execute: () => {\n                const termWidget = (this.shell.activeWidget as TerminalWidget);\n                const terminalSearchBox = termWidget.getSearchBox();\n                terminalSearchBox.hide();\n            }\n        });\n        commands.registerCommand(TerminalCommands.SCROLL_LINE_UP, {\n            isEnabled: () => this.shell.activeWidget instanceof TerminalWidget,\n            isVisible: () => false,\n            execute: () => {\n                (this.shell.activeWidget as TerminalWidget).scrollLineUp();\n            }\n        });\n        commands.registerCommand(TerminalCommands.SCROLL_LINE_DOWN, {\n            isEnabled: () => this.shell.activeWidget instanceof TerminalWidget,\n            isVisible: () => false,\n            execute: () => {\n                (this.shell.activeWidget as TerminalWidget).scrollLineDown();\n            }\n        });\n        commands.registerCommand(TerminalCommands.SCROLL_TO_TOP, {\n            isEnabled: () => this.shell.activeWidget instanceof TerminalWidget,\n            isVisible: () => false,\n            execute: () => {\n                (this.shell.activeWidget as TerminalWidget).scrollToTop();\n            }\n        });\n        commands.registerCommand(TerminalCommands.SCROLL_PAGE_UP, {\n            isEnabled: () => this.shell.activeWidget instanceof TerminalWidget,\n            isVisible: () => false,\n            execute: () => {\n                (this.shell.activeWidget as TerminalWidget).scrollPageUp();\n            }\n        });\n        commands.registerCommand(TerminalCommands.SCROLL_PAGE_DOWN, {\n            isEnabled: () => this.shell.activeWidget instanceof TerminalWidget,\n            isVisible: () => false,\n            execute: () => {\n                (this.shell.activeWidget as TerminalWidget).scrollPageDown();\n            }\n        });\n        commands.registerCommand(TerminalCommands.TOGGLE_TERMINAL, {\n            execute: () => this.toggleTerminal()\n        });\n        commands.registerCommand(TerminalCommands.KILL_TERMINAL, {\n            isEnabled: () => !!this.currentTerminal,\n            execute: () => this.currentTerminal?.close()\n        });\n        commands.registerCommand(TerminalCommands.SELECT_ALL, {\n            isEnabled: () => !!this.currentTerminal,\n            execute: () => this.currentTerminal?.selectAll()\n        });\n    }\n\n    protected toggleTerminal(): void {\n\n        const terminals = this.shell.getWidgets('bottom').filter(w => w instanceof TerminalWidget);\n\n        if (terminals.length === 0) {\n            this.openTerminal();\n            return;\n        }\n\n        if (this.shell.bottomPanel.isHidden) {\n            this.shell.bottomPanel.setHidden(false);\n            terminals[0].activate();\n            return;\n        }\n\n        if (this.shell.bottomPanel.isVisible) {\n            const visibleTerminal = terminals.find(t => t.isVisible);\n            if (!visibleTerminal) {\n                this.shell.bottomPanel.activateWidget(terminals[0]);\n            } else if (this.shell.activeWidget !== visibleTerminal) {\n                this.shell.bottomPanel.activateWidget(visibleTerminal);\n            } else {\n                this.shell.bottomPanel.setHidden(true);\n            }\n        }\n\n    }\n\n    async openInTerminal(uri: URI): Promise<void> {\n        // Determine folder path of URI\n        let stat: FileStat;\n        try {\n            stat = await this.fileService.resolve(uri);\n        } catch {\n            return;\n        }\n\n        // Use folder if a file was selected\n        const cwd = (stat.isDirectory) ? uri.toString() : uri.parent.toString();\n\n        // Open terminal\n        const termWidget = await this.newTerminal({ cwd });\n        termWidget.start();\n        this.open(termWidget);\n    }\n\n    registerMenus(menus: MenuModelRegistry): void {\n        menus.registerSubmenu(TerminalMenus.TERMINAL, TerminalWidgetImpl.LABEL);\n        menus.registerMenuAction(TerminalMenus.TERMINAL_NEW, {\n            commandId: TerminalCommands.NEW.id,\n            label: nls.localizeByDefault('New Terminal'),\n            order: '0'\n        });\n        menus.registerMenuAction(TerminalMenus.TERMINAL_NEW, {\n            commandId: TerminalCommands.PROFILE_NEW.id,\n            label: nls.localize('theia/terminal/profileNew', 'New Terminal (With Profile)...'),\n            order: '1'\n        });\n\n        menus.registerMenuAction(TerminalMenus.TERMINAL_NEW, {\n            commandId: TerminalCommands.PROFILE_DEFAULT.id,\n            label: nls.localize('theia/terminal/profileDefault', 'Choose Default Profile...'),\n            order: '3'\n        });\n        menus.registerMenuAction(TerminalMenus.TERMINAL_NEW, {\n            commandId: TerminalCommands.SPLIT.id,\n            order: '3'\n        });\n        menus.registerMenuAction(TerminalMenus.TERMINAL_NAVIGATOR_CONTEXT_MENU, {\n            commandId: TerminalCommands.TERMINAL_CONTEXT.id,\n            order: 'z'\n        });\n        menus.registerMenuAction(TerminalMenus.TERMINAL_OPEN_EDITORS_CONTEXT_MENU, {\n            commandId: TerminalCommands.TERMINAL_CONTEXT.id,\n            order: 'z'\n        });\n\n        menus.registerMenuAction([...TerminalMenus.TERMINAL_CONTEXT_MENU, '_1'], {\n            commandId: TerminalCommands.NEW_ACTIVE_WORKSPACE.id,\n            label: nls.localizeByDefault('New Terminal')\n        });\n        menus.registerMenuAction([...TerminalMenus.TERMINAL_CONTEXT_MENU, '_1'], {\n            commandId: TerminalCommands.SPLIT.id\n        });\n        menus.registerMenuAction([...TerminalMenus.TERMINAL_CONTEXT_MENU, '_2'], {\n            commandId: CommonCommands.COPY.id\n        });\n        menus.registerMenuAction([...TerminalMenus.TERMINAL_CONTEXT_MENU, '_2'], {\n            commandId: CommonCommands.PASTE.id\n        });\n        menus.registerMenuAction([...TerminalMenus.TERMINAL_CONTEXT_MENU, '_2'], {\n            commandId: TerminalCommands.SELECT_ALL.id\n        });\n        menus.registerMenuAction([...TerminalMenus.TERMINAL_CONTEXT_MENU, '_3'], {\n            commandId: TerminalCommands.TERMINAL_CLEAR.id\n        });\n        menus.registerMenuAction([...TerminalMenus.TERMINAL_CONTEXT_MENU, '_4'], {\n            commandId: TerminalCommands.KILL_TERMINAL.id\n        });\n    }\n\n    registerToolbarItems(toolbar: TabBarToolbarRegistry): void {\n        toolbar.registerItem({\n            id: TerminalCommands.SPLIT.id,\n            command: TerminalCommands.SPLIT.id,\n            icon: codicon('split-horizontal'),\n            tooltip: TerminalCommands.SPLIT.label\n        });\n    }\n\n    registerKeybindings(keybindings: KeybindingRegistry): void {\n        /* Register passthrough keybindings for combinations recognized by\n           xterm.js and converted to control characters.\n             See: https://github.com/xtermjs/xterm.js/blob/v3/src/Terminal.ts#L1684 */\n\n        /* Register ctrl + k (the passed Key) as a passthrough command in the\n           context of the terminal.  */\n        const regCtrl = (k: { keyCode: number, code: string }) => {\n            keybindings.registerKeybinding({\n                command: KeybindingRegistry.PASSTHROUGH_PSEUDO_COMMAND,\n                keybinding: KeyCode.createKeyCode({ key: k, ctrl: true }).toString(),\n                when: 'terminalFocus',\n            });\n        };\n\n        /* Register alt + k (the passed Key) as a passthrough command in the\n           context of the terminal.  */\n        const regAlt = (k: { keyCode: number, code: string }) => {\n            keybindings.registerKeybinding({\n                command: KeybindingRegistry.PASSTHROUGH_PSEUDO_COMMAND,\n                keybinding: KeyCode.createKeyCode({ key: k, alt: true }).toString(),\n                when: 'terminalFocus'\n            });\n        };\n\n        /* ctrl-space (000 - NUL).  */\n        regCtrl(Key.SPACE);\n\n        /* ctrl-A (001/1/0x1) through ctrl-Z (032/26/0x1A).  */\n        for (let i = 0; i < 26; i++) {\n            regCtrl({\n                keyCode: Key.KEY_A.keyCode + i,\n                code: 'Key' + String.fromCharCode('A'.charCodeAt(0) + i)\n            });\n        }\n\n        /* ctrl-[ or ctrl-3 (033/27/0x1B - ESC).  */\n        regCtrl(Key.BRACKET_LEFT);\n        regCtrl(Key.DIGIT3);\n\n        /* ctrl-\\ or ctrl-4 (034/28/0x1C - FS).  */\n        regCtrl(Key.BACKSLASH);\n        regCtrl(Key.DIGIT4);\n\n        /* ctrl-] or ctrl-5 (035/29/0x1D - GS).  */\n        regCtrl(Key.BRACKET_RIGHT);\n        regCtrl(Key.DIGIT5);\n\n        /* ctrl-6 (036/30/0x1E - RS).  */\n        regCtrl(Key.DIGIT6);\n\n        /* ctrl-7 (037/31/0x1F - US).  */\n        regCtrl(Key.DIGIT7);\n\n        /* ctrl-8 (177/127/0x7F - DEL).  */\n        regCtrl(Key.DIGIT8);\n\n        /* alt-A (0x1B 0x62) through alt-Z (0x1B 0x7A).  */\n        for (let i = 0; i < 26; i++) {\n            regAlt({\n                keyCode: Key.KEY_A.keyCode + i,\n                code: 'Key' + String.fromCharCode('A'.charCodeAt(0) + i)\n            });\n        }\n\n        /* alt-` (0x1B 0x60).  */\n        regAlt(Key.BACKQUOTE);\n\n        /* alt-0 (0x1B 0x30) through alt-9 (0x1B 0x39).  */\n        for (let i = 0; i < 10; i++) {\n            regAlt({\n                keyCode: Key.DIGIT0.keyCode + i,\n                code: 'Digit' + String.fromCharCode('0'.charCodeAt(0) + i)\n            });\n        }\n        if (isOSX) {\n            // selectAll on OSX\n            keybindings.registerKeybinding({\n                command: KeybindingRegistry.PASSTHROUGH_PSEUDO_COMMAND,\n                keybinding: 'ctrlcmd+a',\n                when: 'terminalFocus'\n            });\n        }\n\n        keybindings.registerKeybinding({\n            command: TerminalCommands.NEW.id,\n            keybinding: 'ctrl+shift+`'\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.NEW_ACTIVE_WORKSPACE.id,\n            keybinding: 'ctrl+`'\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.TERMINAL_CLEAR.id,\n            keybinding: 'ctrlcmd+k',\n            when: 'terminalFocus'\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.TERMINAL_FIND_TEXT.id,\n            keybinding: 'ctrlcmd+f',\n            when: 'terminalFocus'\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.TERMINAL_FIND_TEXT_CANCEL.id,\n            keybinding: 'esc',\n            context: TerminalKeybindingContexts.terminalHideSearch\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.SCROLL_LINE_UP.id,\n            keybinding: 'ctrl+shift+up',\n            when: 'terminalFocus'\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.SCROLL_LINE_DOWN.id,\n            keybinding: 'ctrl+shift+down',\n            when: 'terminalFocus'\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.SCROLL_TO_TOP.id,\n            keybinding: 'shift-home',\n            when: 'terminalFocus'\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.SCROLL_PAGE_UP.id,\n            keybinding: 'shift-pageUp',\n            when: 'terminalFocus'\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.SCROLL_PAGE_DOWN.id,\n            keybinding: 'shift-pageDown',\n            when: 'terminalFocus'\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.TOGGLE_TERMINAL.id,\n            keybinding: 'ctrl+`',\n        });\n        keybindings.registerKeybinding({\n            command: TerminalCommands.SELECT_ALL.id,\n            keybinding: 'ctrlcmd+a',\n            when: 'terminalFocus'\n        });\n    }\n\n    async newTerminal(options: TerminalWidgetOptions): Promise<TerminalWidget> {\n        const widget = <TerminalWidget>await this.widgetManager.getOrCreateWidget(TERMINAL_WIDGET_FACTORY_ID, <TerminalWidgetFactoryOptions>{\n            created: new Date().toISOString(),\n            ...options\n        });\n        return widget;\n    }\n\n    // TODO: reuse WidgetOpenHandler.open\n    open(widget: TerminalWidget, options?: WidgetOpenerOptions): void {\n        const area = widget.location === TerminalLocation.Editor ? 'main' : 'bottom';\n        const widgetOptions: ApplicationShell.WidgetOptions = { area: area, ...options?.widgetOptions };\n        let preserveFocus = false;\n\n        if (typeof widget.location === 'object') {\n            if ('parentTerminal' in widget.location) {\n                widgetOptions.ref = this.getById(widget.location.parentTerminal);\n                widgetOptions.mode = 'split-right';\n            } else if ('viewColumn' in widget.location) {\n                preserveFocus = widget.location.preserveFocus ?? false;\n                switch (widget.location.viewColumn) {\n                    case ViewColumn.Active:\n                        widgetOptions.ref = this.shell.currentWidget;\n                        widgetOptions.mode = 'tab-after';\n                        break;\n                    case ViewColumn.Beside:\n                        widgetOptions.ref = this.shell.currentWidget;\n                        widgetOptions.mode = 'split-right';\n                        break;\n                    default:\n                        widgetOptions.area = 'main';\n                        const mainAreaTerminals = this.shell.getWidgets('main').filter(w => w instanceof TerminalWidget && w.isVisible);\n                        const column = Math.min(widget.location.viewColumn, mainAreaTerminals.length);\n                        widgetOptions.mode = widget.location.viewColumn <= mainAreaTerminals.length ? 'split-left' : 'split-right';\n                        widgetOptions.ref = mainAreaTerminals[column - 1];\n                }\n            }\n        }\n\n        const op: WidgetOpenerOptions = {\n            mode: 'activate',\n            ...options,\n            widgetOptions: widgetOptions\n        };\n        if (!widget.isAttached) {\n            this.shell.addWidget(widget, op.widgetOptions);\n        }\n        if (op.mode === 'activate' && !preserveFocus) {\n            this.shell.activateWidget(widget.id);\n        } else if (op.mode === 'reveal' || preserveFocus) {\n            this.shell.revealWidget(widget.id);\n        }\n    }\n\n    protected async selectTerminalCwd(): Promise<string | undefined> {\n        return new Promise(async resolve => {\n            const roots = this.workspaceService.tryGetRoots();\n            if (roots.length === 0) {\n                resolve(undefined);\n            } else if (roots.length === 1) {\n                resolve(roots[0].resource.toString());\n            } else {\n                const items = roots.map(({ resource }) => ({\n                    label: this.labelProvider.getName(resource),\n                    description: this.labelProvider.getLongName(resource),\n                    resource\n                }));\n                const selectedItem = await this.quickInputService?.showQuickPick(items, {\n                    placeholder: nls.localizeByDefault('Select current working directory for new terminal')\n                });\n                resolve(selectedItem?.resource?.toString());\n            }\n        });\n    }\n\n    protected async selectTerminalProfile(placeholder: string): Promise<[string, TerminalProfile] | undefined> {\n        return new Promise(async resolve => {\n            const profiles = this.profileService.all;\n            if (profiles.length === 0) {\n                resolve(undefined);\n            } else {\n                const items = profiles.map(([id, profile]) => ({\n                    label: id,\n                    profile\n                }));\n                const selectedItem = await this.quickInputService?.showQuickPick(items, {\n                    placeholder\n                });\n                resolve(selectedItem ? [selectedItem.label, selectedItem.profile] : undefined);\n            }\n        });\n    }\n\n    protected async splitTerminal(referenceTerminal?: TerminalWidget): Promise<void> {\n        if (referenceTerminal || this.currentTerminal) {\n            const ref = referenceTerminal ?? this.currentTerminal;\n            await this.openTerminal({ ref, mode: 'split-right' });\n        }\n    }\n\n    protected async openTerminal(options?: ApplicationShell.WidgetOptions, terminalProfile?: TerminalProfile): Promise<void> {\n        let profile = terminalProfile;\n        if (!terminalProfile) {\n            profile = this.profileService.defaultProfile;\n            if (!profile) {\n                throw new Error('There are not profiles registered');\n            }\n        }\n\n        if (profile instanceof ShellTerminalProfile) {\n            if (this.workspaceService.workspace) {\n                const cwd = await this.selectTerminalCwd();\n                if (!cwd) {\n                    return;\n                }\n                profile = profile.modify({ cwd });\n            }\n        }\n\n        const termWidget = await profile?.start();\n        if (!!termWidget) {\n            this.open(termWidget, { widgetOptions: options });\n        }\n    }\n\n    protected async chooseDefaultProfile(): Promise<void> {\n        const result = await this.selectTerminalProfile(nls.localizeByDefault('Select your default terminal profile'));\n        if (!result) {\n            return;\n        }\n\n        this.preferenceService.set(`terminal.integrated.defaultProfile.${OS.backend.type().toLowerCase()}`, result[0], PreferenceScope.User);\n    }\n\n    protected async openActiveWorkspaceTerminal(options?: ApplicationShell.WidgetOptions): Promise<void> {\n        const termWidget = await this.newTerminal({});\n        termWidget.start();\n        this.open(termWidget, { widgetOptions: options });\n    }\n\n    /**\n     * It should be aligned with https://code.visualstudio.com/api/references/theme-color#integrated-terminal-colors\n     */\n    registerColors(colors: ColorRegistry): void {\n        colors.register({\n            id: 'terminal.background',\n            defaults: {\n                dark: 'panel.background',\n                light: 'panel.background',\n                hcDark: 'panel.background',\n                hcLight: 'panel.background'\n            },\n            description: 'The background color of the terminal, this allows coloring the terminal differently to the panel.'\n        });\n        colors.register({\n            id: 'terminal.foreground',\n            defaults: {\n                light: '#333333',\n                dark: '#CCCCCC',\n                hcDark: '#FFFFFF',\n                hcLight: '#292929'\n            },\n            description: 'The foreground color of the terminal.'\n        });\n        colors.register({\n            id: 'terminalCursor.foreground',\n            description: 'The foreground color of the terminal cursor.'\n        });\n        colors.register({\n            id: 'terminalCursor.background',\n            description: 'The background color of the terminal cursor. Allows customizing the color of a character overlapped by a block cursor.'\n        });\n        colors.register({\n            id: 'terminal.selectionBackground',\n            defaults: {\n                light: 'editor.selectionBackground',\n                dark: 'editor.selectionBackground',\n                hcDark: 'editor.selectionBackground',\n                hcLight: 'editor.selectionBackground'\n            },\n            description: 'The selection background color of the terminal.'\n        });\n        colors.register({\n            id: 'terminal.border',\n            defaults: {\n                light: 'panel.border',\n                dark: 'panel.border',\n                hcDark: 'panel.border',\n                hcLight: 'panel.border'\n            },\n            description: 'The color of the border that separates split panes within the terminal. This defaults to panel.border.'\n        });\n        // eslint-disable-next-line guard-for-in\n        for (const id in terminalAnsiColorMap) {\n            const entry = terminalAnsiColorMap[id];\n            const colorName = id.substring(13);\n            colors.register({\n                id,\n                defaults: entry.defaults,\n                description: `'${colorName}'  ANSI color in the terminal.`\n            });\n        }\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { KeybindingContext, ApplicationShell } from '@theia/core/lib/browser';\nimport { TerminalWidget } from './base/terminal-widget';\n\nexport namespace TerminalKeybindingContexts {\n    export const terminalActive = 'terminalActive';\n    export const terminalHideSearch = 'hideSearch';\n}\n\n@injectable()\nexport class TerminalActiveContext implements KeybindingContext {\n    readonly id: string = TerminalKeybindingContexts.terminalActive;\n\n    @inject(ApplicationShell)\n    protected readonly shell: ApplicationShell;\n\n    isEnabled(): boolean {\n        return this.shell.activeWidget instanceof TerminalWidget;\n    }\n}\n\n@injectable()\nexport class TerminalSearchVisibleContext implements KeybindingContext {\n    readonly id: string = TerminalKeybindingContexts.terminalHideSearch;\n\n    @inject(ApplicationShell)\n    protected readonly shell: ApplicationShell;\n\n    isEnabled(): boolean {\n        if (!(this.shell.activeWidget instanceof TerminalWidget)) {\n            return false;\n        }\n        const searchWidget = this.shell.activeWidget.getSearchBox();\n        return searchWidget.isVisible;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2018 Bitsler and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n// *****************************************************************************\n\n/* eslint-disable max-len */\n\nimport { interfaces } from '@theia/core/shared/inversify';\nimport { IJSONSchema } from '@theia/core/lib/common/json-schema';\nimport { createPreferenceProxy, PreferenceProxy, PreferenceService, PreferenceContribution, PreferenceSchema, PreferenceSchemaProperties } from '@theia/core/lib/browser';\nimport { nls } from '@theia/core/lib/common/nls';\nimport { editorGeneratedPreferenceProperties } from '@theia/editor/lib/browser/editor-generated-preference-schema';\nimport { OS } from '@theia/core';\nimport { terminalAnsiColorMap } from './terminal-theme-service';\n\nconst commonProfileProperties: PreferenceSchemaProperties = {\n    env: {\n        type: 'object',\n        additionalProperties: {\n            type: 'string'\n        },\n        markdownDescription: nls.localizeByDefault('An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.'),\n    },\n    overrideName: {\n        type: 'boolean',\n        description: nls.localizeByDefault('Controls whether or not the profile name overrides the auto detected one.')\n    },\n    icon: {\n        type: 'string',\n        markdownDescription: nls.localize('theia/terminal/profileIcon', 'A codicon ID to associate with the terminal icon.\\nterminal-tmux:\"$(terminal-tmux)\"')\n    },\n    color: {\n        type: 'string',\n        enum: Object.getOwnPropertyNames(terminalAnsiColorMap),\n        description: nls.localize('theia/terminal/profileColor', 'A terminal theme color ID to associate with the terminal.')\n    }\n};\n\nconst stringOrStringArray: IJSONSchema = {\n    oneOf: [\n        { type: 'string' },\n        {\n            type: 'array',\n            items: {\n                type: 'string'\n            }\n        }\n    ]\n};\n\nconst pathProperty: IJSONSchema = {\n    description: nls.localize('theia/terminal/profilePath', 'The path of the shell that this profile uses.'),\n    ...stringOrStringArray\n};\n\nfunction shellArgsDeprecatedMessage(type: OS.Type): string {\n    return nls.localize('theia/terminal/shell.deprecated', 'This is deprecated, the new recommended way to configure your default shell is by creating a terminal profile in \\'terminal.integrated.profiles.{0}\\' and setting its profile name as the default in \\'terminal.integrated.defaultProfile.{0}.\\'', type.toString().toLowerCase());\n}\n\nexport const TerminalConfigSchema: PreferenceSchema = {\n    type: 'object',\n    properties: {\n        'terminal.enableCopy': {\n            type: 'boolean',\n            description: nls.localize('theia/terminal/enableCopy', 'Enable ctrl-c (cmd-c on macOS) to copy selected text'),\n            default: true\n        },\n        'terminal.enablePaste': {\n            type: 'boolean',\n            description: nls.localize('theia/terminal/enablePaste', 'Enable ctrl-v (cmd-v on macOS) to paste from clipboard'),\n            default: true\n        },\n        'terminal.integrated.fontFamily': {\n            type: 'string',\n            markdownDescription: nls.localizeByDefault('Controls the font family of the terminal. Defaults to {0}\\'s value.', '`#editor.fontFamily#`'),\n            default: editorGeneratedPreferenceProperties['editor.fontFamily'].default,\n        },\n        'terminal.integrated.fontSize': {\n            type: 'number',\n            description: nls.localizeByDefault('Controls the font size in pixels of the terminal.'),\n            minimum: 6,\n            default: editorGeneratedPreferenceProperties['editor.fontSize'].default\n        },\n        'terminal.integrated.fontWeight': {\n            type: 'string',\n            enum: ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'],\n            description: nls.localizeByDefault('The font weight to use within the terminal for non-bold text. Accepts \\\"normal\\\" and \\\"bold\\\" keywords or numbers between 1 and 1000.'),\n            default: 'normal'\n        },\n        'terminal.integrated.fontWeightBold': {\n            type: 'string',\n            enum: ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'],\n            description: nls.localizeByDefault('The font weight to use within the terminal for bold text. Accepts \\\"normal\\\" and \\\"bold\\\" keywords or numbers between 1 and 1000.'),\n            default: 'bold'\n        },\n        'terminal.integrated.drawBoldTextInBrightColors': {\n            description: nls.localizeByDefault('Controls whether bold text in the terminal will always use the \\\"bright\\\" ANSI color variant.'),\n            type: 'boolean',\n            default: true,\n        },\n        'terminal.integrated.letterSpacing': {\n            description: nls.localizeByDefault('Controls the letter spacing of the terminal. This is an integer value which represents the number of additional pixels to add between characters.'),\n            type: 'number',\n            default: 1\n        },\n        'terminal.integrated.lineHeight': {\n            description: nls.localizeByDefault('Controls the line height of the terminal. This number is multiplied by the terminal font size to get the actual line-height in pixels.'),\n            type: 'number',\n            minimum: 1,\n            default: 1\n        },\n        'terminal.integrated.scrollback': {\n            description: nls.localizeByDefault('Controls the maximum number of lines the terminal keeps in its buffer.'),\n            type: 'number',\n            default: 1000\n        },\n        'terminal.integrated.fastScrollSensitivity': {\n            markdownDescription: nls.localizeByDefault('Scrolling speed multiplier when pressing `Alt`.'),\n            type: 'number',\n            default: 5,\n        },\n        'terminal.integrated.rendererType': {\n            description: nls.localize('theia/terminal/rendererType', 'Controls how the terminal is rendered.'),\n            type: 'string',\n            enum: ['canvas', 'dom'],\n            default: 'canvas'\n        },\n        'terminal.integrated.copyOnSelection': {\n            description: nls.localizeByDefault('Controls whether text selected in the terminal will be copied to the clipboard.'),\n            type: 'boolean',\n            default: false,\n        },\n        'terminal.integrated.cursorBlinking': {\n            description: nls.localizeByDefault('Controls whether the terminal cursor blinks.'),\n            type: 'boolean',\n            default: false\n        },\n        'terminal.integrated.cursorStyle': {\n            description: nls.localizeByDefault('Controls the style of terminal cursor.'),\n            enum: ['block', 'underline', 'line'],\n            default: 'block'\n        },\n        'terminal.integrated.cursorWidth': {\n            markdownDescription: nls.localizeByDefault('Controls the width of the cursor when {0} is set to {1}.', '`#terminal.integrated.cursorStyle#`', '`line`'),\n            type: 'number',\n            default: 1\n        },\n        'terminal.integrated.shell.windows': {\n            type: ['string', 'null'],\n            typeDetails: { isFilepath: true },\n            markdownDescription: nls.localize('theia/terminal/shellWindows', 'The path of the shell that the terminal uses on Windows. (default: \\'{0}\\').', 'C:\\\\Windows\\\\System32\\\\cmd.exe'),\n            default: undefined,\n            deprecationMessage: shellArgsDeprecatedMessage(OS.Type.Windows),\n        },\n        'terminal.integrated.shell.osx': {\n            type: ['string', 'null'],\n            markdownDescription: nls.localize('theia/terminal/shellOsx', 'The path of the shell that the terminal uses on macOS (default: \\'{0}\\'}).', '/bin/bash'),\n            default: undefined,\n            deprecationMessage: shellArgsDeprecatedMessage(OS.Type.OSX),\n        },\n        'terminal.integrated.shell.linux': {\n            type: ['string', 'null'],\n            markdownDescription: nls.localize('theia/terminal/shellLinux', 'The path of the shell that the terminal uses on Linux (default: \\'{0}\\'}).', '/bin/bash'),\n            default: undefined,\n            deprecationMessage: shellArgsDeprecatedMessage(OS.Type.Linux),\n        },\n        'terminal.integrated.shellArgs.windows': {\n            type: 'array',\n            markdownDescription: nls.localize('theia/terminal/shellArgsWindows', 'The command line arguments to use when on the Windows terminal.'),\n            default: [],\n            deprecationMessage: shellArgsDeprecatedMessage(OS.Type.Windows),\n        },\n        'terminal.integrated.shellArgs.osx': {\n            type: 'array',\n            markdownDescription: nls.localize('theia/terminal/shellArgsOsx', 'The command line arguments to use when on the macOS terminal.'),\n            default: [\n                '-l'\n            ],\n            deprecationMessage: shellArgsDeprecatedMessage(OS.Type.OSX),\n        },\n        'terminal.integrated.shellArgs.linux': {\n            type: 'array',\n            markdownDescription: nls.localize('theia/terminal/shellArgsLinux', 'The command line arguments to use when on the Linux terminal.'),\n            default: [],\n            deprecationMessage: shellArgsDeprecatedMessage(OS.Type.Linux),\n        },\n        'terminal.integrated.confirmOnExit': {\n            type: 'string',\n            description: nls.localizeByDefault('Controls whether to confirm when the window closes if there are active terminal sessions.'),\n            enum: ['never', 'always', 'hasChildProcesses'],\n            enumDescriptions: [\n                nls.localizeByDefault('Never confirm.'),\n                nls.localizeByDefault('Always confirm if there are terminals.'),\n                nls.localizeByDefault('Confirm if there are any terminals that have child processes.'),\n            ],\n            default: 'never'\n        },\n        'terminal.integrated.enablePersistentSessions': {\n            type: 'boolean',\n            description: nls.localizeByDefault('Persist terminal sessions/history for the workspace across window reloads.'),\n            default: true\n        },\n        'terminal.integrated.defaultProfile.windows': {\n            type: 'string',\n            description: nls.localize('theia/terminal/defaultProfile', 'The default profile used on {0}', OS.Type.Windows.toString())\n\n        },\n        'terminal.integrated.defaultProfile.linux': {\n            type: 'string',\n            description: nls.localize('theia/terminal/defaultProfile', 'The default profile used on {0}', OS.Type.Linux.toString())\n\n        },\n        'terminal.integrated.defaultProfile.osx': {\n            type: 'string',\n            description: nls.localize('theia/terminal/defaultProfile', 'The default profile used on {0}', OS.Type.OSX.toString())\n        },\n        'terminal.integrated.profiles.windows': {\n            markdownDescription: nls.localize('theia/terminal/profiles', 'The profiles to present when creating a new terminal. Set the path property manually with optional args.\\nSet an existing profile to `null` to hide the profile from the list, for example: `\"{0}\": null`.', 'cmd'),\n            anyOf: [\n                {\n                    type: 'object',\n                    properties: {\n                    },\n                    additionalProperties: {\n                        oneOf: [{\n                            type: 'object',\n                            additionalProperties: false,\n                            properties: {\n                                path: pathProperty,\n                                args: {\n                                    ...stringOrStringArray,\n                                    description: nls.localize('theia/terminal/profileArgs', 'The shell arguments that this profile uses.'),\n\n                                },\n                                ...commonProfileProperties\n                            },\n                            required: ['path']\n                        },\n                        {\n                            type: 'object',\n                            additionalProperties: false,\n                            properties: {\n                                source: {\n                                    type: 'string',\n                                    description: nls.localizeByDefault('A profile source that will auto detect the paths to the shell. Note that non-standard executable locations are not supported and must be created manually in a new profile.')\n                                },\n                                args: {\n                                    ...stringOrStringArray,\n                                    description: nls.localize('theia/terminal/profileArgs', 'The shell arguments that this profile uses.'),\n\n                                },\n                                ...commonProfileProperties\n                            },\n                            required: ['source'],\n                            default: {\n                                path: 'C:\\\\Windows\\\\System32\\\\cmd.exe'\n                            }\n\n                        }, {\n                            type: 'null'\n                        }]\n                    },\n                    default: {\n                        cmd: {\n                            path: 'C:\\\\Windows\\\\System32\\\\cmd.exe'\n                        }\n                    }\n                },\n                { type: 'null' }\n            ]\n        },\n        'terminal.integrated.profiles.linux': {\n            markdownDescription: nls.localize('theia/terminal/profiles', 'The profiles to present when creating a new terminal. Set the path property manually with optional args.\\nSet an existing profile to `null` to hide the profile from the list, for example: `\"{0}\": null`.', 'bash'),\n            anyOf: [{\n                type: 'object',\n                properties: {\n                },\n                additionalProperties: {\n                    oneOf: [\n                        {\n                            type: 'object',\n                            properties: {\n                                path: pathProperty,\n                                args: {\n                                    type: 'array',\n                                    items: { type: 'string' },\n                                    description: nls.localize('theia/terminal/profileArgs', 'The shell arguments that this profile uses.'),\n                                },\n                                ...commonProfileProperties\n                            },\n                            required: ['path'],\n                            additionalProperties: false,\n                        },\n                        { type: 'null' }\n                    ]\n                },\n                default: {\n                    path: '${env:SHELL}',\n                    args: ['-l']\n                }\n\n            },\n            { type: 'null' }\n            ]\n        },\n        'terminal.integrated.profiles.osx': {\n            markdownDescription: nls.localize('theia/terminal/profiles', 'The profiles to present when creating a new terminal. Set the path property manually with optional args.\\nSet an existing profile to `null` to hide the profile from the list, for example: `\"{0}\": null`.', 'zsh'),\n            anyOf: [{\n                type: 'object',\n                properties: {\n                },\n                additionalProperties: {\n                    oneOf: [\n                        {\n                            type: 'object',\n                            properties: {\n                                path: pathProperty,\n                                args: {\n                                    type: 'array',\n                                    items: { type: 'string' },\n                                    description: nls.localize('theia/terminal/profileArgs', 'The shell arguments that this profile uses.'),\n                                },\n                                ...commonProfileProperties\n                            },\n                            required: ['path'],\n                            additionalProperties: false,\n                        },\n                        { type: 'null' }\n                    ]\n                },\n                default: {\n                    path: '${env:SHELL}',\n                    args: ['-l']\n                }\n\n            },\n            { type: 'null' }\n            ]\n        },\n    }\n};\n\nexport type Profiles = null | {\n    [key: string]: {\n        path?: string | string[],\n        source?: string,\n        args?: string | string[],\n        env?: { [key: string]: string },\n        overrideName?: boolean;\n        icon?: string,\n        color?: string\n    }\n};\n\nexport interface TerminalConfiguration {\n    'terminal.enableCopy': boolean\n    'terminal.enablePaste': boolean\n    // xterm compatible, see https://xtermjs.org/docs/api/terminal/interfaces/iterminaloptions/\n    'terminal.integrated.fontFamily': string\n    'terminal.integrated.fontSize': number\n    'terminal.integrated.fontWeight': FontWeight\n    'terminal.integrated.fontWeightBold': FontWeight,\n    'terminal.integrated.drawBoldTextInBrightColors': boolean,\n    'terminal.integrated.letterSpacing': number\n    'terminal.integrated.lineHeight': number,\n    'terminal.integrated.scrollback': number,\n    'terminal.integrated.fastScrollSensitivity': number,\n    'terminal.integrated.rendererType': TerminalRendererType,\n    'terminal.integrated.copyOnSelection': boolean,\n    'terminal.integrated.cursorBlinking': boolean,\n    'terminal.integrated.cursorStyle': CursorStyleVSCode,\n    'terminal.integrated.cursorWidth': number,\n    'terminal.integrated.shell.windows': string | null | undefined,\n    'terminal.integrated.shell.osx': string | null | undefined,\n    'terminal.integrated.shell.linux': string | null | undefined,\n    'terminal.integrated.shellArgs.windows': string[],\n    'terminal.integrated.shellArgs.osx': string[],\n    'terminal.integrated.shellArgs.linux': string[],\n    'terminal.integrated.defaultProfile.windows': string,\n    'terminal.integrated.defaultProfile.linux': string,\n    'terminal.integrated.defaultProfile.osx': string,\n    'terminal.integrated.profiles.windows': Profiles\n    'terminal.integrated.profiles.linux': Profiles,\n    'terminal.integrated.profiles.osx': Profiles,\n    'terminal.integrated.confirmOnExit': ConfirmOnExitType\n    'terminal.integrated.enablePersistentSessions': boolean\n}\n\ntype FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900';\nexport type CursorStyle = 'block' | 'underline' | 'bar';\n// VS Code uses 'line' to represent 'bar'. The following conversion is necessary to support their preferences.\nexport type CursorStyleVSCode = CursorStyle | 'line';\nexport type TerminalRendererType = 'canvas' | 'dom';\nexport type ConfirmOnExitType = 'never' | 'always' | 'hasChildProcesses';\nexport const DEFAULT_TERMINAL_RENDERER_TYPE = 'canvas';\nexport function isTerminalRendererType(arg: unknown): arg is TerminalRendererType {\n    return typeof arg === 'string' && (arg === 'canvas' || arg === 'dom');\n}\n\nexport const TerminalPreferenceContribution = Symbol('TerminalPreferenceContribution');\nexport const TerminalPreferences = Symbol('TerminalPreferences');\nexport type TerminalPreferences = PreferenceProxy<TerminalConfiguration>;\n\nexport function createTerminalPreferences(preferences: PreferenceService, schema: PreferenceSchema = TerminalConfigSchema): TerminalPreferences {\n    return createPreferenceProxy(preferences, schema);\n}\n\nexport function bindTerminalPreferences(bind: interfaces.Bind): void {\n    bind(TerminalPreferences).toDynamicValue(ctx => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        const contribution = ctx.container.get<PreferenceContribution>(TerminalPreferenceContribution);\n        return createTerminalPreferences(preferences, contribution.schema);\n    }).inSingletonScope();\n    bind(TerminalPreferenceContribution).toConstantValue({ schema: TerminalConfigSchema });\n    bind(PreferenceContribution).toService(TerminalPreferenceContribution);\n}\n","// *****************************************************************************\n// Copyright (C) 2022 STMicroelectronics and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Emitter, Event } from '@theia/core';\nimport { injectable } from '@theia/core/shared/inversify';\nimport { TerminalWidget } from './base/terminal-widget';\n\nexport const TerminalProfileService = Symbol('TerminalProfileService');\nexport const ContributedTerminalProfileStore = Symbol('ContributedTerminalProfileStore');\nexport const UserTerminalProfileStore = Symbol('UserTerminalProfileStore');\n\nexport interface TerminalProfile {\n    start(): Promise<TerminalWidget>;\n}\n\nexport const NULL_PROFILE: TerminalProfile = {\n    start: async () => { throw new Error('you cannot start a null profile'); }\n};\n\nexport interface TerminalProfileService {\n    onAdded: Event<string>;\n    onRemoved: Event<string>;\n    getProfile(id: string): TerminalProfile | undefined\n    readonly all: [string, TerminalProfile][];\n    setDefaultProfile(id: string): void;\n    readonly defaultProfile: TerminalProfile | undefined;\n}\n\nexport interface TerminalProfileStore {\n    onAdded: Event<[string, TerminalProfile]>;\n    onRemoved: Event<string>;\n    registerTerminalProfile(id: string, profile: TerminalProfile): void;\n    unregisterTerminalProfile(id: string): void;\n    hasProfile(id: string): boolean;\n    getProfile(id: string): TerminalProfile | undefined\n    readonly all: [string, TerminalProfile][];\n}\n\n@injectable()\nexport class DefaultProfileStore implements TerminalProfileStore {\n    protected readonly onAddedEmitter: Emitter<[string, TerminalProfile]> = new Emitter();\n    protected readonly onRemovedEmitter: Emitter<string> = new Emitter();\n    protected readonly profiles: Map<string, TerminalProfile> = new Map();\n\n    onAdded: Event<[string, TerminalProfile]> = this.onAddedEmitter.event;\n    onRemoved: Event<string> = this.onRemovedEmitter.event;\n\n    registerTerminalProfile(id: string, profile: TerminalProfile): void {\n        this.profiles.set(id, profile);\n        this.onAddedEmitter.fire([id, profile]);\n    }\n    unregisterTerminalProfile(id: string): void {\n        this.profiles.delete(id);\n        this.onRemovedEmitter.fire(id);\n    }\n\n    hasProfile(id: string): boolean {\n        return this.profiles.has(id);\n    }\n\n    getProfile(id: string): TerminalProfile | undefined {\n        return this.profiles.get(id);\n    }\n    get all(): [string, TerminalProfile][] {\n        return [...this.profiles.entries()];\n    }\n}\n\n@injectable()\nexport class DefaultTerminalProfileService implements TerminalProfileService {\n    protected defaultProfileIndex = 0;\n    protected order: string[] = [];\n    protected readonly stores: TerminalProfileStore[];\n\n    protected readonly onAddedEmitter: Emitter<string> = new Emitter();\n    protected readonly onRemovedEmitter: Emitter<string> = new Emitter();\n\n    onAdded: Event<string> = this.onAddedEmitter.event;\n    onRemoved: Event<string> = this.onRemovedEmitter.event;\n\n    constructor(...stores: TerminalProfileStore[]) {\n        this.stores = stores;\n        for (const store of this.stores) {\n            store.onAdded(e => {\n                if (e[1] === NULL_PROFILE) {\n                    this.handleRemoved(e[0]);\n                } else {\n                    this.handleAdded(e[0]);\n                }\n            });\n            store.onRemoved(id => {\n                if (!this.getProfile(id)) {\n                    this.handleRemoved(id);\n                } else {\n                    // we may have removed a null profile\n                    this.handleAdded(id);\n                }\n            });\n        }\n    }\n\n    handleRemoved(id: string): void {\n        const index = this.order.indexOf(id);\n        if (index >= 0 && !this.getProfile(id)) {\n            // the profile was removed, but it's still in the `order` array\n            this.order.splice(index, 1);\n            this.defaultProfileIndex = Math.max(0, Math.min(this.order.length - 1, index));\n            this.onRemovedEmitter.fire(id);\n        }\n    }\n\n    handleAdded(id: string): void {\n        const index = this.order.indexOf(id);\n        if (index < 0) {\n            this.order.push(id);\n            this.onAddedEmitter.fire(id);\n        }\n    }\n\n    get defaultProfile(): TerminalProfile | undefined {\n        const id = this.order[this.defaultProfileIndex];\n        if (id) {\n            return this.getProfile(id);\n        }\n        return undefined;\n    }\n\n    setDefaultProfile(id: string): void {\n        const profile = this.getProfile(id);\n        if (!profile) {\n            throw new Error(`Cannot set default to unknown profile '${id}' `);\n        }\n        this.defaultProfileIndex = this.order.indexOf(id);\n    }\n\n    getProfile(id: string): TerminalProfile | undefined {\n        for (const store of this.stores) {\n            if (store.hasProfile(id)) {\n                const found = store.getProfile(id);\n                return found === NULL_PROFILE ? undefined : found;\n            }\n        }\n        return undefined;\n    }\n\n    getId(profile: TerminalProfile): string | undefined {\n        for (const [id, p] of this.all) {\n            if (p === profile) {\n                return id;\n            }\n        }\n    }\n\n    get all(): [string, TerminalProfile][] {\n        return this.order.filter(id => !!this.getProfile(id)).map(id => [id, this.getProfile(id)!]);\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2019 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { ITheme } from 'xterm';\nimport { injectable, inject } from '@theia/core/shared/inversify';\nimport { ColorRegistry } from '@theia/core/lib/browser/color-registry';\nimport { ColorDefaults } from '@theia/core/lib/common/color';\nimport { ThemeService } from '@theia/core/lib/browser/theming';\nimport { ThemeChangeEvent } from '@theia/core/lib/common/theme';\nimport { Event } from '@theia/core';\n\n/**\n * It should be aligned with https://github.com/microsoft/vscode/blob/0dfa355b3ad185a6289ba28a99c141ab9e72d2be/src/vs/workbench/contrib/terminal/common/terminalColorRegistry.ts#L40\n */\nexport const terminalAnsiColorMap: { [key: string]: { index: number, defaults: ColorDefaults } } = {\n    'terminal.ansiBlack': {\n        index: 0,\n        defaults: {\n            light: '#000000',\n            dark: '#000000',\n            hcDark: '#000000',\n            hcLight: '#292929'\n        }\n    },\n    'terminal.ansiRed': {\n        index: 1,\n        defaults: {\n            light: '#cd3131',\n            dark: '#cd3131',\n            hcDark: '#cd0000',\n            hcLight: '#cd3131'\n        }\n    },\n    'terminal.ansiGreen': {\n        index: 2,\n        defaults: {\n            light: '#00BC00',\n            dark: '#0DBC79',\n            hcDark: '#00cd00',\n            hcLight: '#00bc00'\n        }\n    },\n    'terminal.ansiYellow': {\n        index: 3,\n        defaults: {\n            light: '#949800',\n            dark: '#e5e510',\n            hcDark: '#cdcd00',\n            hcLight: '#949800'\n        }\n    },\n    'terminal.ansiBlue': {\n        index: 4,\n        defaults: {\n            light: '#0451a5',\n            dark: '#2472c8',\n            hcDark: '#0000ee',\n            hcLight: '#0451a5'\n        }\n    },\n    'terminal.ansiMagenta': {\n        index: 5,\n        defaults: {\n            light: '#bc05bc',\n            dark: '#bc3fbc',\n            hcDark: '#cd00cd',\n            hcLight: '#bc05bc'\n        }\n    },\n    'terminal.ansiCyan': {\n        index: 6,\n        defaults: {\n            light: '#0598bc',\n            dark: '#11a8cd',\n            hcDark: '#00cdcd',\n            hcLight: '#0598b'\n        }\n    },\n    'terminal.ansiWhite': {\n        index: 7,\n        defaults: {\n            light: '#555555',\n            dark: '#e5e5e5',\n            hcDark: '#e5e5e5',\n            hcLight: '#555555'\n        }\n    },\n    'terminal.ansiBrightBlack': {\n        index: 8,\n        defaults: {\n            light: '#666666',\n            dark: '#666666',\n            hcDark: '#7f7f7f',\n            hcLight: '#666666'\n        }\n    },\n    'terminal.ansiBrightRed': {\n        index: 9,\n        defaults: {\n            light: '#cd3131',\n            dark: '#f14c4c',\n            hcDark: '#ff0000',\n            hcLight: '#cd3131'\n        }\n    },\n    'terminal.ansiBrightGreen': {\n        index: 10,\n        defaults: {\n            light: '#14CE14',\n            dark: '#23d18b',\n            hcDark: '#00ff00',\n            hcLight: '#00bc00'\n        }\n    },\n    'terminal.ansiBrightYellow': {\n        index: 11,\n        defaults: {\n            light: '#b5ba00',\n            dark: '#f5f543',\n            hcDark: '#ffff00',\n            hcLight: '#b5ba00'\n        }\n    },\n    'terminal.ansiBrightBlue': {\n        index: 12,\n        defaults: {\n            light: '#0451a5',\n            dark: '#3b8eea',\n            hcDark: '#5c5cff',\n            hcLight: '#0451a5'\n        }\n    },\n    'terminal.ansiBrightMagenta': {\n        index: 13,\n        defaults: {\n            light: '#bc05bc',\n            dark: '#d670d6',\n            hcDark: '#ff00ff',\n            hcLight: '#bc05bc'\n        }\n    },\n    'terminal.ansiBrightCyan': {\n        index: 14,\n        defaults: {\n            light: '#0598bc',\n            dark: '#29b8db',\n            hcDark: '#00ffff',\n            hcLight: '#0598bc'\n        }\n    },\n    'terminal.ansiBrightWhite': {\n        index: 15,\n        defaults: {\n            light: '#a5a5a5',\n            dark: '#e5e5e5',\n            hcDark: '#ffffff',\n            hcLight: '#a5a5a5'\n        }\n    }\n};\n\n@injectable()\nexport class TerminalThemeService {\n\n    @inject(ColorRegistry) protected readonly colorRegistry: ColorRegistry;\n    @inject(ThemeService) protected readonly themeService: ThemeService;\n\n    get onDidChange(): Event<ThemeChangeEvent> {\n        return this.themeService.onDidColorThemeChange;\n    }\n\n    get theme(): ITheme {\n        const foregroundColor = this.colorRegistry.getCurrentColor('terminal.foreground');\n        const backgroundColor = this.colorRegistry.getCurrentColor('terminal.background') || this.colorRegistry.getCurrentColor('panel.background');\n        const cursorColor = this.colorRegistry.getCurrentColor('terminalCursor.foreground') || foregroundColor;\n        const cursorAccentColor = this.colorRegistry.getCurrentColor('terminalCursor.background') || backgroundColor;\n        const selectionColor = this.colorRegistry.getCurrentColor('terminal.selectionBackground');\n\n        const theme: ITheme = {\n            background: backgroundColor,\n            foreground: foregroundColor,\n            cursor: cursorColor,\n            cursorAccent: cursorAccentColor,\n            selection: selectionColor\n        };\n        // eslint-disable-next-line guard-for-in\n        for (const id in terminalAnsiColorMap) {\n            const colorId = id.substring(13);\n            const colorName = colorId.charAt(0).toLowerCase() + colorId.slice(1);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            (theme as any)[colorName] = this.colorRegistry.getCurrentColor(id);\n        }\n        return theme;\n    }\n\n}\n","// *****************************************************************************\n// Copyright (C) 2017 TypeFox and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { Terminal, RendererType } from 'xterm';\nimport { FitAddon } from 'xterm-addon-fit';\nimport { inject, injectable, named, postConstruct } from '@theia/core/shared/inversify';\nimport { ContributionProvider, Disposable, Event, Emitter, ILogger, DisposableCollection, Channel, OS } from '@theia/core';\nimport {\n    Widget, Message, WebSocketConnectionProvider, StatefulWidget, isFirefox, MessageLoop, KeyCode, codicon, ExtractableWidget, ContextMenuRenderer\n} from '@theia/core/lib/browser';\nimport { isOSX } from '@theia/core/lib/common';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { ShellTerminalServerProxy, IShellTerminalPreferences } from '../common/shell-terminal-protocol';\nimport { terminalsPath } from '../common/terminal-protocol';\nimport { IBaseTerminalServer, TerminalProcessInfo, TerminalExitReason } from '../common/base-terminal-protocol';\nimport { TerminalWatcher } from '../common/terminal-watcher';\nimport {\n    TerminalWidgetOptions, TerminalWidget, TerminalDimensions, TerminalExitStatus, TerminalLocationOptions,\n    TerminalLocation\n} from './base/terminal-widget';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\nimport { TerminalPreferences, TerminalRendererType, isTerminalRendererType, DEFAULT_TERMINAL_RENDERER_TYPE, CursorStyle } from './terminal-preferences';\nimport URI from '@theia/core/lib/common/uri';\nimport { TerminalService } from './base/terminal-service';\nimport { TerminalSearchWidgetFactory, TerminalSearchWidget } from './search/terminal-search-widget';\nimport { TerminalCopyOnSelectionHandler } from './terminal-copy-on-selection-handler';\nimport { TerminalThemeService } from './terminal-theme-service';\nimport { CommandLineOptions, ShellCommandBuilder } from '@theia/process/lib/common/shell-command-builder';\nimport { Key } from '@theia/core/lib/browser/keys';\nimport { nls } from '@theia/core/lib/common/nls';\nimport { TerminalMenus } from './terminal-frontend-contribution';\n\nexport const TERMINAL_WIDGET_FACTORY_ID = 'terminal';\n\nexport interface TerminalWidgetFactoryOptions extends Partial<TerminalWidgetOptions> {\n    /* a unique string per terminal */\n    created: string\n}\n\nexport const TerminalContribution = Symbol('TerminalContribution');\nexport interface TerminalContribution {\n    onCreate(term: TerminalWidgetImpl): void;\n}\n\n@injectable()\nexport class TerminalWidgetImpl extends TerminalWidget implements StatefulWidget, ExtractableWidget {\n    readonly isExtractable: boolean = true;\n    secondaryWindow: Window | undefined;\n    location: TerminalLocationOptions;\n\n    static LABEL = nls.localizeByDefault('Terminal');\n\n    exitStatus: TerminalExitStatus | undefined;\n\n    protected terminalKind = 'user';\n    protected _terminalId = -1;\n    protected readonly onTermDidClose = new Emitter<TerminalWidget>();\n    protected fitAddon: FitAddon;\n    protected term: Terminal;\n    protected searchBox: TerminalSearchWidget;\n    protected restored = false;\n    protected closeOnDispose = true;\n    protected waitForConnection: Deferred<Channel> | undefined;\n    protected linkHover: HTMLDivElement;\n    protected linkHoverButton: HTMLAnchorElement;\n    protected lastTouchEnd: TouchEvent | undefined;\n    protected lastMousePosition: { x: number, y: number } | undefined;\n    protected isAttachedCloseListener: boolean = false;\n    protected shown = false;\n    override lastCwd = new URI();\n\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(WebSocketConnectionProvider) protected readonly webSocketConnectionProvider: WebSocketConnectionProvider;\n    @inject(TerminalWidgetOptions) options: TerminalWidgetOptions;\n    @inject(ShellTerminalServerProxy) protected readonly shellTerminalServer: ShellTerminalServerProxy;\n    @inject(TerminalWatcher) protected readonly terminalWatcher: TerminalWatcher;\n    @inject(ILogger) @named('terminal') protected readonly logger: ILogger;\n    @inject('terminal-dom-id') override readonly id: string;\n    @inject(TerminalPreferences) protected readonly preferences: TerminalPreferences;\n    @inject(ContributionProvider) @named(TerminalContribution) protected readonly terminalContributionProvider: ContributionProvider<TerminalContribution>;\n    @inject(TerminalService) protected readonly terminalService: TerminalService;\n    @inject(TerminalSearchWidgetFactory) protected readonly terminalSearchBoxFactory: TerminalSearchWidgetFactory;\n    @inject(TerminalCopyOnSelectionHandler) protected readonly copyOnSelectionHandler: TerminalCopyOnSelectionHandler;\n    @inject(TerminalThemeService) protected readonly themeService: TerminalThemeService;\n    @inject(ShellCommandBuilder) protected readonly shellCommandBuilder: ShellCommandBuilder;\n    @inject(ContextMenuRenderer) protected readonly contextMenuRenderer: ContextMenuRenderer;\n\n    protected readonly onDidOpenEmitter = new Emitter<void>();\n    readonly onDidOpen: Event<void> = this.onDidOpenEmitter.event;\n\n    protected readonly onDidOpenFailureEmitter = new Emitter<void>();\n    readonly onDidOpenFailure: Event<void> = this.onDidOpenFailureEmitter.event;\n\n    protected readonly onSizeChangedEmitter = new Emitter<{ cols: number; rows: number; }>();\n    readonly onSizeChanged: Event<{ cols: number; rows: number; }> = this.onSizeChangedEmitter.event;\n\n    protected readonly onDataEmitter = new Emitter<string>();\n    readonly onData: Event<string> = this.onDataEmitter.event;\n\n    protected readonly onKeyEmitter = new Emitter<{ key: string, domEvent: KeyboardEvent }>();\n    readonly onKey: Event<{ key: string, domEvent: KeyboardEvent }> = this.onKeyEmitter.event;\n\n    protected readonly onMouseEnterLinkHoverEmitter = new Emitter<MouseEvent>();\n    readonly onMouseEnterLinkHover: Event<MouseEvent> = this.onMouseEnterLinkHoverEmitter.event;\n\n    protected readonly onMouseLeaveLinkHoverEmitter = new Emitter<MouseEvent>();\n    readonly onMouseLeaveLinkHover: Event<MouseEvent> = this.onMouseLeaveLinkHoverEmitter.event;\n\n    protected readonly toDisposeOnConnect = new DisposableCollection();\n\n    @postConstruct()\n    protected init(): void {\n        this.setTitle(this.options.title || TerminalWidgetImpl.LABEL);\n\n        if (this.options.iconClass) {\n            this.title.iconClass = this.options.iconClass;\n        } else {\n            this.title.iconClass = codicon('terminal');\n        }\n\n        if (this.options.kind) {\n            this.terminalKind = this.options.kind;\n        }\n\n        if (this.options.destroyTermOnClose === true) {\n            this.toDispose.push(Disposable.create(() =>\n                this.term.dispose()\n            ));\n        }\n\n        this.location = this.options.location || TerminalLocation.Panel;\n\n        this.title.closable = true;\n        this.addClass('terminal-container');\n\n        this.term = new Terminal({\n            cursorBlink: this.preferences['terminal.integrated.cursorBlinking'],\n            cursorStyle: this.getCursorStyle(),\n            cursorWidth: this.preferences['terminal.integrated.cursorWidth'],\n            fontFamily: this.preferences['terminal.integrated.fontFamily'],\n            fontSize: this.preferences['terminal.integrated.fontSize'],\n            fontWeight: this.preferences['terminal.integrated.fontWeight'],\n            fontWeightBold: this.preferences['terminal.integrated.fontWeightBold'],\n            drawBoldTextInBrightColors: this.preferences['terminal.integrated.drawBoldTextInBrightColors'],\n            letterSpacing: this.preferences['terminal.integrated.letterSpacing'],\n            lineHeight: this.preferences['terminal.integrated.lineHeight'],\n            scrollback: this.preferences['terminal.integrated.scrollback'],\n            fastScrollSensitivity: this.preferences['terminal.integrated.fastScrollSensitivity'],\n            rendererType: this.getTerminalRendererType(this.preferences['terminal.integrated.rendererType']),\n            theme: this.themeService.theme\n        });\n\n        this.fitAddon = new FitAddon();\n        this.term.loadAddon(this.fitAddon);\n\n        this.initializeLinkHover();\n\n        this.toDispose.push(this.preferences.onPreferenceChanged(change => {\n            const lastSeparator = change.preferenceName.lastIndexOf('.');\n            if (lastSeparator > 0) {\n                let preferenceName = change.preferenceName.substr(lastSeparator + 1);\n                let preferenceValue = change.newValue;\n\n                if (preferenceName === 'rendererType') {\n                    const newRendererType = preferenceValue as string;\n                    if (newRendererType !== this.getTerminalRendererType(newRendererType)) {\n                        // Given terminal renderer type is not supported or invalid\n                        preferenceValue = DEFAULT_TERMINAL_RENDERER_TYPE;\n                    }\n                } else if (preferenceName === 'cursorBlinking') {\n                    // Convert the terminal preference into a valid `xterm` option\n                    preferenceName = 'cursorBlink';\n                } else if (preferenceName === 'cursorStyle') {\n                    preferenceValue = this.getCursorStyle();\n                }\n                try {\n                    this.term.setOption(preferenceName, preferenceValue);\n                } catch (e) {\n                    console.debug(`xterm configuration: '${preferenceName}' with value '${preferenceValue}' is not valid.`);\n                }\n                this.needsResize = true;\n                this.update();\n            }\n        }));\n\n        this.toDispose.push(this.themeService.onDidChange(() => this.term.setOption('theme', this.themeService.theme)));\n        this.attachCustomKeyEventHandler();\n        const titleChangeListenerDispose = this.term.onTitleChange((title: string) => {\n            if (this.options.useServerTitle) {\n                this.title.label = title;\n            }\n        });\n        this.toDispose.push(titleChangeListenerDispose);\n\n        this.toDispose.push(this.terminalWatcher.onTerminalError(({ terminalId, error }) => {\n            if (terminalId === this.terminalId) {\n                this.exitStatus = { code: undefined, reason: TerminalExitReason.Process };\n                this.dispose();\n                this.logger.error(`The terminal process terminated. Cause: ${error}`);\n            }\n        }));\n        this.toDispose.push(this.terminalWatcher.onTerminalExit(({ terminalId, code, reason }) => {\n            if (terminalId === this.terminalId) {\n                if (reason) {\n                    this.exitStatus = { code, reason };\n                } else {\n                    this.exitStatus = { code, reason: TerminalExitReason.Process };\n                }\n                this.dispose();\n            }\n        }));\n        this.toDispose.push(this.toDisposeOnConnect);\n        this.toDispose.push(this.shellTerminalServer.onDidCloseConnection(() => {\n            const disposable = this.shellTerminalServer.onDidOpenConnection(() => {\n                disposable.dispose();\n                this.reconnectTerminalProcess();\n            });\n            this.toDispose.push(disposable);\n        }));\n        this.toDispose.push(this.onTermDidClose);\n        this.toDispose.push(this.onDidOpenEmitter);\n        this.toDispose.push(this.onDidOpenFailureEmitter);\n        this.toDispose.push(this.onSizeChangedEmitter);\n        this.toDispose.push(this.onDataEmitter);\n        this.toDispose.push(this.onKeyEmitter);\n\n        const touchEndListener = (event: TouchEvent) => {\n            if (this.node.contains(event.target as Node)) {\n                this.lastTouchEnd = event;\n            }\n        };\n        document.addEventListener('touchend', touchEndListener, { passive: true });\n        this.onDispose(() => {\n            document.removeEventListener('touchend', touchEndListener);\n        });\n\n        const mouseListener = (event: MouseEvent) => {\n            this.lastMousePosition = { x: event.x, y: event.y };\n        };\n        this.node.addEventListener('mousemove', mouseListener);\n        this.onDispose(() => {\n            this.node.removeEventListener('mousemove', mouseListener);\n        });\n\n        const contextMenuListener = (event: MouseEvent) => {\n            event.preventDefault();\n            event.stopPropagation();\n            this.contextMenuRenderer.render({ menuPath: TerminalMenus.TERMINAL_CONTEXT_MENU, anchor: event });\n        };\n        this.node.addEventListener('contextmenu', contextMenuListener);\n        this.onDispose(() => this.node.removeEventListener('contextmenu', contextMenuListener));\n\n        this.toDispose.push(this.term.onSelectionChange(() => {\n            if (this.copyOnSelection) {\n                this.copyOnSelectionHandler.copy(this.term.getSelection());\n            }\n        }));\n\n        this.toDispose.push(this.term.onResize(data => {\n            this.onSizeChangedEmitter.fire(data);\n        }));\n\n        this.toDispose.push(this.term.onData(data => {\n            this.onDataEmitter.fire(data);\n        }));\n\n        this.toDispose.push(this.term.onBinary(data => {\n            this.onDataEmitter.fire(data);\n        }));\n\n        this.toDispose.push(this.term.onKey(data => {\n            this.onKeyEmitter.fire(data);\n        }));\n\n        for (const contribution of this.terminalContributionProvider.getContributions()) {\n            contribution.onCreate(this);\n        }\n\n        this.searchBox = this.terminalSearchBoxFactory(this.term);\n        this.toDispose.push(this.searchBox);\n    }\n\n    get kind(): 'user' | string {\n        return this.terminalKind;\n    }\n\n    /**\n     * Get the cursor style compatible with `xterm`.\n     * @returns CursorStyle\n     */\n    private getCursorStyle(): CursorStyle {\n        const value = this.preferences['terminal.integrated.cursorStyle'];\n        return value === 'line' ? 'bar' : value;\n    }\n\n    /**\n     * Returns given renderer type if it is valid and supported or default renderer otherwise.\n     *\n     * @param terminalRendererType desired terminal renderer type\n     */\n    private getTerminalRendererType(terminalRendererType?: string | TerminalRendererType): RendererType {\n        if (terminalRendererType && isTerminalRendererType(terminalRendererType)) {\n            return terminalRendererType;\n        }\n        return DEFAULT_TERMINAL_RENDERER_TYPE;\n    }\n\n    protected initializeLinkHover(): void {\n        this.linkHover = document.createElement('div');\n        this.linkHover.style.position = 'fixed';\n        this.linkHover.style.color = 'var(--theia-editorHoverWidget-foreground)';\n        this.linkHover.style.backgroundColor = 'var(--theia-editorHoverWidget-background)';\n        this.linkHover.style.borderColor = 'var(--theia-editorHoverWidget-border)';\n        this.linkHover.style.borderWidth = '0.5px';\n        this.linkHover.style.borderStyle = 'solid';\n        this.linkHover.style.padding = '5px';\n        // Above the xterm.js canvas layers:\n        // https://github.com/xtermjs/xterm.js/blob/ff790236c1b205469f17a21246141f512d844295/src/renderer/Renderer.ts#L41-L46\n        this.linkHover.style.zIndex = '10';\n        // Initially invisible:\n        this.linkHover.style.display = 'none';\n\n        this.linkHoverButton = document.createElement('a');\n        this.linkHoverButton.textContent = this.linkHoverMessage();\n        this.linkHoverButton.style.cursor = 'pointer';\n        this.linkHover.appendChild(this.linkHoverButton);\n\n        const cmdCtrl = isOSX ? 'cmd' : 'ctrl';\n        const cmdHint = document.createTextNode(` (${nls.localizeByDefault(`${cmdCtrl} + click`)})`);\n        this.linkHover.appendChild(cmdHint);\n\n        const onMouseEnter = (mouseEvent: MouseEvent) => this.onMouseEnterLinkHoverEmitter.fire(mouseEvent);\n        this.linkHover.addEventListener('mouseenter', onMouseEnter);\n        this.toDispose.push(Disposable.create(() => this.linkHover.removeEventListener('mouseenter', onMouseEnter)));\n\n        const onMouseLeave = (mouseEvent: MouseEvent) => this.onMouseLeaveLinkHoverEmitter.fire(mouseEvent);\n        this.linkHover.addEventListener('mouseleave', onMouseLeave);\n        this.toDispose.push(Disposable.create(() => this.linkHover.removeEventListener('mouseleave', onMouseLeave)));\n\n        this.node.appendChild(this.linkHover);\n    }\n\n    showLinkHover(invokeAction: (event: MouseEvent) => void, x: number, y: number, message?: string): void {\n        const mouseY = this.lastMousePosition?.y ?? y;\n        const mouseX = this.lastMousePosition?.x ?? x;\n        this.linkHoverButton.textContent = this.linkHoverMessage(message);\n        this.linkHoverButton.onclick = (mouseEvent: MouseEvent) => invokeAction(mouseEvent);\n        this.linkHover.style.display = 'inline';\n        this.linkHover.style.top = `${mouseY - 30}px`;\n        this.linkHover.style.left = `${mouseX - 60}px`;\n    }\n\n    protected linkHoverMessage(message?: string): string {\n        return message ?? nls.localizeByDefault('Follow link');\n    }\n\n    hideLinkHover(): void {\n        this.linkHover.style.display = 'none';\n        // eslint-disable-next-line no-null/no-null\n        this.linkHoverButton.onclick = null;\n    }\n\n    getTerminal(): Terminal {\n        return this.term;\n    }\n\n    getSearchBox(): TerminalSearchWidget {\n        return this.searchBox;\n    }\n\n    protected override onCloseRequest(msg: Message): void {\n        this.exitStatus = { code: undefined, reason: TerminalExitReason.User };\n        super.onCloseRequest(msg);\n    }\n\n    get dimensions(): TerminalDimensions {\n        return {\n            cols: this.term.cols,\n            rows: this.term.rows,\n        };\n    }\n\n    get cwd(): Promise<URI> {\n        if (!IBaseTerminalServer.validateId(this.terminalId)) {\n            return Promise.reject(new Error('terminal is not started'));\n        }\n        if (this.terminalService.getById(this.id)) {\n            return this.shellTerminalServer.getCwdURI(this.terminalId)\n                .then(cwdUrl => {\n                    this.lastCwd = new URI(cwdUrl);\n                    return this.lastCwd;\n                }).catch(() => this.lastCwd);\n        }\n        return Promise.resolve(new URI());\n    }\n\n    get processId(): Promise<number> {\n        if (!IBaseTerminalServer.validateId(this.terminalId)) {\n            return Promise.reject(new Error('terminal is not started'));\n        }\n        return this.shellTerminalServer.getProcessId(this.terminalId);\n    }\n\n    get processInfo(): Promise<TerminalProcessInfo> {\n        if (!IBaseTerminalServer.validateId(this.terminalId)) {\n            return Promise.reject(new Error('terminal is not started'));\n        }\n        return this.shellTerminalServer.getProcessInfo(this.terminalId);\n    }\n\n    get terminalId(): number {\n        return this._terminalId;\n    }\n\n    get lastTouchEndEvent(): TouchEvent | undefined {\n        return this.lastTouchEnd;\n    }\n\n    get hiddenFromUser(): boolean {\n        if (this.shown) {\n            return false;\n        }\n        return this.options.hideFromUser ?? false;\n    }\n\n    get transient(): boolean {\n        // The terminal is transient if session persistence is disabled or it's explicitly marked as transient\n        return !this.preferences['terminal.integrated.enablePersistentSessions'] || !!this.options.isTransient;\n    }\n\n    onDispose(onDispose: () => void): void {\n        this.toDispose.push(Disposable.create(onDispose));\n    }\n\n    clearOutput(): void {\n        this.term.clear();\n    }\n\n    selectAll(): void {\n        this.term.selectAll();\n    }\n\n    async hasChildProcesses(): Promise<boolean> {\n        return this.shellTerminalServer.hasChildProcesses(await this.processId);\n    }\n\n    storeState(): object {\n        this.closeOnDispose = false;\n        if (this.transient || this.options.isPseudoTerminal) {\n            return {};\n        }\n        return { terminalId: this.terminalId, titleLabel: this.title.label };\n    }\n\n    restoreState(oldState: object): void {\n        // transient terminals and pseudo terminals are not restored\n        if (this.transient || this.options.isPseudoTerminal) {\n            this.dispose();\n            return;\n        }\n        if (this.restored === false) {\n            const state = oldState as { terminalId: number, titleLabel: string };\n            /* This is a workaround to issue #879 */\n            this.restored = true;\n            this.title.label = state.titleLabel;\n            this.start(state.terminalId);\n        }\n    }\n\n    /**\n     * Create a new shell terminal in the back-end and attach it to a\n     * new terminal widget.\n     * If id is provided attach to the terminal for this id.\n     */\n    async start(id?: number): Promise<number> {\n        this._terminalId = typeof id !== 'number' ? await this.createTerminal() : await this.attachTerminal(id);\n        this.resizeTerminalProcess();\n        this.connectTerminalProcess();\n        if (IBaseTerminalServer.validateId(this.terminalId)) {\n            this.onDidOpenEmitter.fire(undefined);\n            await this.shellTerminalServer.onAttachAttempted(this._terminalId);\n            return this.terminalId;\n        }\n        this.onDidOpenFailureEmitter.fire(undefined);\n        throw new Error('Failed to start terminal' + (id ? ` for id: ${id}.` : '.'));\n    }\n\n    protected async attachTerminal(id: number): Promise<number> {\n        const terminalId = await this.shellTerminalServer.attach(id);\n        if (IBaseTerminalServer.validateId(terminalId)) {\n            return terminalId;\n        }\n        this.logger.warn(`Failed attaching to terminal id ${id}, the terminal is most likely gone. Starting up a new terminal instead.`);\n        if (this.kind === 'user') {\n            return this.createTerminal();\n        } else {\n            return -1;\n        }\n    }\n\n    protected async createTerminal(): Promise<number> {\n        let rootURI = this.options.cwd?.toString();\n        if (!rootURI) {\n            const root = (await this.workspaceService.roots)[0];\n            rootURI = root?.resource?.toString();\n        }\n        const { cols, rows } = this.term;\n\n        const terminalId = await this.shellTerminalServer.create({\n            shell: this.options.shellPath || this.shellPreferences.shell[OS.backend.type()],\n            args: this.options.shellArgs || this.shellPreferences.shellArgs[OS.backend.type()],\n            env: this.options.env,\n            strictEnv: this.options.strictEnv,\n            isPseudo: this.options.isPseudoTerminal,\n            rootURI,\n            cols,\n            rows\n        });\n        if (IBaseTerminalServer.validateId(terminalId)) {\n            return terminalId;\n        }\n        throw new Error('Error creating terminal widget, see the backend error log for more information.');\n    }\n\n    override processMessage(msg: Message): void {\n        super.processMessage(msg);\n        switch (msg.type) {\n            case 'fit-request':\n                this.onFitRequest(msg);\n                break;\n            default:\n                break;\n        }\n    }\n    protected override onFitRequest(msg: Message): void {\n        super.onFitRequest(msg);\n        MessageLoop.sendMessage(this, Widget.ResizeMessage.UnknownSize);\n    }\n    protected override onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        this.term.focus();\n    }\n    protected override onAfterShow(msg: Message): void {\n        super.onAfterShow(msg);\n        this.update();\n        this.shown = true;\n    }\n    protected override onAfterAttach(msg: Message): void {\n        Widget.attach(this.searchBox, this.node);\n        super.onAfterAttach(msg);\n        this.update();\n    }\n    protected override onBeforeDetach(msg: Message): void {\n        Widget.detach(this.searchBox);\n        super.onBeforeDetach(msg);\n    }\n    protected override onResize(msg: Widget.ResizeMessage): void {\n        super.onResize(msg);\n        this.needsResize = true;\n        this.update();\n    }\n\n    protected needsResize = true;\n    protected override onUpdateRequest(msg: Message): void {\n        super.onUpdateRequest(msg);\n        if (!this.isVisible || !this.isAttached) {\n            return;\n        }\n\n        this.open();\n\n        if (this.needsResize) {\n            this.resizeTerminal();\n            this.needsResize = false;\n\n            this.resizeTerminalProcess();\n        }\n    }\n\n    // Device status code emitted by Xterm.js\n    // Check: https://github.com/xtermjs/xterm.js/blob/release/3.14/src/InputHandler.ts#L1055-L1082\n    protected readonly deviceStatusCodes = new Set(['\\u001B[>0;276;0c', '\\u001B[>85;95;0c', '\\u001B[>83;40003;0c', '\\u001B[?1;2c', '\\u001B[?6c']);\n\n    protected connectTerminalProcess(): void {\n        if (typeof this.terminalId !== 'number') {\n            return;\n        }\n        if (this.options.isPseudoTerminal) {\n            return;\n        }\n        this.toDisposeOnConnect.dispose();\n        this.toDispose.push(this.toDisposeOnConnect);\n        const waitForConnection = this.waitForConnection = new Deferred<Channel>();\n        this.webSocketConnectionProvider.listen({\n            path: `${terminalsPath}/${this.terminalId}`,\n            onConnection: connection => {\n                connection.onMessage(e => {\n                    this.write(e().readString());\n                });\n\n                // Excludes the device status code emitted by Xterm.js\n                const sendData = (data?: string) => {\n                    if (data && !this.deviceStatusCodes.has(data) && !this.disableEnterWhenAttachCloseListener()) {\n                        connection.getWriteBuffer().writeString(data).commit();\n                    }\n                };\n\n                const disposable = new DisposableCollection();\n                disposable.push(this.term.onData(sendData));\n                disposable.push(this.term.onBinary(sendData));\n\n                connection.onClose(() => disposable.dispose());\n\n                if (waitForConnection) {\n                    waitForConnection.resolve(connection);\n                }\n            }\n        }, { reconnecting: false });\n    }\n    protected async reconnectTerminalProcess(): Promise<void> {\n        if (this.options.isPseudoTerminal) {\n            return;\n        }\n        if (typeof this.terminalId === 'number') {\n            await this.start(this.terminalId);\n        }\n    }\n\n    protected termOpened = false;\n    protected initialData = '';\n    protected open(): void {\n        if (this.termOpened) {\n            return;\n        }\n        this.term.open(this.node);\n\n        if (isFirefox) {\n            // monkey patching intersection observer handling for secondary window support\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const renderService: any = (this.term as any)._core._renderService;\n            const originalFunc: (entry: IntersectionObserverEntry) => void = renderService._onIntersectionChange.bind(renderService);\n            const replacement = function (entry: IntersectionObserverEntry): void {\n                if (entry.target.ownerDocument !== document) {\n                    // in Firefox, the intersection observer always reports the widget as non-intersecting if the dom element\n                    // is in a different document from when the IntersectionObserver started observing. Since we know\n                    // that the widget is always \"visible\" when in a secondary window, so we mark the entry as \"intersecting\"\n                    const patchedEvent: IntersectionObserverEntry = {\n                        ...entry,\n                        isIntersecting: true,\n                    };\n                    originalFunc(patchedEvent);\n                } else {\n                    originalFunc(entry);\n                }\n            };\n\n            renderService._onIntersectionChange = replacement;\n        }\n\n        if (this.initialData) {\n            this.term.write(this.initialData);\n        }\n        this.termOpened = true;\n        this.initialData = '';\n\n        if (isFirefox) {\n            // The software scrollbars don't work with xterm.js, so we disable the scrollbar if we are on firefox.\n            if (this.term.element) {\n                (this.term.element.children.item(0) as HTMLElement).style.overflow = 'hidden';\n            }\n        }\n    }\n\n    write(data: string): void {\n        if (this.termOpened) {\n            this.term.write(data);\n        } else {\n            this.initialData += data;\n        }\n    }\n\n    resize(cols: number, rows: number): void {\n        this.term.resize(cols, rows);\n    }\n\n    sendText(text: string): void {\n        if (this.waitForConnection) {\n            this.waitForConnection.promise.then(connection =>\n                connection.getWriteBuffer().writeString(text).commit()\n            );\n        }\n    }\n\n    async executeCommand(commandOptions: CommandLineOptions): Promise<void> {\n        this.sendText(this.shellCommandBuilder.buildCommand(await this.processInfo, commandOptions) + '\\n');\n    }\n\n    scrollLineUp(): void {\n        this.term.scrollLines(-1);\n    }\n\n    scrollLineDown(): void {\n        this.term.scrollLines(1);\n    }\n\n    scrollToTop(): void {\n        this.term.scrollToTop();\n    }\n\n    scrollToBottom(): void {\n        this.term.scrollToBottom();\n    }\n\n    scrollPageUp(): void {\n        this.term.scrollPages(-1);\n    }\n\n    scrollPageDown(): void {\n        this.term.scrollPages(1);\n    }\n\n    resetTerminal(): void {\n        this.term.reset();\n    }\n\n    writeLine(text: string): void {\n        this.term.writeln(text);\n    }\n\n    get onTerminalDidClose(): Event<TerminalWidget> {\n        return this.onTermDidClose.event;\n    }\n\n    override dispose(): void {\n        if (this.closeOnDispose === true && typeof this.terminalId === 'number' && !this.exitStatus) {\n            // Close the backend terminal only when explicitly closing the terminal\n            // a refresh for example won't close it.\n            this.shellTerminalServer.close(this.terminalId);\n            // Exit status is set when terminal is closed by user or by process, so most likely an extension closed it.\n            this.exitStatus = { code: undefined, reason: TerminalExitReason.Extension };\n        }\n        if (this.exitStatus) {\n            this.onTermDidClose.fire(this);\n        }\n        super.dispose();\n    }\n\n    protected resizeTerminal(): void {\n        const geo = this.fitAddon.proposeDimensions();\n        const cols = geo.cols;\n        const rows = geo.rows - 1; // subtract one row for margin\n        this.term.resize(cols, rows);\n    }\n\n    protected resizeTerminalProcess(): void {\n        if (this.options.isPseudoTerminal) {\n            return;\n        }\n        if (!IBaseTerminalServer.validateId(this.terminalId)\n            || !this.terminalService.getById(this.id)) {\n            return;\n        }\n        const { cols, rows } = this.term;\n        this.shellTerminalServer.resize(this.terminalId, cols, rows);\n    }\n\n    protected get enableCopy(): boolean {\n        return this.preferences['terminal.enableCopy'];\n    }\n\n    protected get enablePaste(): boolean {\n        return this.preferences['terminal.enablePaste'];\n    }\n\n    protected get shellPreferences(): IShellTerminalPreferences {\n        return {\n            shell: {\n                Windows: this.preferences['terminal.integrated.shell.windows'] ?? undefined,\n                Linux: this.preferences['terminal.integrated.shell.linux'] ?? undefined,\n                OSX: this.preferences['terminal.integrated.shell.osx'] ?? undefined,\n            },\n            shellArgs: {\n                Windows: this.preferences['terminal.integrated.shellArgs.windows'],\n                Linux: this.preferences['terminal.integrated.shellArgs.linux'],\n                OSX: this.preferences['terminal.integrated.shellArgs.osx'],\n            }\n        };\n    }\n\n    protected customKeyHandler(event: KeyboardEvent): boolean {\n        const keyBindings = KeyCode.createKeyCode(event).toString();\n        const ctrlCmdCopy = (isOSX && keyBindings === 'meta+c') || (!isOSX && keyBindings === 'ctrl+c');\n        const ctrlCmdPaste = (isOSX && keyBindings === 'meta+v') || (!isOSX && keyBindings === 'ctrl+v');\n        if (ctrlCmdCopy && this.enableCopy && this.term.hasSelection()) {\n            return false;\n        }\n        if (ctrlCmdPaste && this.enablePaste) {\n            return false;\n        }\n        return true;\n    }\n\n    protected get copyOnSelection(): boolean {\n        return this.preferences['terminal.integrated.copyOnSelection'];\n    }\n\n    protected attachCustomKeyEventHandler(): void {\n        this.term.attachCustomKeyEventHandler(e => this.customKeyHandler(e));\n    }\n\n    setTitle(title: string): void {\n        this.title.caption = title;\n        this.title.label = title;\n    }\n\n    waitOnExit(waitOnExit?: boolean | string): void {\n        if (waitOnExit) {\n            if (typeof waitOnExit === 'string') {\n                let message = waitOnExit;\n                // Bold the message and add an extra new line to make it stand out from the rest of the output\n                message = `\\r\\n\\x1b[1m${message}\\x1b[0m`;\n                this.write(message);\n            }\n            this.attachPressEnterKeyToCloseListener(this.term);\n            return;\n        }\n        this.dispose();\n    }\n\n    private attachPressEnterKeyToCloseListener(term: Terminal): void {\n        if (term.textarea) {\n            this.isAttachedCloseListener = true;\n            this.addKeyListener(term.textarea, Key.ENTER, (event: KeyboardEvent) => {\n                this.dispose();\n                this.isAttachedCloseListener = false;\n            });\n        }\n    }\n\n    private disableEnterWhenAttachCloseListener(): boolean {\n        return this.isAttachedCloseListener;\n    }\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { JsonRpcServer } from '@theia/core/lib/common/messaging/proxy-factory';\nimport { Disposable } from '@theia/core';\n\nexport interface TerminalProcessInfo {\n    executable: string\n    arguments: string[]\n}\n\nexport interface IBaseTerminalServerOptions { }\n\nexport interface IBaseTerminalServer extends JsonRpcServer<IBaseTerminalClient> {\n    create(IBaseTerminalServerOptions: object): Promise<number>;\n    getProcessId(id: number): Promise<number>;\n    getProcessInfo(id: number): Promise<TerminalProcessInfo>;\n    getCwdURI(id: number): Promise<string>;\n    resize(id: number, cols: number, rows: number): Promise<void>;\n    attach(id: number): Promise<number>;\n    onAttachAttempted(id: number): Promise<void>;\n    close(id: number): Promise<void>;\n    getDefaultShell(): Promise<string>;\n\n    /**\n     * Gets a single collection constructed by merging all environment variable collections into\n     * one.\n     */\n    readonly collections: ReadonlyMap<string, EnvironmentVariableCollection>;\n    /**\n     * Gets a single collection constructed by merging all environment variable collections into\n     * one.\n     */\n    readonly mergedCollection: MergedEnvironmentVariableCollection;\n    /**\n     * Sets an extension's environment variable collection.\n     */\n    setCollection(extensionIdentifier: string, persistent: boolean, collection: SerializableEnvironmentVariableCollection): void;\n    /**\n     * Deletes an extension's environment variable collection.\n     */\n    deleteCollection(extensionIdentifier: string): void;\n}\nexport namespace IBaseTerminalServer {\n    export function validateId(id?: number): boolean {\n        return typeof id === 'number' && id !== -1;\n    }\n}\n\nexport interface IBaseTerminalExitEvent {\n    terminalId: number;\n\n    // Either code and reason will be set or signal.\n    code?: number;\n    reason?: TerminalExitReason;\n    signal?: string;\n}\n\nexport enum TerminalExitReason {\n    Unknown = 0,\n    Shutdown = 1,\n    Process = 2,\n    User = 3,\n    Extension = 4,\n}\n\nexport interface IBaseTerminalErrorEvent {\n    terminalId: number;\n    error: Error\n}\n\nexport interface IBaseTerminalClient {\n    onTerminalExitChanged(event: IBaseTerminalExitEvent): void;\n    onTerminalError(event: IBaseTerminalErrorEvent): void;\n    updateTerminalEnvVariables(): void;\n    storeTerminalEnvVariables(data: string): void;\n}\n\nexport class DispatchingBaseTerminalClient {\n\n    protected readonly clients = new Set<IBaseTerminalClient>();\n\n    push(client: IBaseTerminalClient): Disposable {\n        this.clients.add(client);\n        return Disposable.create(() => this.clients.delete(client));\n    }\n\n    onTerminalExitChanged(event: IBaseTerminalExitEvent): void {\n        this.clients.forEach(c => {\n            try {\n                c.onTerminalExitChanged(event);\n            } catch (e) {\n                console.error(e);\n            }\n        });\n    }\n\n    onTerminalError(event: IBaseTerminalErrorEvent): void {\n\n        this.clients.forEach(c => {\n            try {\n                c.onTerminalError(event);\n            } catch (e) {\n                console.error(e);\n            }\n        });\n    }\n\n    updateTerminalEnvVariables(): void {\n        this.clients.forEach(c => {\n            try {\n                c.updateTerminalEnvVariables();\n            } catch (e) {\n                console.error(e);\n            }\n        });\n    }\n\n    storeTerminalEnvVariables(data: string): void {\n        this.clients.forEach(c => {\n            try {\n                c.storeTerminalEnvVariables(data);\n            } catch (e) {\n                console.error(e);\n            }\n        });\n    }\n}\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// some code copied and modified from https://github.com/microsoft/vscode/blob/1.49.0/src/vs/workbench/contrib/terminal/common/environmentVariable.ts\n\nexport const ENVIRONMENT_VARIABLE_COLLECTIONS_KEY = 'terminal.integrated.environmentVariableCollections';\n\nexport interface EnvironmentVariableCollection {\n    readonly map: ReadonlyMap<string, EnvironmentVariableMutator>;\n}\n\nexport interface EnvironmentVariableCollectionWithPersistence extends EnvironmentVariableCollection {\n    readonly persistent: boolean;\n}\n\nexport enum EnvironmentVariableMutatorType {\n    Replace = 1,\n    Append = 2,\n    Prepend = 3\n}\n\nexport interface EnvironmentVariableMutator {\n    readonly value: string;\n    readonly type: EnvironmentVariableMutatorType;\n}\n\nexport interface ExtensionOwnedEnvironmentVariableMutator extends EnvironmentVariableMutator {\n    readonly extensionIdentifier: string;\n}\n\n/**\n * Represents an environment variable collection that results from merging several collections\n * together.\n */\nexport interface MergedEnvironmentVariableCollection {\n    readonly map: ReadonlyMap<string, ExtensionOwnedEnvironmentVariableMutator[]>;\n\n    /**\n     * Applies this collection to a process environment.\n     */\n    applyToProcessEnvironment(env: { [key: string]: string | null }): void;\n}\n\nexport interface SerializableExtensionEnvironmentVariableCollection {\n    extensionIdentifier: string,\n    collection: SerializableEnvironmentVariableCollection\n}\n\nexport type SerializableEnvironmentVariableCollection = [string, EnvironmentVariableMutator][];\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { JsonRpcProxy } from '@theia/core';\nimport { IBaseTerminalServer, IBaseTerminalServerOptions } from './base-terminal-protocol';\nimport { OS } from '@theia/core/lib/common/os';\n\nexport const IShellTerminalServer = Symbol('IShellTerminalServer');\n\nexport interface IShellTerminalServer extends IBaseTerminalServer {\n    hasChildProcesses(processId: number | undefined): Promise<boolean>;\n}\n\nexport const shellTerminalPath = '/services/shell-terminal';\n\nexport type ShellTerminalOSPreferences<T> = {\n    [key in OS.Type]: T\n};\n\nexport interface IShellTerminalPreferences {\n    shell: ShellTerminalOSPreferences<string | undefined>,\n    shellArgs: ShellTerminalOSPreferences<string[]>\n};\n\nexport interface IShellTerminalServerOptions extends IBaseTerminalServerOptions {\n    shell?: string,\n    args?: string[] | string,\n    rootURI?: string,\n    cols?: number,\n    rows?: number,\n    env?: { [key: string]: string | null },\n    strictEnv?: boolean,\n    isPseudo?: boolean,\n}\n\nexport const ShellTerminalServerProxy = Symbol('ShellTerminalServerProxy');\nexport type ShellTerminalServerProxy = JsonRpcProxy<IShellTerminalServer>;\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { IBaseTerminalServer, IBaseTerminalServerOptions } from './base-terminal-protocol';\n\nexport const ITerminalServer = Symbol('ITerminalServer');\n\nexport const terminalPath = '/services/terminal';\nexport const terminalsPath = '/services/terminals';\n\nexport interface ITerminalServer extends IBaseTerminalServer {\n    create(ITerminalServerOptions: object): Promise<number>;\n}\n\nexport interface ITerminalServerOptions extends IBaseTerminalServerOptions {\n    command: string,\n    args?: string[],\n    options?: object\n}\n","// *****************************************************************************\n// Copyright (C) 2017 Ericsson and others.\n//\n// This program and the accompanying materials are made available under the\n// terms of the Eclipse Public License v. 2.0 which is available at\n// http://www.eclipse.org/legal/epl-2.0.\n//\n// This Source Code may also be made available under the following Secondary\n// Licenses when the conditions for such availability set forth in the Eclipse\n// Public License v. 2.0 are satisfied: GNU General Public License, version 2\n// with the GNU Classpath Exception which is available at\n// https://www.gnu.org/software/classpath/license.html.\n//\n// SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n// *****************************************************************************\n\nimport { injectable } from '@theia/core/shared/inversify';\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport {\n    IBaseTerminalClient,\n    IBaseTerminalExitEvent,\n    IBaseTerminalErrorEvent\n} from './base-terminal-protocol';\n\n@injectable()\nexport class TerminalWatcher {\n\n    getTerminalClient(): IBaseTerminalClient {\n        const exitEmitter = this.onTerminalExitEmitter;\n        const errorEmitter = this.onTerminalErrorEmitter;\n        const storeTerminalEnvVariablesEmitter = this.onStoreTerminalEnvVariablesRequestedEmitter;\n        const updateTerminalEnvVariablesEmitter = this.onUpdateTerminalEnvVariablesRequestedEmitter;\n        return {\n            storeTerminalEnvVariables(data: string): void {\n                storeTerminalEnvVariablesEmitter.fire(data);\n            },\n            updateTerminalEnvVariables(): void {\n                updateTerminalEnvVariablesEmitter.fire(undefined);\n            },\n            onTerminalExitChanged(event: IBaseTerminalExitEvent): void {\n                exitEmitter.fire(event);\n            },\n            onTerminalError(event: IBaseTerminalErrorEvent): void {\n                errorEmitter.fire(event);\n            }\n        };\n    }\n\n    private onTerminalExitEmitter = new Emitter<IBaseTerminalExitEvent>();\n    private onTerminalErrorEmitter = new Emitter<IBaseTerminalErrorEvent>();\n    private onStoreTerminalEnvVariablesRequestedEmitter = new Emitter<string>();\n    private onUpdateTerminalEnvVariablesRequestedEmitter = new Emitter<undefined>();\n\n    get onTerminalExit(): Event<IBaseTerminalExitEvent> {\n        return this.onTerminalExitEmitter.event;\n    }\n\n    get onTerminalError(): Event<IBaseTerminalErrorEvent> {\n        return this.onTerminalErrorEmitter.event;\n    }\n\n    get onStoreTerminalEnvVariablesRequested(): Event<string> {\n        return this.onStoreTerminalEnvVariablesRequestedEmitter.event;\n    }\n\n    get onUpdateTerminalEnvVariablesRequested(): Event<undefined> {\n        return this.onUpdateTerminalEnvVariablesRequestedEmitter.event;\n    }\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FitAddon\"] = factory();\n\telse\n\t\troot[\"FitAddon\"] = factory();\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, ITerminalAddon } from 'xterm';\n\ninterface ITerminalDimensions {\n  /**\n   * The number of rows in the terminal.\n   */\n  rows: number;\n\n  /**\n   * The number of columns in the terminal.\n   */\n  cols: number;\n}\n\nconst MINIMUM_COLS = 2;\nconst MINIMUM_ROWS = 1;\n\nexport class FitAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n\n  constructor() {}\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n  }\n\n  public dispose(): void {}\n\n  public fit(): void {\n    const dims = this.proposeDimensions();\n    if (!dims || !this._terminal) {\n      return;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n\n    // Force a full render\n    if (this._terminal.rows !== dims.rows || this._terminal.cols !== dims.cols) {\n      core._renderService.clear();\n      this._terminal.resize(dims.cols, dims.rows);\n    }\n  }\n\n  public proposeDimensions(): ITerminalDimensions | undefined {\n    if (!this._terminal) {\n      return undefined;\n    }\n\n    if (!this._terminal.element || !this._terminal.element.parentElement) {\n      return undefined;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n\n    if (core._renderService.dimensions.actualCellWidth === 0 || core._renderService.dimensions.actualCellHeight === 0) {\n      return undefined;\n    }\n\n    const parentElementStyle = window.getComputedStyle(this._terminal.element.parentElement);\n    const parentElementHeight = parseInt(parentElementStyle.getPropertyValue('height'));\n    const parentElementWidth = Math.max(0, parseInt(parentElementStyle.getPropertyValue('width')));\n    const elementStyle = window.getComputedStyle(this._terminal.element);\n    const elementPadding = {\n      top: parseInt(elementStyle.getPropertyValue('padding-top')),\n      bottom: parseInt(elementStyle.getPropertyValue('padding-bottom')),\n      right: parseInt(elementStyle.getPropertyValue('padding-right')),\n      left: parseInt(elementStyle.getPropertyValue('padding-left'))\n    };\n    const elementPaddingVer = elementPadding.top + elementPadding.bottom;\n    const elementPaddingHor = elementPadding.right + elementPadding.left;\n    const availableHeight = parentElementHeight - elementPaddingVer;\n    const availableWidth = parentElementWidth - elementPaddingHor - core.viewport.scrollBarWidth;\n    const geometry = {\n      cols: Math.max(MINIMUM_COLS, Math.floor(availableWidth / core._renderService.dimensions.actualCellWidth)),\n      rows: Math.max(MINIMUM_ROWS, Math.floor(availableHeight / core._renderService.dimensions.actualCellHeight))\n    };\n    return geometry;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(775);\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SearchAddon\"] = factory();\n\telse\n\t\troot[\"SearchAddon\"] = factory();\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, IBufferLine, IDisposable, ITerminalAddon, ISelectionPosition } from 'xterm';\n\nexport interface ISearchOptions {\n  regex?: boolean;\n  wholeWord?: boolean;\n  caseSensitive?: boolean;\n  incremental?: boolean;\n}\n\nexport interface ISearchPosition {\n  startCol: number;\n  startRow: number;\n}\n\nexport interface ISearchResult {\n  term: string;\n  col: number;\n  row: number;\n  size: number;\n}\n\ntype LineCacheEntry = [\n  /**\n   * The string representation of a line (as opposed to the buffer cell representation).\n   */\n  lineAsString: string,\n  /**\n   * The offsets where each line starts when the entry describes a wrapped line.\n   */\n  lineOffsets: number[]\n];\n\nconst NON_WORD_CHARACTERS = ' ~!@#$%^&*()+`-=[]{}|\\\\;:\"\\',./<>?';\nconst LINES_CACHE_TIME_TO_LIVE = 15 * 1000; // 15 secs\n\nexport class SearchAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n\n  /**\n   * translateBufferLineToStringWithWrap is a fairly expensive call.\n   * We memoize the calls into an array that has a time based ttl.\n   * _linesCache is also invalidated when the terminal cursor moves.\n   */\n  private _linesCache: LineCacheEntry[] | undefined;\n  private _linesCacheTimeoutId = 0;\n  private _cursorMoveListener: IDisposable | undefined;\n  private _resizeListener: IDisposable | undefined;\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n  }\n\n  public dispose(): void { }\n\n  /**\n   * Find the next instance of the term, then scroll to and select it. If it\n   * doesn't exist, do nothing.\n   * @param term The search term.\n   * @param searchOptions Search options.\n   * @return Whether a result was found.\n   */\n  public findNext(term: string, searchOptions?: ISearchOptions): boolean {\n    if (!this._terminal) {\n      throw new Error('Cannot use addon until it has been loaded');\n    }\n\n    if (!term || term.length === 0) {\n      this._terminal.clearSelection();\n      return false;\n    }\n\n    let startCol = 0;\n    let startRow = 0;\n    let currentSelection: ISelectionPosition | undefined;\n    if (this._terminal.hasSelection()) {\n      const incremental = searchOptions ? searchOptions.incremental : false;\n      // Start from the selection end if there is a selection\n      // For incremental search, use existing row\n      currentSelection = this._terminal.getSelectionPosition()!;\n      startRow = incremental ? currentSelection.startRow : currentSelection.endRow;\n      startCol = incremental ? currentSelection.startColumn : currentSelection.endColumn;\n    }\n\n    this._initLinesCache();\n\n    const searchPosition: ISearchPosition = {\n      startRow,\n      startCol\n    };\n\n    // Search startRow\n    let result = this._findInLine(term, searchPosition, searchOptions);\n\n    // Search from startRow + 1 to end\n    if (!result) {\n\n      for (let y = startRow + 1; y < this._terminal.buffer.active.baseY + this._terminal.rows; y++) {\n        searchPosition.startRow = y;\n        searchPosition.startCol = 0;\n        // If the current line is wrapped line, increase index of column to ignore the previous scan\n        // Otherwise, reset beginning column index to zero with set new unwrapped line index\n        result = this._findInLine(term, searchPosition, searchOptions);\n        if (result) {\n          break;\n        }\n      }\n    }\n    // If we hit the bottom and didn't search from the very top wrap back up\n    if (!result && startRow !== 0) {\n      for (let y = 0; y < startRow; y++) {\n        searchPosition.startRow = y;\n        searchPosition.startCol = 0;\n        result = this._findInLine(term, searchPosition, searchOptions);\n        if (result) {\n          break;\n        }\n      }\n    }\n\n    // If there is only one result, wrap back and return selection if it exists.\n    if (!result && currentSelection) {\n      searchPosition.startRow = currentSelection.startRow;\n      searchPosition.startCol = 0;\n      result = this._findInLine(term, searchPosition, searchOptions);\n    }\n\n    // Set selection and scroll if a result was found\n    return this._selectResult(result);\n  }\n\n  /**\n   * Find the previous instance of the term, then scroll to and select it. If it\n   * doesn't exist, do nothing.\n   * @param term The search term.\n   * @param searchOptions Search options.\n   * @return Whether a result was found.\n   */\n  public findPrevious(term: string, searchOptions?: ISearchOptions): boolean {\n    if (!this._terminal) {\n      throw new Error('Cannot use addon until it has been loaded');\n    }\n\n    if (!term || term.length === 0) {\n      this._terminal.clearSelection();\n      return false;\n    }\n\n    const isReverseSearch = true;\n    let startRow = this._terminal.buffer.active.baseY + this._terminal.rows;\n    let startCol = this._terminal.cols;\n    let result: ISearchResult | undefined;\n    const incremental = searchOptions ? searchOptions.incremental : false;\n    let currentSelection: ISelectionPosition | undefined;\n    if (this._terminal.hasSelection()) {\n      currentSelection = this._terminal.getSelectionPosition()!;\n      // Start from selection start if there is a selection\n      startRow = currentSelection.startRow;\n      startCol = currentSelection.startColumn;\n    }\n\n    this._initLinesCache();\n    const searchPosition: ISearchPosition = {\n      startRow,\n      startCol\n    };\n\n    if (incremental) {\n      // Try to expand selection to right first.\n      result = this._findInLine(term, searchPosition, searchOptions, false);\n      const isOldResultHighlighted = result && result.row === startRow && result.col === startCol;\n      if (!isOldResultHighlighted) {\n        // If selection was not able to be expanded to the right, then try reverse search\n        if (currentSelection) {\n          searchPosition.startRow = currentSelection.endRow;\n          searchPosition.startCol = currentSelection.endColumn;\n        }\n        result = this._findInLine(term, searchPosition, searchOptions, true);\n      }\n    } else {\n      result = this._findInLine(term, searchPosition, searchOptions, isReverseSearch);\n    }\n\n    // Search from startRow - 1 to top\n    if (!result) {\n      searchPosition.startCol = Math.max(searchPosition.startCol, this._terminal.cols);\n      for (let y = startRow - 1; y >= 0; y--) {\n        searchPosition.startRow = y;\n        result = this._findInLine(term, searchPosition, searchOptions, isReverseSearch);\n        if (result) {\n          break;\n        }\n      }\n    }\n    // If we hit the top and didn't search from the very bottom wrap back down\n    if (!result && startRow !== (this._terminal.buffer.active.baseY + this._terminal.rows)) {\n      for (let y = (this._terminal.buffer.active.baseY + this._terminal.rows); y >= startRow; y--) {\n        searchPosition.startRow = y;\n        result = this._findInLine(term, searchPosition, searchOptions, isReverseSearch);\n        if (result) {\n          break;\n        }\n      }\n    }\n\n    // If there is only one result, return true.\n    if (!result && currentSelection) return true;\n\n    // Set selection and scroll if a result was found\n    return this._selectResult(result);\n  }\n\n  /**\n   * Sets up a line cache with a ttl\n   */\n  private _initLinesCache(): void {\n    const terminal = this._terminal!;\n    if (!this._linesCache) {\n      this._linesCache = new Array(terminal.buffer.active.length);\n      this._cursorMoveListener = terminal.onCursorMove(() => this._destroyLinesCache());\n      this._resizeListener = terminal.onResize(() => this._destroyLinesCache());\n    }\n\n    window.clearTimeout(this._linesCacheTimeoutId);\n    this._linesCacheTimeoutId = window.setTimeout(() => this._destroyLinesCache(), LINES_CACHE_TIME_TO_LIVE);\n  }\n\n  private _destroyLinesCache(): void {\n    this._linesCache = undefined;\n    if (this._cursorMoveListener) {\n      this._cursorMoveListener.dispose();\n      this._cursorMoveListener = undefined;\n    }\n    if (this._resizeListener) {\n      this._resizeListener.dispose();\n      this._resizeListener = undefined;\n    }\n    if (this._linesCacheTimeoutId) {\n      window.clearTimeout(this._linesCacheTimeoutId);\n      this._linesCacheTimeoutId = 0;\n    }\n  }\n\n  /**\n   * A found substring is a whole word if it doesn't have an alphanumeric character directly adjacent to it.\n   * @param searchIndex starting indext of the potential whole word substring\n   * @param line entire string in which the potential whole word was found\n   * @param term the substring that starts at searchIndex\n   */\n  private _isWholeWord(searchIndex: number, line: string, term: string): boolean {\n    return ((searchIndex === 0) || (NON_WORD_CHARACTERS.includes(line[searchIndex - 1]))) &&\n      (((searchIndex + term.length) === line.length) || (NON_WORD_CHARACTERS.includes(line[searchIndex + term.length])));\n  }\n\n  /**\n   * Searches a line for a search term. Takes the provided terminal line and searches the text line, which may contain\n   * subsequent terminal lines if the text is wrapped. If the provided line number is part of a wrapped text line that\n   * started on an earlier line then it is skipped since it will be properly searched when the terminal line that the\n   * text starts on is searched.\n   * @param term The search term.\n   * @param position The position to start the search.\n   * @param searchOptions Search options.\n   * @param isReverseSearch Whether the search should start from the right side of the terminal and search to the left.\n   * @return The search result if it was found.\n   */\n  protected _findInLine(term: string, searchPosition: ISearchPosition, searchOptions: ISearchOptions = {}, isReverseSearch: boolean = false): ISearchResult | undefined {\n    const terminal = this._terminal!;\n    const row = searchPosition.startRow;\n    const col = searchPosition.startCol;\n\n    // Ignore wrapped lines, only consider on unwrapped line (first row of command string).\n    const firstLine = terminal.buffer.active.getLine(row);\n    if (firstLine?.isWrapped) {\n      if (isReverseSearch) {\n        searchPosition.startCol += terminal.cols;\n        return;\n      }\n\n      // This will iterate until we find the line start.\n      // When we find it, we will search using the calculated start column.\n      searchPosition.startRow--;\n      searchPosition.startCol += terminal.cols;\n      return this._findInLine(term, searchPosition, searchOptions);\n    }\n    let cache = this._linesCache?.[row];\n    if (!cache) {\n      cache = this._translateBufferLineToStringWithWrap(row, true);\n      if (this._linesCache) {\n        this._linesCache[row] = cache;\n      }\n    }\n    const [stringLine, offsets] = cache;\n\n    const offset = this._bufferColsToStringOffset(row, col);\n    const searchTerm = searchOptions.caseSensitive ? term : term.toLowerCase();\n    const searchStringLine = searchOptions.caseSensitive ? stringLine : stringLine.toLowerCase();\n\n    let resultIndex = -1;\n    if (searchOptions.regex) {\n      const searchRegex = RegExp(searchTerm, 'g');\n      let foundTerm: RegExpExecArray | null;\n      if (isReverseSearch) {\n        // This loop will get the resultIndex of the _last_ regex match in the range 0..offset\n        while (foundTerm = searchRegex.exec(searchStringLine.slice(0, offset))) {\n          resultIndex = searchRegex.lastIndex - foundTerm[0].length;\n          term = foundTerm[0];\n          searchRegex.lastIndex -= (term.length - 1);\n        }\n      } else {\n        foundTerm = searchRegex.exec(searchStringLine.slice(offset));\n        if (foundTerm && foundTerm[0].length > 0) {\n          resultIndex = offset + (searchRegex.lastIndex - foundTerm[0].length);\n          term = foundTerm[0];\n        }\n      }\n    } else {\n      if (isReverseSearch) {\n        if (offset - searchTerm.length >= 0) {\n          resultIndex = searchStringLine.lastIndexOf(searchTerm, offset - searchTerm.length);\n        }\n      } else {\n        resultIndex = searchStringLine.indexOf(searchTerm, offset);\n      }\n    }\n\n    if (resultIndex >= 0) {\n      if (searchOptions.wholeWord && !this._isWholeWord(resultIndex, searchStringLine, term)) {\n        return;\n      }\n\n      // Adjust the row number and search index if needed since a \"line\" of text can span multiple rows\n      let startRowOffset = 0;\n      while (startRowOffset < offsets.length - 1 && resultIndex >= offsets[startRowOffset + 1]) {\n        startRowOffset++;\n      }\n      let endRowOffset = startRowOffset;\n      while (endRowOffset < offsets.length - 1 && resultIndex + term.length >= offsets[endRowOffset + 1]) {\n        endRowOffset++;\n      }\n      const startColOffset = resultIndex - offsets[startRowOffset];\n      const endColOffset = resultIndex + term.length - offsets[endRowOffset];\n      const startColIndex = this._stringLengthToBufferSize(row + startRowOffset, startColOffset);\n      const endColIndex = this._stringLengthToBufferSize(row + endRowOffset, endColOffset);\n      const size = endColIndex - startColIndex + terminal.cols * (endRowOffset - startRowOffset);\n\n      return {\n        term,\n        col: startColIndex,\n        row: row + startRowOffset,\n        size\n      };\n    }\n  }\n\n  private _stringLengthToBufferSize(row: number, offset: number): number {\n    const line = this._terminal!.buffer.active.getLine(row);\n    if (!line) {\n      return 0;\n    }\n    for (let i = 0; i < offset; i++) {\n      const cell = line.getCell(i);\n      if (!cell) {\n        break;\n      }\n      // Adjust the searchIndex to normalize emoji into single chars\n      const char = cell.getChars();\n      if (char.length > 1) {\n        offset -= char.length - 1;\n      }\n      // Adjust the searchIndex for empty characters following wide unicode\n      // chars (eg. CJK)\n      const nextCell = line.getCell(i + 1);\n      if (nextCell && nextCell.getWidth() === 0) {\n        offset++;\n      }\n    }\n    return offset;\n  }\n\n  private _bufferColsToStringOffset(startRow: number, cols: number): number {\n    const terminal = this._terminal!;\n    let lineIndex = startRow;\n    let offset = 0;\n    let line = terminal.buffer.active.getLine(lineIndex);\n    while (cols > 0 && line) {\n      for (let i = 0; i < cols && i < terminal.cols; i++) {\n        const cell = line.getCell(i);\n        if (!cell) {\n          break;\n        }\n        if (cell.getWidth()) {\n          offset += cell.getChars().length;\n        }\n      }\n      lineIndex++;\n      line = terminal.buffer.active.getLine(lineIndex);\n      if (line && !line.isWrapped) {\n        break;\n      }\n      cols -= terminal.cols;\n    }\n    return offset;\n  }\n\n  /**\n   * Translates a buffer line to a string, including subsequent lines if they are wraps.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   */\n  private _translateBufferLineToStringWithWrap(lineIndex: number, trimRight: boolean): LineCacheEntry {\n    const terminal = this._terminal!;\n    const strings = [];\n    const lineOffsets = [0];\n    let line = terminal.buffer.active.getLine(lineIndex);\n    while (line) {\n      const nextLine = terminal.buffer.active.getLine(lineIndex + 1);\n      const lineWrapsToNext = nextLine ? nextLine.isWrapped : false;\n      let string = line.translateToString(!lineWrapsToNext && trimRight);\n      if (lineWrapsToNext && nextLine) {\n        const lastCell = line.getCell(line.length - 1);\n        const lastCellIsNull = lastCell && lastCell.getCode() === 0 && lastCell.getWidth() === 1;\n        // a wide character wrapped to the next line\n        if (lastCellIsNull && nextLine.getCell(0)?.getWidth() === 2) {\n          string = string.slice(0, -1);\n        }\n      }\n      strings.push(string);\n      if (lineWrapsToNext) {\n        lineOffsets.push(lineOffsets[lineOffsets.length - 1] + string.length);\n      } else {\n        break;\n      }\n      lineIndex++;\n      line = nextLine;\n    }\n    return [strings.join(''), lineOffsets];\n  }\n\n  /**\n   * Selects and scrolls to a result.\n   * @param result The result to select.\n   * @return Whethera result was selected.\n   */\n  private _selectResult(result: ISearchResult | undefined): boolean {\n    const terminal = this._terminal!;\n    if (!result) {\n      terminal.clearSelection();\n      return false;\n    }\n    terminal.select(result.col, result.row, result.size);\n    // If it is not in the viewport then we scroll else it just gets selected\n    if (result.row >= (terminal.buffer.active.viewportY + terminal.rows) || result.row < terminal.buffer.active.viewportY) {\n      let scroll = result.row - terminal.buffer.active.viewportY;\n      scroll -= Math.floor(terminal.rows / 2);\n      terminal.scrollLines(scroll);\n    }\n    return true;\n  }\n}\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: IRenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n    this._accessibilityTreeRoot.tabIndex = 0;\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new TimeBasedDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._onResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._onChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._onChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._onTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._onKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    removeElementFromParent(this._accessibilityTreeRoot);\n    this._rowElements.length = 0;\n  }\n\n  private _onBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _onResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _onTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._onChar(' ');\n    }\n  }\n\n  private _onChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      removeElementFromParent(this._liveRegion);\n    }\n  }\n\n  private _onKey(keyChar: string): void {\n    this._clearLiveRegion();\n    this._charsToConsume.push(keyChar);\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.actualCellHeight) {\n      return;\n    }\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._onResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.actualCellHeight}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n * @param ev The original paste event to be handled\n * @param term The terminal on which to apply the handled paste event\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n * @param selectionService The terminal's selection manager.\n * @param shouldSelectWord If true and there is no selection the current word will be selected\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: { [bg: number]: { [fg: number]: IColor | null | undefined } | undefined } = {};\n  private _rgba: { [bg: number]: { [fg: number]: string | null | undefined } | undefined } = {};\n\n  public clear(): void {\n    this._color = {};\n    this._rgba = {};\n  }\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    if (!this._rgba[bg]) {\n      this._rgba[bg] = {};\n    }\n    this._rgba[bg]![fg] = value;\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._rgba[bg] ? this._rgba[bg]![fg] : undefined;\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    if (!this._color[bg]) {\n      this._color[bg] = {};\n    }\n    this._color[bg]![fg] = value;\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color[bg] ? this._color[bg]![fg] : undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorManager, IColorSet, IColorContrastCache } from 'browser/Types';\nimport { ITheme } from 'common/services/Services';\nimport { channels, color, css } from 'common/Color';\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { ColorIndex, IColor } from 'common/Types';\n\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\n/**\n * Manages the source of truth for a terminal's colors.\n */\nexport class ColorManager implements IColorManager {\n  public colors: IColorSet;\n  private _ctx: CanvasRenderingContext2D;\n  private _litmusColor: CanvasGradient;\n  private _contrastCache: IColorContrastCache;\n  private _restoreColors!: IRestoreColorSet;\n\n  constructor(document: Document, public allowTransparency: boolean) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Could not get rendering context');\n    }\n    this._ctx = ctx;\n    this._ctx.globalCompositeOperation = 'copy';\n    this._litmusColor = this._ctx.createLinearGradient(0, 0, 1, 1);\n    this._contrastCache = new ColorContrastCache();\n    this.colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionTransparent: DEFAULT_SELECTION,\n      selectionOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionForeground: undefined,\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache\n    };\n    this._updateRestoreColors();\n  }\n\n  public onOptionsChange(key: string): void {\n    if (key === 'minimumContrastRatio') {\n      this._contrastCache.clear();\n    }\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  public setTheme(theme: ITheme = {}): void {\n    this.colors.foreground = this._parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    this.colors.background = this._parseColor(theme.background, DEFAULT_BACKGROUND);\n    this.colors.cursor = this._parseColor(theme.cursor, DEFAULT_CURSOR, true);\n    this.colors.cursorAccent = this._parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT, true);\n    this.colors.selectionTransparent = this._parseColor(theme.selection, DEFAULT_SELECTION, true);\n    this.colors.selectionOpaque = color.blend(this.colors.background, this.colors.selectionTransparent);\n    const nullColor: IColor = {\n      css: '',\n      rgba: 0\n    };\n    this.colors.selectionForeground = theme.selectionForeground ? this._parseColor(theme.selectionForeground, nullColor) : undefined;\n    if (this.colors.selectionForeground === nullColor) {\n      this.colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(this.colors.selectionTransparent)) {\n      const opacity = 0.3;\n      this.colors.selectionTransparent = color.opacity(this.colors.selectionTransparent, opacity);\n    }\n    this.colors.ansi[0] = this._parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    this.colors.ansi[1] = this._parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    this.colors.ansi[2] = this._parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    this.colors.ansi[3] = this._parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    this.colors.ansi[4] = this._parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    this.colors.ansi[5] = this._parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    this.colors.ansi[6] = this._parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    this.colors.ansi[7] = this._parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    this.colors.ansi[8] = this._parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    this.colors.ansi[9] = this._parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    this.colors.ansi[10] = this._parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    this.colors.ansi[11] = this._parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    this.colors.ansi[12] = this._parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    this.colors.ansi[13] = this._parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    this.colors.ansi[14] = this._parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    this.colors.ansi[15] = this._parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._updateRestoreColors();\n  }\n\n  public restoreColor(slot?: ColorIndex): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this.colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case ColorIndex.FOREGROUND:\n        this.colors.foreground = this._restoreColors.foreground;\n        break;\n      case ColorIndex.BACKGROUND:\n        this.colors.background = this._restoreColors.background;\n        break;\n      case ColorIndex.CURSOR:\n        this.colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this.colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this.colors.foreground,\n      background: this.colors.background,\n      cursor: this.colors.cursor,\n      ansi: this.colors.ansi.slice()\n    };\n  }\n\n  private _parseColor(\n    css: string | undefined,\n    fallback: IColor,\n    allowTransparency: boolean = this.allowTransparency\n  ): IColor {\n    if (css === undefined) {\n      return fallback;\n    }\n\n    // If parsing the value results in failure, then it must be ignored, and the attribute must\n    // retain its previous value.\n    // -- https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    this._ctx.fillStyle = this._litmusColor;\n    this._ctx.fillStyle = css;\n    if (typeof this._ctx.fillStyle !== 'string') {\n      console.warn(`Color: ${css} is invalid using fallback ${fallback.css}`);\n      return fallback;\n    }\n\n    this._ctx.fillRect(0, 0, 1, 1);\n    const data = this._ctx.getImageData(0, 0, 1, 1).data;\n\n    // Check if the printed color was transparent\n    if (data[3] !== 0xFF) {\n      if (!allowTransparency) {\n        // Ideally we'd just ignore the alpha channel, but...\n        //\n        // Browsers may not give back exactly the same RGB values we put in, because most/all\n        // convert the color to a pre-multiplied representation. getImageData converts that back to\n        // a un-premultipled representation, but the precision loss may make the RGB channels unuable\n        // on their own.\n        //\n        // E.g. In Chrome #12345610 turns into #10305010, and in the extreme case, 0xFFFFFF00 turns\n        // into 0x00000000.\n        //\n        // \"Note: Due to the lossy nature of converting to and from premultiplied alpha color values,\n        // pixels that have just been set using putImageData() might be returned to an equivalent\n        // getImageData() as different values.\"\n        // -- https://html.spec.whatwg.org/multipage/canvas.html#pixel-manipulation\n        //\n        // So let's just use the fallback color in this case instead.\n        console.warn(\n          `Color: ${css} is using transparency, but allowTransparency is false. ` +\n          `Using fallback ${fallback.css}.`\n        );\n        return fallback;\n      }\n\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // the color value has alpha less than 1.0, and the string is the color value in the CSS rgba()\n      const [r, g, b, a] = this._ctx.fillStyle.substring(5, this._ctx.fillStyle.length - 1).split(',').map(component => Number(component));\n      const alpha = Math.round(a * 255);\n      const rgba: number = channels.toRgba(r, g, b, alpha);\n      return {\n        rgba,\n        css\n      };\n    }\n\n    return {\n      // https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n      // if it has alpha equal to 1.0, then the string is a lowercase six-digit hex value, prefixed with a \"#\" character\n      css: this._ctx.fillStyle,\n      rgba: channels.toRgba(data[0], data[1], data[2], data[3])\n    };\n  }\n}\n","/**\n * Copyright (c) 2020 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function removeElementFromParent(...elements: (HTMLElement | undefined)[]): void {\n  for (const e of elements) {\n    e?.parentElement?.removeChild(e);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifierEvent, ILinkMatcher, LinkMatcherHandler, ILinkMatcherOptions, ILinkifier, IMouseZoneManager, IMouseZone, IRegisteredLinkMatcher } from 'browser/Types';\nimport { IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ILogService, IBufferService, IOptionsService, IUnicodeService } from 'common/services/Services';\n\n/**\n * Limit of the unwrapping line expansion (overscan) at the top and bottom\n * of the actual viewport in ASCII characters.\n * A limit of 2000 should match most sane urls.\n */\nconst OVERSCAN_CHAR_LIMIT = 2000;\n\n/**\n * The Linkifier applies links to rows shortly after they have been refreshed.\n */\nexport class Linkifier implements ILinkifier {\n  /**\n   * The time to wait after a row is changed before it is linkified. This prevents\n   * the costly operation of searching every row multiple times, potentially a\n   * huge amount of times.\n   */\n  protected static _timeBeforeLatency = 200;\n\n  protected _linkMatchers: IRegisteredLinkMatcher[] = [];\n\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _element: HTMLElement | undefined;\n\n  private _rowsTimeoutId: number | undefined;\n  private _nextLinkMatcherId = 0;\n  private _rowsToLinkify: { start: number | undefined, end: number | undefined };\n\n  private _onShowLinkUnderline = new EventEmitter<ILinkifierEvent>();\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = new EventEmitter<ILinkifierEvent>();\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n  private _onLinkTooltip = new EventEmitter<ILinkifierEvent>();\n  public get onLinkTooltip(): IEvent<ILinkifierEvent> { return this._onLinkTooltip.event; }\n\n  constructor(\n    @IBufferService protected readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IUnicodeService private readonly _unicodeService: IUnicodeService\n  ) {\n    this._rowsToLinkify = {\n      start: undefined,\n      end: undefined\n    };\n  }\n\n  /**\n   * Attaches the linkifier to the DOM, enabling linkification.\n   * @param mouseZoneManager The mouse zone manager to register link zones with.\n   */\n  public attachToDom(element: HTMLElement, mouseZoneManager: IMouseZoneManager): void {\n    this._element = element;\n    this._mouseZoneManager = mouseZoneManager;\n  }\n\n  /**\n   * Queue linkification on a set of rows.\n   * @param start The row to linkify from (inclusive).\n   * @param end The row to linkify to (inclusive).\n   */\n  public linkifyRows(start: number, end: number): void {\n    // Don't attempt linkify if not yet attached to DOM\n    if (!this._mouseZoneManager) {\n      return;\n    }\n\n    // Increase range to linkify\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._rowsToLinkify.start = start;\n      this._rowsToLinkify.end = end;\n    } else {\n      this._rowsToLinkify.start = Math.min(this._rowsToLinkify.start, start);\n      this._rowsToLinkify.end = Math.max(this._rowsToLinkify.end, end);\n    }\n\n    // Clear out any existing links on this row range\n    this._mouseZoneManager.clearAll(start, end);\n\n    // Restart timer\n    if (this._rowsTimeoutId) {\n      clearTimeout(this._rowsTimeoutId);\n    }\n\n    // Cannot use window.setTimeout since tests need to run in node\n    this._rowsTimeoutId = setTimeout(() => this._linkifyRows(), Linkifier._timeBeforeLatency) as any as number;\n  }\n\n  /**\n   * Linkifies the rows requested.\n   */\n  private _linkifyRows(): void {\n    this._rowsTimeoutId = undefined;\n    const buffer = this._bufferService.buffer;\n\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._logService.debug('_rowToLinkify was unset before _linkifyRows was called');\n      return;\n    }\n\n    // Ensure the start row exists\n    const absoluteRowIndexStart = buffer.ydisp + this._rowsToLinkify.start;\n    if (absoluteRowIndexStart >= buffer.lines.length) {\n      return;\n    }\n\n    // Invalidate bad end row values (if a resize happened)\n    const absoluteRowIndexEnd = buffer.ydisp + Math.min(this._rowsToLinkify.end, this._bufferService.rows) + 1;\n\n    // Iterate over the range of unwrapped content strings within start..end\n    // (excluding).\n    // _doLinkifyRow gets full unwrapped lines with the start row as buffer offset\n    // for every matcher.\n    // The unwrapping is needed to also match content that got wrapped across\n    // several buffer lines. To avoid a worst case scenario where the whole buffer\n    // contains just a single unwrapped string we limit this line expansion beyond\n    // the viewport to +OVERSCAN_CHAR_LIMIT chars (overscan) at top and bottom.\n    // This comes with the tradeoff that matches longer than OVERSCAN_CHAR_LIMIT\n    // chars will not match anymore at the viewport borders.\n    const overscanLineLimit = Math.ceil(OVERSCAN_CHAR_LIMIT / this._bufferService.cols);\n    const iterator = this._bufferService.buffer.iterator(\n      false, absoluteRowIndexStart, absoluteRowIndexEnd, overscanLineLimit, overscanLineLimit);\n    while (iterator.hasNext()) {\n      const lineData: IBufferStringIteratorResult = iterator.next();\n      for (let i = 0; i < this._linkMatchers.length; i++) {\n        this._doLinkifyRow(lineData.range.first, lineData.content, this._linkMatchers[i]);\n      }\n    }\n\n    this._rowsToLinkify.start = undefined;\n    this._rowsToLinkify.end = undefined;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for. Specifically, this\n   * searches the textContent of the rows. You will want to use \\s to match a\n   * space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options: ILinkMatcherOptions = {}): number {\n    if (!handler) {\n      throw new Error('handler must be defined');\n    }\n    const matcher: IRegisteredLinkMatcher = {\n      id: this._nextLinkMatcherId++,\n      regex,\n      handler,\n      matchIndex: options.matchIndex,\n      validationCallback: options.validationCallback,\n      hoverTooltipCallback: options.tooltipCallback,\n      hoverLeaveCallback: options.leaveCallback,\n      willLinkActivate: options.willLinkActivate,\n      priority: options.priority || 0\n    };\n    this._addLinkMatcherToList(matcher);\n    return matcher.id;\n  }\n\n  /**\n   * Inserts a link matcher to the list in the correct position based on the\n   * priority of each link matcher. New link matchers of equal priority are\n   * considered after older link matchers.\n   * @param matcher The link matcher to be added.\n   */\n  private _addLinkMatcherToList(matcher: IRegisteredLinkMatcher): void {\n    if (this._linkMatchers.length === 0) {\n      this._linkMatchers.push(matcher);\n      return;\n    }\n\n    for (let i = this._linkMatchers.length - 1; i >= 0; i--) {\n      if (matcher.priority <= this._linkMatchers[i].priority) {\n        this._linkMatchers.splice(i + 1, 0, matcher);\n        return;\n      }\n    }\n\n    this._linkMatchers.splice(0, 0, matcher);\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   * @return Whether a link matcher was found and deregistered.\n   */\n  public deregisterLinkMatcher(matcherId: number): boolean {\n    for (let i = 0; i < this._linkMatchers.length; i++) {\n      if (this._linkMatchers[i].id === matcherId) {\n        this._linkMatchers.splice(i, 1);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Linkifies a row given a specific handler.\n   * @param rowIndex The row index to linkify (absolute index).\n   * @param text string content of the unwrapped row.\n   * @param matcher The link matcher for this line.\n   */\n  private _doLinkifyRow(rowIndex: number, text: string, matcher: ILinkMatcher): void {\n    // clone regex to do a global search on text\n    const rex = new RegExp(matcher.regex.source, (matcher.regex.flags || '') + 'g');\n    let match;\n    let stringIndex = -1;\n    while ((match = rex.exec(text)) !== null) {\n      const uri = match[typeof matcher.matchIndex !== 'number' ? 0 : matcher.matchIndex];\n      if (!uri) {\n        // something matched but does not comply with the given matchIndex\n        // since this is most likely a bug the regex itself we simply do nothing here\n        this._logService.debug('match found without corresponding matchIndex', match, matcher);\n        break;\n      }\n\n      // Get index, match.index is for the outer match which includes negated chars\n      // therefore we cannot use match.index directly, instead we search the position\n      // of the match group in text again\n      // also correct regex and string search offsets for the next loop run\n      stringIndex = text.indexOf(uri, stringIndex + 1);\n      rex.lastIndex = stringIndex + uri.length;\n      if (stringIndex < 0) {\n        // invalid stringIndex (should not have happened)\n        break;\n      }\n\n      // get the buffer index as [absolute row, col] for the match\n      const bufferIndex = this._bufferService.buffer.stringIndexToBufferIndex(rowIndex, stringIndex);\n      if (bufferIndex[0] < 0) {\n        // invalid bufferIndex (should not have happened)\n        break;\n      }\n\n      const line = this._bufferService.buffer.lines.get(bufferIndex[0]);\n      if (!line) {\n        break;\n      }\n\n      const attr = line.getFg(bufferIndex[1]);\n      const fg = attr ? (attr >> 9) & 0x1ff : undefined;\n\n      if (matcher.validationCallback) {\n        matcher.validationCallback(uri, isValid => {\n          // Discard link if the line has already changed\n          if (this._rowsTimeoutId) {\n            return;\n          }\n          if (isValid) {\n            this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n          }\n        });\n      } else {\n        this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n      }\n    }\n  }\n\n  /**\n   * Registers a link to the mouse zone manager.\n   * @param x The column the link starts.\n   * @param y The row the link is on.\n   * @param uri The URI of the link.\n   * @param matcher The link matcher for the link.\n   * @param fg The link color for hover event.\n   */\n  private _addLink(x: number, y: number, uri: string, matcher: ILinkMatcher, fg: number | undefined): void {\n    if (!this._mouseZoneManager || !this._element) {\n      return;\n    }\n    // FIXME: get cell length from buffer to avoid mismatch after Unicode version change\n    const width = this._unicodeService.getStringCellWidth(uri);\n    const x1 = x % this._bufferService.cols;\n    const y1 = y + Math.floor(x / this._bufferService.cols);\n    let x2 = (x1 + width) % this._bufferService.cols;\n    let y2 = y1 + Math.floor((x1 + width) / this._bufferService.cols);\n    if (x2 === 0) {\n      x2 = this._bufferService.cols;\n      y2--;\n    }\n\n    this._mouseZoneManager.add(new MouseZone(\n      x1 + 1,\n      y1 + 1,\n      x2 + 1,\n      y2 + 1,\n      e => {\n        if (matcher.handler) {\n          return matcher.handler(e, uri);\n        }\n        const newWindow = window.open();\n        if (newWindow) {\n          newWindow.opener = null;\n          newWindow.location.href = uri;\n        } else {\n          console.warn('Opening link blocked as opener could not be cleared');\n        }\n      },\n      () => {\n        this._onShowLinkUnderline.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.add('xterm-cursor-pointer');\n      },\n      e => {\n        this._onLinkTooltip.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        if (matcher.hoverTooltipCallback) {\n          // Note that IViewportRange use 1-based coordinates to align with escape sequences such\n          // as CUP which use 1,1 as the default for row/col\n          matcher.hoverTooltipCallback(e, uri, { start: { x: x1, y: y1 }, end: { x: x2, y: y2 } });\n        }\n      },\n      () => {\n        this._onHideLinkUnderline.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.remove('xterm-cursor-pointer');\n        if (matcher.hoverLeaveCallback) {\n          matcher.hoverLeaveCallback();\n        }\n      },\n      e => {\n        if (matcher.willLinkActivate) {\n          return matcher.willLinkActivate(e, uri);\n        }\n        return true;\n      }\n    ));\n  }\n\n  private _createLinkHoverEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n\nexport class MouseZone implements IMouseZone {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n    public clickCallback: (e: MouseEvent) => any,\n    public hoverCallback: (e: MouseEvent) => any,\n    public tooltipCallback: (e: MouseEvent) => any,\n    public leaveCallback: () => void,\n    public willLinkActivate: (e: MouseEvent) => boolean\n  ) {\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifier2, ILinkProvider, IBufferCellPosition, ILink, ILinkifierEvent, ILinkDecorations, ILinkWithState } from 'browser/Types';\nimport { IDisposable } from 'common/Types';\nimport { IMouseService, IRenderService } from './services/Services';\nimport { IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable, getDisposeArrayDisposable, disposeArray } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onShowLinkUnderline(): IEvent<ILinkifierEvent> { return this._onShowLinkUnderline.event; }\n  private _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public get onHideLinkUnderline(): IEvent<ILinkifierEvent> { return this._onHideLinkUnderline.event; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._onMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _onMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._onHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _onHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Add listener for rerendering\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          this._clearCurrentLink(start, e.end + 1 + this._bufferService.buffer.ydisp);\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const sameLine = link.range.start.y === link.range.end.y;\n    const wrappedFromLeft = link.range.start.y < position.y;\n    const wrappedToRight = link.range.end.y > position.y;\n\n    // If the start and end have the same y, then the position must be between start and end x\n    // If not, then handle each case seperately, depending on which way it wraps\n    return ((sameLine && link.range.start.x <= position.x && link.range.end.x >= position.x) ||\n      (wrappedFromLeft && link.range.end.x >= position.x) ||\n      (wrappedToRight && link.range.start.x <= position.x) ||\n      (wrappedFromLeft && wrappedToRight)) &&\n      link.range.start.y <= position.y &&\n      link.range.end.y >= position.y;\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IMouseService, ISelectionService } from 'browser/services/Services';\nimport { IMouseZoneManager, IMouseZone } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\n/**\n * The MouseZoneManager allows components to register zones within the terminal\n * that trigger hover and click callbacks.\n *\n * This class was intentionally made not so robust initially as the only case it\n * needed to support was single-line links which never overlap. Improvements can\n * be made in the future.\n */\nexport class MouseZoneManager extends Disposable implements IMouseZoneManager {\n  private _zones: IMouseZone[] = [];\n\n  private _areZonesActive: boolean = false;\n  private _mouseMoveListener: (e: MouseEvent) => any;\n  private _mouseLeaveListener: (e: MouseEvent) => any;\n  private _clickListener: (e: MouseEvent) => any;\n\n  private _tooltipTimeout: number | undefined;\n  private _currentZone: IMouseZone | undefined;\n  private _lastHoverCoords: [number | undefined, number | undefined] = [undefined, undefined];\n  private _initialSelectionLength: number = 0;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @ISelectionService private readonly _selectionService: ISelectionService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this.register(addDisposableDomListener(this._element, 'mousedown', e => this._onMouseDown(e)));\n\n    // These events are expensive, only listen to it when mouse zones are active\n    this._mouseMoveListener = e => this._onMouseMove(e);\n    this._mouseLeaveListener = e => this._onMouseLeave(e);\n    this._clickListener = e => this._onClick(e);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._deactivate();\n  }\n\n  public add(zone: IMouseZone): void {\n    this._zones.push(zone);\n    if (this._zones.length === 1) {\n      this._activate();\n    }\n  }\n\n  public clearAll(start?: number, end?: number): void {\n    // Exit if there's nothing to clear\n    if (this._zones.length === 0) {\n      return;\n    }\n\n    // Clear all if start/end weren't set\n    if (!start || !end) {\n      start = 0;\n      end = this._bufferService.rows - 1;\n    }\n\n    // Iterate through zones and clear them out if they're within the range\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if ((zone.y1 > start && zone.y1 <= end + 1) ||\n          (zone.y2 > start && zone.y2 <= end + 1) ||\n          (zone.y1 < start && zone.y2 > end + 1)) {\n        if (this._currentZone && this._currentZone === zone) {\n          this._currentZone.leaveCallback();\n          this._currentZone = undefined;\n        }\n        this._zones.splice(i--, 1);\n      }\n    }\n\n    // Deactivate the mouse zone manager if all the zones have been removed\n    if (this._zones.length === 0) {\n      this._deactivate();\n    }\n  }\n\n  private _activate(): void {\n    if (!this._areZonesActive) {\n      this._areZonesActive = true;\n      this._element.addEventListener('mousemove', this._mouseMoveListener);\n      this._element.addEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.addEventListener('click', this._clickListener);\n    }\n  }\n\n  private _deactivate(): void {\n    if (this._areZonesActive) {\n      this._areZonesActive = false;\n      this._element.removeEventListener('mousemove', this._mouseMoveListener);\n      this._element.removeEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.removeEventListener('click', this._clickListener);\n    }\n  }\n\n  private _onMouseMove(e: MouseEvent): void {\n    // TODO: Ideally this would only clear the hover state when the mouse moves\n    // outside of the mouse zone\n    if (this._lastHoverCoords[0] !== e.pageX || this._lastHoverCoords[1] !== e.pageY) {\n      this._onHover(e);\n      // Record the current coordinates\n      this._lastHoverCoords = [e.pageX, e.pageY];\n    }\n  }\n\n  private _onHover(e: MouseEvent): void {\n    const zone = this._findZoneEventAt(e);\n\n    // Do nothing if the zone is the same\n    if (zone === this._currentZone) {\n      return;\n    }\n\n    // Fire the hover end callback and cancel any existing timer if a new zone\n    // is being hovered\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n\n    // Exit if there is not zone\n    if (!zone) {\n      return;\n    }\n    this._currentZone = zone;\n\n    // Trigger the hover callback\n    if (zone.hoverCallback) {\n      zone.hoverCallback(e);\n    }\n\n    // Restart the tooltip timeout\n    this._tooltipTimeout = window.setTimeout(() => this._onTooltip(e), this._optionsService.rawOptions.linkTooltipHoverDuration);\n  }\n\n  private _onTooltip(e: MouseEvent): void {\n    this._tooltipTimeout = undefined;\n    const zone = this._findZoneEventAt(e);\n    zone?.tooltipCallback(e);\n  }\n\n  private _onMouseDown(e: MouseEvent): void {\n    // Store current terminal selection length, to check if we're performing\n    // a selection operation\n    this._initialSelectionLength = this._getSelectionLength();\n\n    // Ignore the event if there are no zones active\n    if (!this._areZonesActive) {\n      return;\n    }\n\n    // Find the active zone, prevent event propagation if found to prevent other\n    // components from handling the mouse event.\n    const zone = this._findZoneEventAt(e);\n    if (zone?.willLinkActivate(e)) {\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _onMouseLeave(e: MouseEvent): void {\n    // Fire the hover end callback and cancel any existing timer if the mouse\n    // leaves the terminal element\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n  }\n\n  private _onClick(e: MouseEvent): void {\n    // Find the active zone and click it if found and no selection was\n    // being performed\n    const zone = this._findZoneEventAt(e);\n    const currentSelectionLength = this._getSelectionLength();\n\n    if (zone && currentSelectionLength === this._initialSelectionLength) {\n      zone.clickCallback(e);\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _getSelectionLength(): number {\n    const selectionText = this._selectionService.selectionText;\n    return selectionText ? selectionText.length : 0;\n  }\n\n  private _findZoneEventAt(e: MouseEvent): IMouseZone | undefined {\n    const coords = this._mouseService.getCoords(e, this._screenElement, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return undefined;\n    }\n    const x = coords[0];\n    const y = coords[1];\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if (zone.y1 === zone.y2) {\n        // Single line link\n        if (y === zone.y1 && x >= zone.x1 && x < zone.x2) {\n          return zone;\n        }\n      } else {\n        // Multi-line link\n        if ((y === zone.y1 && x >= zone.x1) ||\n            (y === zone.y2 && x < zone.x2) ||\n            (y > zone.y1 && y < zone.y2)) {\n          return zone;\n        }\n      }\n    }\n    return undefined;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = window.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number = window.devicePixelRatio;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(window.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.clearListener();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = window.devicePixelRatio;\n    this._resolutionMediaMatchList = window.matchMedia(`screen and (resolution: ${window.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { ICompositionHelper, ITerminal, IBrowser, CustomKeyEventHandler, ILinkifier, IMouseZoneManager, LinkMatcherHandler, ILinkMatcherOptions, IViewport, ILinkifier2, CharacterJoinerHandler } from 'browser/Types';\nimport { IRenderer } from 'browser/renderer/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { Renderer } from 'browser/renderer/Renderer';\nimport { Linkifier } from 'browser/Linkifier';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { SoundService } from 'browser/services/SoundService';\nimport { MouseZoneManager } from 'browser/MouseZoneManager';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ISelectionPosition, ILinkProvider, IDecorationOptions, IDecoration } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { KeyboardResultType, CoreMouseEventType, CoreMouseButton, CoreMouseAction, ITerminalOptions, ScrollSource, IColorEvent, ColorIndex, ColorRequestType } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { ColorManager } from 'browser/ColorManager';\nimport { RenderService } from 'browser/services/RenderService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ISoundService, ICoreBrowserService, ICharacterJoinerService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { IBuffer } from 'common/buffer/Types';\nimport { MouseService } from 'browser/services/MouseService';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { color, rgba } from 'common/Color';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  // private _visualBellTimer: number;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _decorationService: DecorationService;\n  private _charSizeService: ICharSizeService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n  private _soundService: ISoundService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier: ILinkifier;\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _accessibilityManager: AccessibilityManager | undefined;\n  private _colorManager: ColorManager | undefined;\n  private _theme: ITheme | undefined;\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onKey = new EventEmitter<{ key: string, domEvent: KeyboardEvent }>();\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._onKey.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n  private _onBell = new EventEmitter<void>();\n  public get onBell(): IEvent<void> { return this._onBell.event; }\n\n  private _onFocus = new EventEmitter<void>();\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = new EventEmitter<void>();\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier = this._instantiationService.createInstance(Linkifier);\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this.bell()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._colorManager) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi' | undefined = undefined;\n      let ident = '';\n      switch (req.index) {\n        case ColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case ColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case ColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      if (acc) {\n        switch (req.type) {\n          case ColorRequestType.REPORT:\n            const channels = color.toColorRGB(acc === 'ansi'\n              ? this._colorManager.colors.ansi[req.index]\n              : this._colorManager.colors[acc]);\n            this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C1_ESCAPED.ST}`);\n            break;\n          case ColorRequestType.SET:\n            if (acc === 'ansi') this._colorManager.colors.ansi[req.index] = rgba.toColor(...req.color);\n            else this._colorManager.colors[acc] = rgba.toColor(...req.color);\n            break;\n          case ColorRequestType.RESTORE:\n            this._colorManager.restoreColor(req.index);\n            break;\n        }\n      }\n    }\n    this._renderService?.setColors(this._colorManager.colors);\n    this.viewport?.onThemeChange(this._colorManager.colors);\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._renderService?.dispose();\n    this._customKeyEventHandler = undefined;\n    this.write = () => { };\n    this.element?.parentNode?.removeChild(this.element);\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  protected _updateOptions(key: string): void {\n    super._updateOptions(key);\n\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'fontFamily':\n      case 'fontSize':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        this._renderService?.clear();\n        this._charSizeService?.measure();\n        break;\n      case 'cursorBlink':\n      case 'cursorStyle':\n        // The DOM renderer needs a row refresh to update the cursor styles\n        this.refresh(this.buffer.y, this.buffer.y);\n        break;\n      case 'customGlyphs':\n      case 'drawBoldTextInBrightColors':\n      case 'letterSpacing':\n      case 'lineHeight':\n      case 'fontWeight':\n      case 'fontWeightBold':\n      case 'minimumContrastRatio':\n        // When the font changes the size of the cells may change which requires a renderer clear\n        if (this._renderService) {\n          this._renderService.clear();\n          this._renderService.onResize(this.cols, this.rows);\n          this.refresh(0, this.rows - 1);\n        }\n        break;\n      case 'rendererType':\n        if (this._renderService) {\n          this._renderService.setRenderer(this._createRenderer());\n          this._renderService.onResize(this.cols, this.rows);\n        }\n        break;\n      case 'scrollback':\n        this.viewport?.syncScrollArea();\n        break;\n      case 'screenReaderMode':\n        if (this.optionsService.rawOptions.screenReaderMode) {\n          if (!this._accessibilityManager && this._renderService) {\n            this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n          }\n        } else {\n          this._accessibilityManager?.dispose();\n          this._accessibilityManager = undefined;\n        }\n        break;\n      case 'tabStopWidth': this.buffers.setupTabStops(); break;\n      case 'theme':\n        this._setTheme(this.optionsService.rawOptions.theme);\n        break;\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _onTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _onTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.actualCellHeight;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.actualCellWidth * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.actualCellHeight;\n    const cursorLeft = cursorX * this._renderService.dimensions.actualCellWidth;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n    this.register(this.onRender(e => this._queueLinkification(e.start, e.end)));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    this.textarea.setAttribute('aria-multiline', 'false');\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._onTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._onTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    const coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea);\n    this._instantiationService.setService(ICoreBrowserService, coreBrowserService);\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._theme = this.options.theme || this._theme;\n    this._colorManager = new ColorManager(document, this.options.allowTransparency);\n    this.register(this.optionsService.onOptionChange(e => this._colorManager!.onOptionsChange(e)));\n    this._colorManager.setTheme(this._theme);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    const renderer = this._createRenderer();\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, renderer, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    this._soundService = this._instantiationService.createInstance(SoundService);\n    this._instantiationService.setService(ISoundService, this._soundService);\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number) => this.scrollLines(amount, true, ScrollSource.VIEWPORT),\n      this._viewportElement,\n      this._viewportScrollArea,\n      this.element\n    );\n    this.viewport.onThemeChange(this._colorManager.colors);\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.onCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.onResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.onBlur()));\n    this.register(this.onFocus(() => this._renderService!.onFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.onSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this._mouseZoneManager = this._instantiationService.createInstance(MouseZoneManager, this.element, this.screenElement);\n    this.register(this._mouseZoneManager);\n    this.register(this.onScroll(() => this._mouseZoneManager!.clearAll()));\n    this.linkifier.attachToDom(this.element, this._mouseZoneManager);\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    // This event listener must be registered aftre MouseZoneManager is created\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.onMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n    }\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement);\n    }\n    this.optionsService.onOptionChange(() => {\n      if (!this._overviewRulerRenderer && this.options.overviewRulerWidth && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement);\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    switch (this.options.rendererType) {\n      case 'canvas': return this._instantiationService.createInstance(Renderer, this._colorManager!.colors, this.screenElement!, this.linkifier, this.linkifier2);\n      case 'dom': return this._instantiationService.createInstance(DomRenderer, this._colorManager!.colors, this.element!, this.screenElement!, this._viewportElement!, this.linkifier, this.linkifier2);\n      default: throw new Error(`Unrecognized rendererType \"${this.options.rendererType}\"`);\n    }\n  }\n\n  /**\n   * Sets the theme on the renderer. The renderer must have been initialized.\n   * @param theme The theme to set.\n   */\n  private _setTheme(theme: ITheme): void {\n    this._theme = theme;\n    this._colorManager?.setTheme(theme);\n    this._renderService?.setColors(this._colorManager!.colors);\n    this.viewport?.onThemeChange(this._colorManager!.colors);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getRawByteCoords(ev, self.screenElement!, self.cols, self.rows);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.x - 33, // FIXME: why -33 here?\n        row: pos.y - 33,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.onWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.onTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.onTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Queues linkification for the specified rows.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  private _queueLinkification(start: number, end: number): void {\n    this.linkifier?.linkifyRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    super.scrollLines(disp, suppressScrollEvent, source);\n    this.refresh(0, this.rows - 1);\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for, specifically\n   * this searches the textContent of the rows. You will want to use \\s to match\n   * a space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options?: ILinkMatcherOptions): number {\n    const matcherId = this.linkifier.registerLinkMatcher(regex, handler, options);\n    this.refresh(0, this.rows - 1);\n    return matcherId;\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   */\n  public deregisterLinkMatcher(matcherId: number): void {\n    if (this.linkifier.deregisterLinkMatcher(matcherId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    // Disallow markers on the alt buffer\n    if (this.buffer !== this.buffers.normal) {\n      return;\n    }\n\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      startColumn: this._selectionService.selectionStart![0],\n      startRow: this._selectionService.selectionStart![1],\n      endColumn: this._selectionService.selectionEnd![0],\n      endRow: this._selectionService.selectionEnd![1]\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown event\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keydown event to be handled.\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.buffer.ybase !== this.buffer.ydisp) {\n        this._bufferService.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, this could cause issues if the event\n    // is handled at a higher level, this is a compromise in order to echo keys to the screen\n    // reader.\n    if (!this.optionsService.rawOptions.screenReaderMode) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Ring the bell.\n   * Note: We could do sweet things with webaudio here\n   */\n  public bell(): void {\n    if (this._soundBell()) {\n      this._soundService?.playBellSound();\n    }\n\n    this._onBell.fire();\n\n    // if (this._visualBell()) {\n    //   this.element.classList.add('visual-bell-active');\n    //   clearTimeout(this._visualBellTimer);\n    //   this._visualBellTimer = window.setTimeout(() => {\n    //     this.element.classList.remove('visual-bell-active');\n    //   }, 200);\n    // }\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    this.viewport?.syncScrollArea();\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.scaledCanvasWidth.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.scaledCanvasHeight.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.scaledCellWidth.toFixed(0);\n        const cellHeight = this._renderService.dimensions.scaledCellHeight.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n\n  private _visualBell(): boolean {\n    return false;\n    // return this.options.bellStyle === 'visual' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  private _soundBell(): boolean {\n    return this.options.bellStyle === 'sound';\n    // return this.options.bellStyle === 'sound' ||\n    //     this.options.bellStyle === 'both';\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport } from 'browser/Types';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IRenderDimensions } from 'browser/renderer/Types';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentScaledCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n\n  constructor(\n    private readonly _scrollLines: (amount: number) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    private readonly _element: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._onScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  public onThemeChange(colors: IColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio;\n      this._currentScaledCellHeight = this._renderService.dimensions.scaledCellHeight;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.canvasHeight);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.canvasHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.scaledCellHeight !== this._currentScaledCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _onScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._scrollLines(0);\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff);\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public onWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += amount;\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public onTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public onTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IRenderService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(addDisposableDomListener(window, 'resize', () => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n  }\n\n  public override dispose(): void {\n    this._container.remove();\n    this._decorationElements.clear();\n    super.dispose();\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this.refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  public refreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = document.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.actualCellWidth)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.actualCellHeight}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.actualCellHeight}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.actualCellHeight}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        decoration.onDispose(() => this._removeDecoration(decoration));\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n      }\n      element.style.top = `${line * this._renderService.dimensions.actualCellHeight}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.actualCellWidth}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.actualCellWidth}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IRenderService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onOptionChange(o => {\n      if (o === 'overviewRulerWidth') {\n        this._queueRefresh(true);\n      }\n    }));\n    // device pixel ratio changed\n    this.register(addDisposableDomListener(window, 'resize', () => {\n      this._queueRefresh(true);\n    }));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  public override dispose(): void {\n    this._canvas?.remove();\n    super.dispose();\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * window.devicePixelRatio);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * window.devicePixelRatio);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * window.devicePixelRatio);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * window.devicePixelRatio);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    // TODO: Is _decorationElements needed?\n\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = window.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @return Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n        const diff = newValue.replace(oldValue, '');\n        if (diff.length > 0) {\n          this._dataAlreadySent = diff;\n          this._coreService.triggerDataEvent(diff, true);\n        }\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.actualCellHeight;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.actualCellHeight;\n      const cursorLeft = cursorX * this._renderService.dimensions.actualCellWidth;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, actualCellWidth: number, actualCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? actualCellWidth / 2 : 0)) / actualCellWidth);\n  coords[1] = Math.ceil(coords[1] / actualCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event, wrapping\n * them to the bounds of the terminal and adding 32 to both the x and y values\n * as expected by xterm.\n */\nexport function getRawByteCoords(coords: [number, number] | undefined): { x: number, y: number } | undefined {\n  if (!coords) {\n    return undefined;\n  }\n\n  // xterm sends raw bytes and starts at 32 (SP) for each.\n  return { x: coords[0] + 32, y: coords[1] + 32 };\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(bufferService, startY), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(bufferService: IBufferService, currentRow: number): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param string The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, IMarker, IDisposable, ILinkMatcherOptions, ITheme, ILocalizableStrings, ITerminalAddon, ISelectionPosition, IBufferNamespace as IBufferNamespaceApi, IParser, ILinkProvider, IUnicodeHandling, FontWeight, IModes, IDecorationOptions, IDecoration } from 'xterm';\nimport { ITerminal } from 'browser/Types';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { IEvent } from 'common/EventEmitter';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ITerminalOptions } from 'common/Types';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: ITerminalOptions;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    this._checkProposedApi();\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    this._checkProposedApi();\n    if (!this._buffer) {\n      this._buffer = new BufferNamespaceApi(this._core);\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): ITerminalOptions {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkMatcher(regex: RegExp, handler: (event: MouseEvent, uri: string) => void, options?: ILinkMatcherOptions): number {\n    this._checkProposedApi();\n    return this._core.registerLinkMatcher(regex, handler, options);\n  }\n  public deregisterLinkMatcher(matcherId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterLinkMatcher(matcherId);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._checkProposedApi();\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker | undefined {\n    this._checkProposedApi();\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    return this.registerMarker(cursorYOffset);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeUtf8(data: Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public getOption(key: 'bellSound' | 'bellStyle' | 'cursorStyle' | 'fontFamily' | 'logLevel' | 'rendererType' | 'termName' | 'wordSeparator'): string;\n  public getOption(key: 'allowTransparency' | 'altClickMovesCursor' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell'): boolean;\n  public getOption(key: 'cols' | 'fontSize' | 'letterSpacing' | 'lineHeight' | 'rows' | 'tabStopWidth' | 'scrollback'): number;\n  public getOption(key: 'fontWeight' | 'fontWeightBold'): FontWeight;\n  public getOption(key: string): any;\n  public getOption(key: any): any {\n    return this._core.optionsService.getOption(key);\n  }\n  public setOption(key: 'bellSound' | 'fontFamily' | 'termName' | 'wordSeparator', value: string): void;\n  public setOption(key: 'fontWeight' | 'fontWeightBold', value: 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number): void;\n  public setOption(key: 'logLevel', value: 'debug' | 'info' | 'warn' | 'error' | 'off'): void;\n  public setOption(key: 'bellStyle', value: 'none' | 'visual' | 'sound' | 'both'): void;\n  public setOption(key: 'cursorStyle', value: 'block' | 'underline' | 'bar'): void;\n  public setOption(key: 'allowTransparency' | 'altClickMovesCursor' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'visualBell', value: boolean): void;\n  public setOption(key: 'fontSize' | 'letterSpacing' | 'lineHeight' | 'tabStopWidth' | 'scrollback', value: number): void;\n  public setOption(key: 'theme', value: ITheme): void;\n  public setOption(key: 'cols' | 'rows', value: number): void;\n  public setOption(key: string, value: any): void;\n  public setOption(key: any, value: any): void {\n    this._checkReadonlyOptions(key);\n    this._core.optionsService.setOption(key, value);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRenderLayer } from 'browser/renderer/Types';\nimport { ICellData, IColor } from 'common/Types';\nimport { DEFAULT_COLOR, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE, Attributes } from 'common/buffer/Constants';\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR, TEXT_BASELINE } from 'browser/renderer/atlas/Constants';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { acquireCharAtlas } from 'browser/renderer/atlas/CharAtlasCache';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { excludeFromContrastRatioDemands, throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { channels, color, rgba } from 'common/Color';\nimport { removeElementFromParent } from 'browser/Dom';\nimport { tryDrawCustomChar } from 'browser/renderer/CustomGlyphs';\n\nexport abstract class BaseRenderLayer implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx!: CanvasRenderingContext2D;\n  private _scaledCharWidth: number = 0;\n  private _scaledCharHeight: number = 0;\n  private _scaledCellWidth: number = 0;\n  private _scaledCellHeight: number = 0;\n  private _scaledCharLeft: number = 0;\n  private _scaledCharTop: number = 0;\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  protected _charAtlas: BaseCharAtlas | undefined;\n\n  /**\n   * An object that's reused when drawing glyphs in order to reduce GC.\n   */\n  private _currentGlyphIdentifier: IGlyphIdentifier = {\n    chars: '',\n    code: 0,\n    bg: 0,\n    fg: 0,\n    bold: false,\n    dim: false,\n    italic: false\n  };\n\n  constructor(\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected _colors: IColorSet,\n    private _rendererId: number,\n    protected readonly _bufferService: IBufferService,\n    protected readonly _optionsService: IOptionsService,\n    protected readonly _decorationService: IDecorationService\n  ) {\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n  }\n\n  public dispose(): void {\n    removeElementFromParent(this._canvas);\n    this._charAtlas?.dispose();\n  }\n\n  private _initCanvas(): void {\n    this._ctx = throwIfFalsy(this._canvas.getContext('2d', { alpha: this._alpha }));\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public onOptionsChanged(): void {}\n  public onBlur(): void {}\n  public onFocus(): void {}\n  public onCursorMove(): void {}\n  public onGridChanged(startRow: number, endRow: number): void {}\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public setColors(colorSet: IColorSet): void {\n    this._refreshCharAtlas(colorSet);\n  }\n\n  protected _setTransparency(alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = this._canvas.cloneNode() as HTMLCanvasElement;\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(this._colors);\n    this.onGridChanged(0, this._bufferService.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(colorSet: IColorSet): void {\n    if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireCharAtlas(this._optionsService.rawOptions, this._rendererId, colorSet, this._scaledCharWidth, this._scaledCharHeight);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    this._scaledCellWidth = dim.scaledCellWidth;\n    this._scaledCellHeight = dim.scaledCellHeight;\n    this._scaledCharWidth = dim.scaledCharWidth;\n    this._scaledCharHeight = dim.scaledCharHeight;\n    this._scaledCharLeft = dim.scaledCharLeft;\n    this._scaledCharTop = dim.scaledCharTop;\n    this._canvas.width = dim.scaledCanvasWidth;\n    this._canvas.height = dim.scaledCanvasHeight;\n    this._canvas.style.width = `${dim.canvasWidth}px`;\n    this._canvas.style.height = `${dim.canvasHeight}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(this._colors);\n  }\n\n  public abstract reset(): void;\n\n  public clearTextureAtlas(): void {\n    this._charAtlas?.clear();\n  }\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected _fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      width * this._scaledCellWidth,\n      height * this._scaledCellHeight);\n  }\n\n  /**\n     * Fills a 1px line (2px on HDPI) at the middle of the cell. This uses the\n     * existing fillStyle on the context.\n     * @param x The column to fill.\n     * @param y The row to fill.\n     */\n  protected _fillMiddleLineAtCells(x: number, y: number, width: number = 1): void {\n    const cellOffset = Math.ceil(this._scaledCellHeight * 0.5);\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - cellOffset - window.devicePixelRatio,\n      width * this._scaledCellWidth,\n      window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      (y + 1) * this._scaledCellHeight - window.devicePixelRatio - 1 /* Ensure it's drawn within the cell */,\n      width * this._scaledCellWidth,\n      window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillLeftLineAtCell(x: number, y: number, width: number): void {\n    this._ctx.fillRect(\n      x * this._scaledCellWidth,\n      y * this._scaledCellHeight,\n      window.devicePixelRatio * width,\n      this._scaledCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = window.devicePixelRatio;\n    this._ctx.strokeRect(\n      x * this._scaledCellWidth + window.devicePixelRatio / 2,\n      y * this._scaledCellHeight + (window.devicePixelRatio / 2),\n      width * this._scaledCellWidth - window.devicePixelRatio,\n      (height * this._scaledCellHeight) - window.devicePixelRatio);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param color The color of the character.\n   */\n  protected _fillCharTrueColor(cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(false, false);\n    this._ctx.textBaseline = TEXT_BASELINE;\n    this._clipRow(y);\n\n    // Draw custom characters if applicable\n    let drawSuccess = false;\n    if (this._optionsService.rawOptions.customGlyphs !== false) {\n      drawSuccess = tryDrawCustomChar(this._ctx, cell.getChars(), x * this._scaledCellWidth, y * this._scaledCellHeight, this._scaledCellWidth, this._scaledCellHeight);\n    }\n\n    // Draw the character\n    if (!drawSuccess) {\n      this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight);\n    }\n  }\n\n  /**\n   * Draws one or more characters at a cell. If possible this will draw using\n   * the character atlas to reduce draw time.\n   * @param chars The character or characters.\n   * @param code The character code.\n   * @param width The width of the characters.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param bg The background color, in the format stored within the attributes.\n   * This is used to validate whether a cached image can be used.\n   * @param bold Whether the text is bold.\n   */\n  protected _drawChars(cell: ICellData, x: number, y: number): void {\n    const contrastColor = this._getContrastColor(cell, x, y);\n\n    // skip cache right away if we draw in RGB\n    // Note: to avoid bad runtime JoinedCellData will be skipped\n    //       in the cache handler itself (atlasDidDraw == false) and\n    //       fall through to uncached later down below\n    if (contrastColor || cell.isFgRGB() || cell.isBgRGB()) {\n      this._drawUncachedChars(cell, x, y, contrastColor);\n      return;\n    }\n\n    let fg;\n    let bg;\n    if (cell.isInverse()) {\n      fg = (cell.isBgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getBgColor();\n      bg = (cell.isFgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getFgColor();\n    } else {\n      bg = (cell.isBgDefault()) ? DEFAULT_COLOR : cell.getBgColor();\n      fg = (cell.isFgDefault()) ? DEFAULT_COLOR : cell.getFgColor();\n    }\n\n    const drawInBrightColor = this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8;\n\n    fg += drawInBrightColor ? 8 : 0;\n    this._currentGlyphIdentifier.chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n    this._currentGlyphIdentifier.code = cell.getCode() || WHITESPACE_CELL_CODE;\n    this._currentGlyphIdentifier.bg = bg;\n    this._currentGlyphIdentifier.fg = fg;\n    this._currentGlyphIdentifier.bold = !!cell.isBold();\n    this._currentGlyphIdentifier.dim = !!cell.isDim();\n    this._currentGlyphIdentifier.italic = !!cell.isItalic();\n\n    // Don't try cache the glyph if it uses any decoration foreground/background override.\n    let hasOverrides = false;\n    for (const d of this._decorationService.getDecorationsAtCell(x, y)) {\n      if (d.backgroundColorRGB || d.foregroundColorRGB) {\n        hasOverrides = true;\n        break;\n      }\n    }\n\n    const atlasDidDraw = hasOverrides ? false : this._charAtlas?.draw(this._ctx, this._currentGlyphIdentifier, x * this._scaledCellWidth + this._scaledCharLeft, y * this._scaledCellHeight + this._scaledCharTop);\n\n    if (!atlasDidDraw) {\n      this._drawUncachedChars(cell, x, y);\n    }\n  }\n\n  /**\n   * Draws one or more characters at one or more cells. The character(s) will be\n   * clipped to ensure that they fit with the cell(s), including the cell to the\n   * right if the last character is a wide character.\n   * @param chars The character.\n   * @param width The width of the character.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   */\n  private _drawUncachedChars(cell: ICellData, x: number, y: number, fgOverride?: IColor): void {\n    this._ctx.save();\n    this._ctx.font = this._getFont(!!cell.isBold(), !!cell.isItalic());\n    this._ctx.textBaseline = TEXT_BASELINE;\n\n    if (cell.isInverse()) {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isBgDefault()) {\n        this._ctx.fillStyle = color.opaque(this._colors.background).css;\n      } else if (cell.isBgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else {\n        let bg = cell.getBgColor();\n        if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n          bg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[bg].css;\n      }\n    } else {\n      if (fgOverride) {\n        this._ctx.fillStyle = fgOverride.css;\n      } else if (cell.isFgDefault()) {\n        this._ctx.fillStyle = this._colors.foreground.css;\n      } else if (cell.isFgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n      } else {\n        let fg = cell.getFgColor();\n        if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n          fg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[fg].css;\n      }\n    }\n\n    this._clipRow(y);\n\n    // Apply alpha to dim the character\n    if (cell.isDim()) {\n      this._ctx.globalAlpha = DIM_OPACITY;\n    }\n\n    // Draw custom characters if applicable\n    let drawSuccess = false;\n    if (this._optionsService.rawOptions.customGlyphs !== false) {\n      drawSuccess = tryDrawCustomChar(this._ctx, cell.getChars(), x * this._scaledCellWidth, y * this._scaledCellHeight, this._scaledCellWidth, this._scaledCellHeight);\n    }\n\n    // Draw the character\n    if (!drawSuccess) {\n      this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight);\n    }\n\n    this._ctx.restore();\n  }\n\n\n  /**\n   * Clips a row to ensure no pixels will be drawn outside the cells in the row.\n   * @param y The row to clip.\n   */\n  private _clipRow(y: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n      0,\n      y * this._scaledCellHeight,\n      this._bufferService.cols * this._scaledCellWidth,\n      this._scaledCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? this._optionsService.rawOptions.fontWeightBold : this._optionsService.rawOptions.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${this._optionsService.rawOptions.fontSize * window.devicePixelRatio}px ${this._optionsService.rawOptions.fontFamily}`;\n  }\n\n  private _getContrastColor(cell: CellData, x: number, y: number): IColor | undefined {\n    // Get any decoration foreground/background overrides, this must be fetched before the early\n    // exist but applied after inverse\n    let bgOverride: number | undefined;\n    let fgOverride: number | undefined;\n    let isTop = false;\n    for (const d of this._decorationService.getDecorationsAtCell(x, y)) {\n      if (d.options.layer !== 'top' && isTop) {\n        continue;\n      }\n      if (d.backgroundColorRGB) {\n        bgOverride = d.backgroundColorRGB.rgba;\n      }\n      if (d.foregroundColorRGB) {\n        fgOverride = d.foregroundColorRGB.rgba;\n      }\n      isTop = d.options.layer === 'top';\n    }\n\n    // Apply selection foreground if applicable\n    if (!isTop) {\n      if (this._colors.selectionForeground && this._isCellInSelection(x, y)) {\n        fgOverride = this._colors.selectionForeground.rgba;\n      }\n    }\n\n    if (!bgOverride && !fgOverride && (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode()))) {\n      return undefined;\n    }\n\n    if (!bgOverride && !fgOverride) {\n      // Try get from cache\n      const adjustedColor = this._colors.contrastCache.getColor(cell.bg, cell.fg);\n      if (adjustedColor !== undefined) {\n        return adjustedColor || undefined;\n      }\n    }\n\n    let fgColor = cell.getFgColor();\n    let fgColorMode = cell.getFgColorMode();\n    let bgColor = cell.getBgColor();\n    let bgColorMode = cell.getBgColorMode();\n    const isInverse = !!cell.isInverse();\n    const isBold = !!cell.isInverse();\n    if (isInverse) {\n      const temp = fgColor;\n      fgColor = bgColor;\n      bgColor = temp;\n      const temp2 = fgColorMode;\n      fgColorMode = bgColorMode;\n      bgColorMode = temp2;\n    }\n\n    const bgRgba = this._resolveBackgroundRgba(bgOverride !== undefined ? Attributes.CM_RGB : bgColorMode, bgOverride ?? bgColor, isInverse);\n    const fgRgba = this._resolveForegroundRgba(fgColorMode, fgColor, isInverse, isBold);\n    let result = rgba.ensureContrastRatio(bgOverride ?? bgRgba, fgOverride ?? fgRgba, this._optionsService.rawOptions.minimumContrastRatio);\n\n    if (!result) {\n      if (!fgOverride) {\n        this._colors.contrastCache.setColor(cell.bg, cell.fg, null);\n        return undefined;\n      }\n      // If it was an override and there was no contrast change, set as the result\n      result = fgOverride;\n    }\n\n    const color: IColor = {\n      css: channels.toCss(\n        (result >> 24) & 0xFF,\n        (result >> 16) & 0xFF,\n        (result >> 8) & 0xFF\n      ),\n      rgba: result\n    };\n    if (!bgOverride && !fgOverride) {\n      this._colors.contrastCache.setColor(cell.bg, cell.fg, color);\n    }\n\n    return color;\n  }\n\n  private _resolveBackgroundRgba(bgColorMode: number, bgColor: number, inverse: boolean): number {\n    switch (bgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        return this._colors.ansi[bgColor].rgba;\n      case Attributes.CM_RGB:\n        return bgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.foreground.rgba;\n        }\n        return this._colors.background.rgba;\n    }\n  }\n\n  private _resolveForegroundRgba(fgColorMode: number, fgColor: number, inverse: boolean, bold: boolean): number {\n    switch (fgColorMode) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:\n        if (this._optionsService.rawOptions.drawBoldTextInBrightColors && bold && fgColor < 8) {\n          fgColor += 8;\n        }\n        return this._colors.ansi[fgColor].rgba;\n      case Attributes.CM_RGB:\n        return fgColor << 8;\n      case Attributes.CM_DEFAULT:\n      default:\n        if (inverse) {\n          return this._colors.background.rgba;\n        }\n        return this._colors.foreground.rgba;\n    }\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      return x >= start[0] && y >= start[1] &&\n        x < end[0] && y < end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService, IDecorationService } from 'common/services/Services';\nimport { IEventEmitter } from 'common/EventEmitter';\nimport { ICoreBrowserService } from 'browser/services/Services';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager | undefined;\n  private _cell: ICellData = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    private _onRequestRedraw: IEventEmitter<IRequestRedrawEvent>,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IDecorationService decorationService: IDecorationService\n  ) {\n    super(container, 'cursor', zIndex, true, colors, rendererId, bufferService, optionsService, decorationService);\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n  }\n\n  public dispose(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    super.dispose();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: 0,\n      y: 0,\n      isFocused: false,\n      style: '',\n      width: 0\n    };\n  }\n\n  public reset(): void {\n    this._clearCursor();\n    this._cursorBlinkStateManager?.restartBlinkAnimation();\n    this.onOptionsChanged();\n  }\n\n  public onBlur(): void {\n    this._cursorBlinkStateManager?.pause();\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onFocus(): void {\n    this._cursorBlinkStateManager?.resume();\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onOptionsChanged(): void {\n    if (this._optionsService.rawOptions.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(this._coreBrowserService.isFocused, () => {\n          this._render(true);\n        });\n      }\n    } else {\n      this._cursorBlinkStateManager?.dispose();\n      this._cursorBlinkStateManager = undefined;\n    }\n    // Request a refresh from the terminal as management of rendering is being\n    // moved back to the terminal\n    this._onRequestRedraw.fire({ start: this._bufferService.buffer.y, end: this._bufferService.buffer.y });\n  }\n\n  public onCursorMove(): void {\n    this._cursorBlinkStateManager?.restartBlinkAnimation();\n  }\n\n  public onGridChanged(startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  private _render(triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    if (!this._coreService.isCursorInitialized || this._coreService.isCursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const viewportRelativeCursorY = cursorY - this._bufferService.buffer.ydisp;\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= this._bufferService.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    // in case cursor.x == cols adjust visual cursor to cols - 1\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    this._bufferService.buffer.lines.get(cursorY)!.loadCell(cursorX, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!this._coreBrowserService.isFocused) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._colors.cursor.css;\n      const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n      if (cursorStyle && cursorStyle !== 'block') {\n        this._cursorRenderers[cursorStyle](cursorX, viewportRelativeCursorY, this._cell);\n      } else {\n        this._renderBlurCursor(cursorX, viewportRelativeCursorY, this._cell);\n      }\n      this._ctx.restore();\n      this._state.x = cursorX;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = cursorStyle;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === cursorX &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === this._coreBrowserService.isFocused &&\n          this._state.style === this._optionsService.rawOptions.cursorStyle &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[this._optionsService.rawOptions.cursorStyle || 'block'](cursorX, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = cursorX;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = this._optionsService.rawOptions.cursorStyle;\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      // Avoid potential rounding errors when device pixel ratio is less than 1\n      if (window.devicePixelRatio < 1) {\n        this._clearAll();\n      } else {\n        this._clearCells(this._state.x, this._state.y, this._state.width, 1);\n      }\n      this._state = {\n        x: 0,\n        y: 0,\n        isFocused: false,\n        style: '',\n        width: 0\n      };\n    }\n  }\n\n  private _renderBarCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillLeftLineAtCell(x, y, this._optionsService.rawOptions.cursorWidth);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._colors.cursorAccent.css;\n    this._fillCharTrueColor(cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._colors.cursor.css;\n    this._strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number | undefined;\n  private _blinkStartTimeout: number | undefined;\n  private _blinkInterval: number | undefined;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number | undefined;\n\n  constructor(\n    isFocused: boolean,\n    private _renderCallback: () => void\n  ) {\n    this.isCursorVisible = true;\n    if (isFocused) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public restartBlinkAnimation(): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = window.setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = undefined;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = undefined;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = window.setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = undefined;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = undefined;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = undefined;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = undefined;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public resume(): void {\n    // Clear out any existing timers just in case\n    this.pause();\n\n    this._animationTimeRestarted = undefined;\n    this._restartInterval();\n    this.restartBlinkAnimation();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\n\ninterface IBlockVector {\n  x: number;\n  y: number;\n  w: number;\n  h: number;\n}\n\nexport const blockElementDefinitions: { [index: string]: IBlockVector[] | undefined } = {\n  // Block elements (0x2580-0x2590)\n  '▀': [{ x: 0, y: 0, w: 8, h: 4 }], // UPPER HALF BLOCK\n  '▁': [{ x: 0, y: 7, w: 8, h: 1 }], // LOWER ONE EIGHTH BLOCK\n  '▂': [{ x: 0, y: 6, w: 8, h: 2 }], // LOWER ONE QUARTER BLOCK\n  '▃': [{ x: 0, y: 5, w: 8, h: 3 }], // LOWER THREE EIGHTHS BLOCK\n  '▄': [{ x: 0, y: 4, w: 8, h: 4 }], // LOWER HALF BLOCK\n  '▅': [{ x: 0, y: 3, w: 8, h: 5 }], // LOWER FIVE EIGHTHS BLOCK\n  '▆': [{ x: 0, y: 2, w: 8, h: 6 }], // LOWER THREE QUARTERS BLOCK\n  '▇': [{ x: 0, y: 1, w: 8, h: 7 }], // LOWER SEVEN EIGHTHS BLOCK\n  '█': [{ x: 0, y: 0, w: 8, h: 8 }], // FULL BLOCK\n  '▉': [{ x: 0, y: 0, w: 7, h: 8 }], // LEFT SEVEN EIGHTHS BLOCK\n  '▊': [{ x: 0, y: 0, w: 6, h: 8 }], // LEFT THREE QUARTERS BLOCK\n  '▋': [{ x: 0, y: 0, w: 5, h: 8 }], // LEFT FIVE EIGHTHS BLOCK\n  '▌': [{ x: 0, y: 0, w: 4, h: 8 }], // LEFT HALF BLOCK\n  '▍': [{ x: 0, y: 0, w: 3, h: 8 }], // LEFT THREE EIGHTHS BLOCK\n  '▎': [{ x: 0, y: 0, w: 2, h: 8 }], // LEFT ONE QUARTER BLOCK\n  '▏': [{ x: 0, y: 0, w: 1, h: 8 }], // LEFT ONE EIGHTH BLOCK\n  '▐': [{ x: 4, y: 0, w: 4, h: 8 }], // RIGHT HALF BLOCK\n\n  // Block elements (0x2594-0x2595)\n  '▔': [{ x: 0, y: 0, w: 9, h: 1 }], // UPPER ONE EIGHTH BLOCK\n  '▕': [{ x: 7, y: 0, w: 1, h: 8 }], // RIGHT ONE EIGHTH BLOCK\n\n  // Terminal graphic characters (0x2596-0x259F)\n  '▖': [{ x: 0, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER LEFT\n  '▗': [{ x: 4, y: 4, w: 4, h: 4 }],                             // QUADRANT LOWER RIGHT\n  '▘': [{ x: 0, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER LEFT\n  '▙': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER LEFT AND LOWER LEFT AND LOWER RIGHT\n  '▚': [{ x: 0, y: 0, w: 4, h: 4 }, { x: 4, y: 4, w: 4, h: 4 }], // QUADRANT UPPER LEFT AND LOWER RIGHT\n  '▛': [{ x: 0, y: 0, w: 4, h: 8 }, { x: 0, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER LEFT\n  '▜': [{ x: 0, y: 0, w: 8, h: 4 }, { x: 4, y: 0, w: 4, h: 8 }], // QUADRANT UPPER LEFT AND UPPER RIGHT AND LOWER RIGHT\n  '▝': [{ x: 4, y: 0, w: 4, h: 4 }],                             // QUADRANT UPPER RIGHT\n  '▞': [{ x: 4, y: 0, w: 4, h: 4 }, { x: 0, y: 4, w: 4, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT\n  '▟': [{ x: 4, y: 0, w: 4, h: 8 }, { x: 0, y: 4, w: 8, h: 4 }], // QUADRANT UPPER RIGHT AND LOWER LEFT AND LOWER RIGHT\n\n  // VERTICAL ONE EIGHTH BLOCK-2 through VERTICAL ONE EIGHTH BLOCK-7\n  '\\u{1FB70}': [{ x: 1, y: 0, w: 1, h: 8 }],\n  '\\u{1FB71}': [{ x: 2, y: 0, w: 1, h: 8 }],\n  '\\u{1FB72}': [{ x: 3, y: 0, w: 1, h: 8 }],\n  '\\u{1FB73}': [{ x: 4, y: 0, w: 1, h: 8 }],\n  '\\u{1FB74}': [{ x: 5, y: 0, w: 1, h: 8 }],\n  '\\u{1FB75}': [{ x: 6, y: 0, w: 1, h: 8 }],\n\n  // HORIZONTAL ONE EIGHTH BLOCK-2 through HORIZONTAL ONE EIGHTH BLOCK-7\n  '\\u{1FB76}': [{ x: 0, y: 1, w: 8, h: 1 }],\n  '\\u{1FB77}': [{ x: 0, y: 2, w: 8, h: 1 }],\n  '\\u{1FB78}': [{ x: 0, y: 3, w: 8, h: 1 }],\n  '\\u{1FB79}': [{ x: 0, y: 4, w: 8, h: 1 }],\n  '\\u{1FB7A}': [{ x: 0, y: 5, w: 8, h: 1 }],\n  '\\u{1FB7B}': [{ x: 0, y: 6, w: 8, h: 1 }],\n\n  // LEFT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7C}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // LEFT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7D}': [{ x: 0, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND UPPER ONE EIGHTH BLOCK\n  '\\u{1FB7E}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 0, w: 8, h: 1 }],\n  // RIGHT AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB7F}': [{ x: 7, y: 0, w: 1, h: 8 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // UPPER AND LOWER ONE EIGHTH BLOCK\n  '\\u{1FB80}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n  // HORIZONTAL ONE EIGHTH BLOCK-1358\n  '\\u{1FB81}': [{ x: 0, y: 0, w: 8, h: 1 }, { x: 0, y: 2, w: 8, h: 1 }, { x: 0, y: 4, w: 8, h: 1 }, { x: 0, y: 7, w: 8, h: 1 }],\n\n  // UPPER ONE QUARTER BLOCK\n  '\\u{1FB82}': [{ x: 0, y: 0, w: 8, h: 2 }],\n  // UPPER THREE EIGHTHS BLOCK\n  '\\u{1FB83}': [{ x: 0, y: 0, w: 8, h: 3 }],\n  // UPPER FIVE EIGHTHS BLOCK\n  '\\u{1FB84}': [{ x: 0, y: 0, w: 8, h: 5 }],\n  // UPPER THREE QUARTERS BLOCK\n  '\\u{1FB85}': [{ x: 0, y: 0, w: 8, h: 6 }],\n  // UPPER SEVEN EIGHTHS BLOCK\n  '\\u{1FB86}': [{ x: 0, y: 0, w: 8, h: 7 }],\n\n  // RIGHT ONE QUARTER BLOCK\n  '\\u{1FB87}': [{ x: 6, y: 0, w: 2, h: 8 }],\n  // RIGHT THREE EIGHTHS B0OCK\n  '\\u{1FB88}': [{ x: 5, y: 0, w: 3, h: 8 }],\n  // RIGHT FIVE EIGHTHS BL0CK\n  '\\u{1FB89}': [{ x: 3, y: 0, w: 5, h: 8 }],\n  // RIGHT THREE QUARTERS 0LOCK\n  '\\u{1FB8A}': [{ x: 2, y: 0, w: 6, h: 8 }],\n  // RIGHT SEVEN EIGHTHS B0OCK\n  '\\u{1FB8B}': [{ x: 1, y: 0, w: 7, h: 8 }],\n\n  // CHECKER BOARD FILL\n  '\\u{1FB95}': [\n    { x: 0, y: 0, w: 2, h: 2 }, { x: 4, y: 0, w: 2, h: 2 },\n    { x: 2, y: 2, w: 2, h: 2 }, { x: 6, y: 2, w: 2, h: 2 },\n    { x: 0, y: 4, w: 2, h: 2 }, { x: 4, y: 4, w: 2, h: 2 },\n    { x: 2, y: 6, w: 2, h: 2 }, { x: 6, y: 6, w: 2, h: 2 }\n  ],\n  // INVERSE CHECKER BOARD FILL\n  '\\u{1FB96}': [\n    { x: 2, y: 0, w: 2, h: 2 }, { x: 6, y: 0, w: 2, h: 2 },\n    { x: 0, y: 2, w: 2, h: 2 }, { x: 4, y: 2, w: 2, h: 2 },\n    { x: 2, y: 4, w: 2, h: 2 }, { x: 6, y: 4, w: 2, h: 2 },\n    { x: 0, y: 6, w: 2, h: 2 }, { x: 4, y: 6, w: 2, h: 2 }\n  ],\n  // HEAVY HORIZONTAL FILL (upper middle and lower one quarter block)\n  '\\u{1FB97}': [{ x: 0, y: 2, w: 8, h: 2 }, { x: 0, y: 6, w: 8, h: 2 }]\n};\n\ntype PatternDefinition = number[][];\n\n/**\n * Defines the repeating pattern used by special characters, the pattern is made up of a 2d array of\n * pixel values to be filled (1) or not filled (0).\n */\nconst patternCharacterDefinitions: { [key: string]: PatternDefinition | undefined } = {\n  // Shade characters (0x2591-0x2593)\n  '░': [ // LIGHT SHADE (25%)\n    [1, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 1, 0],\n    [0, 0, 0, 0]\n  ],\n  '▒': [ // MEDIUM SHADE (50%)\n    [1, 0],\n    [0, 0],\n    [0, 1],\n    [0, 0]\n  ],\n  '▓': [ // DARK SHADE (75%)\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, 1]\n  ]\n};\n\nconst enum Shapes {\n  /** │ */ TOP_TO_BOTTOM = 'M.5,0 L.5,1',\n  /** ─ */ LEFT_TO_RIGHT = 'M0,.5 L1,.5',\n\n  /** └ */ TOP_TO_RIGHT = 'M.5,0 L.5,.5 L1,.5',\n  /** ┘ */ TOP_TO_LEFT = 'M.5,0 L.5,.5 L0,.5',\n  /** ┐ */ LEFT_TO_BOTTOM = 'M0,.5 L.5,.5 L.5,1',\n  /** ┌ */ RIGHT_TO_BOTTOM = 'M0.5,1 L.5,.5 L1,.5',\n\n  /** ╵ */ MIDDLE_TO_TOP = 'M.5,.5 L.5,0',\n  /** ╴ */ MIDDLE_TO_LEFT = 'M.5,.5 L0,.5',\n  /** ╶ */ MIDDLE_TO_RIGHT = 'M.5,.5 L1,.5',\n  /** ╷ */ MIDDLE_TO_BOTTOM = 'M.5,.5 L.5,1',\n\n  /** ┴ */ T_TOP = 'M0,.5 L1,.5 M.5,.5 L.5,0',\n  /** ┤ */ T_LEFT = 'M.5,0 L.5,1 M.5,.5 L0,.5',\n  /** ├ */ T_RIGHT = 'M.5,0 L.5,1 M.5,.5 L1,.5',\n  /** ┬ */ T_BOTTOM = 'M0,.5 L1,.5 M.5,.5 L.5,1',\n\n  /** ┼ */ CROSS = 'M0,.5 L1,.5 M.5,0 L.5,1',\n\n  /** ╌ */ TWO_DASHES_HORIZONTAL = 'M.1,.5 L.4,.5 M.6,.5 L.9,.5', // .2 empty, .3 filled\n  /** ┄ */ THREE_DASHES_HORIZONTAL = 'M.0667,.5 L.2667,.5 M.4,.5 L.6,.5 M.7333,.5 L.9333,.5', // .1333 empty, .2 filled\n  /** ┉ */ FOUR_DASHES_HORIZONTAL = 'M.05,.5 L.2,.5 M.3,.5 L.45,.5 M.55,.5 L.7,.5 M.8,.5 L.95,.5', // .1 empty, .15 filled\n  /** ╎ */ TWO_DASHES_VERTICAL = 'M.5,.1 L.5,.4 M.5,.6 L.5,.9',\n  /** ┆ */ THREE_DASHES_VERTICAL = 'M.5,.0667 L.5,.2667 M.5,.4 L.5,.6 M.5,.7333 L.5,.9333',\n  /** ┊ */ FOUR_DASHES_VERTICAL = 'M.5,.05 L.5,.2 M.5,.3 L.5,.45 L.5,.55 M.5,.7 L.5,.95',\n}\n\nconst enum Style {\n  NORMAL = 1,\n  BOLD = 3\n}\n\n/**\n * This contains the definitions of all box drawing characters in the format of SVG paths (ie. the\n * svg d attribute).\n */\nexport const boxDrawingDefinitions: { [character: string]: { [fontWeight: number]: string | ((xp: number, yp: number) => string) } | undefined } = {\n  // Uniform normal and bold\n  '─': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT },\n  '━': { [Style.BOLD]:   Shapes.LEFT_TO_RIGHT },\n  '│': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM },\n  '┃': { [Style.BOLD]:   Shapes.TOP_TO_BOTTOM },\n  '┌': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM },\n  '┏': { [Style.BOLD]:   Shapes.RIGHT_TO_BOTTOM },\n  '┐': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM },\n  '┓': { [Style.BOLD]:   Shapes.LEFT_TO_BOTTOM },\n  '└': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT },\n  '┗': { [Style.BOLD]:   Shapes.TOP_TO_RIGHT },\n  '┘': { [Style.NORMAL]: Shapes.TOP_TO_LEFT },\n  '┛': { [Style.BOLD]:   Shapes.TOP_TO_LEFT },\n  '├': { [Style.NORMAL]: Shapes.T_RIGHT },\n  '┣': { [Style.BOLD]:   Shapes.T_RIGHT },\n  '┤': { [Style.NORMAL]: Shapes.T_LEFT },\n  '┫': { [Style.BOLD]:   Shapes.T_LEFT },\n  '┬': { [Style.NORMAL]: Shapes.T_BOTTOM },\n  '┳': { [Style.BOLD]:   Shapes.T_BOTTOM },\n  '┴': { [Style.NORMAL]: Shapes.T_TOP },\n  '┻': { [Style.BOLD]:   Shapes.T_TOP },\n  '┼': { [Style.NORMAL]: Shapes.CROSS },\n  '╋': { [Style.BOLD]:   Shapes.CROSS },\n  '╴': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT },\n  '╸': { [Style.BOLD]:   Shapes.MIDDLE_TO_LEFT },\n  '╵': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP },\n  '╹': { [Style.BOLD]:   Shapes.MIDDLE_TO_TOP },\n  '╶': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT },\n  '╺': { [Style.BOLD]:   Shapes.MIDDLE_TO_RIGHT },\n  '╷': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM },\n  '╻': { [Style.BOLD]:   Shapes.MIDDLE_TO_BOTTOM },\n\n  // Double border\n  '═': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '║': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╒': { [Style.NORMAL]: (xp, yp) => `M.5,1 L.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╓': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},1 L${.5 - xp},.5 L1,.5 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╔': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╕': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L.5,${.5 - yp} L.5,1 M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╖': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},1 L${.5 + xp},.5 L0,.5 M${.5 - xp},.5 L${.5 - xp},1` },\n  '╗': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},1` },\n  '╘': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 + yp} L1,${.5 + yp} M.5,${.5 - yp} L1,${.5 - yp}` },\n  '╙': { [Style.NORMAL]: (xp, yp) => `M1,.5 L${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╚': { [Style.NORMAL]: (xp, yp) => `M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0 M1,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},0` },\n  '╛': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L.5,${.5 + yp} L.5,0 M0,${.5 - yp} L.5,${.5 - yp}` },\n  '╜': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 + xp},.5 L${.5 + xp},0 M${.5 - xp},.5 L${.5 - xp},0` },\n  '╝': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M0,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},0` },\n  '╞': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M.5,${.5 - yp} L1,${.5 - yp} M.5,${.5 + yp} L1,${.5 + yp}` },\n  '╟': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1 M${.5 + xp},.5 L1,.5` },\n  '╠': { [Style.NORMAL]: (xp, yp) => `M${.5 - xp},0 L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╡': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L.5,${.5 - yp} M0,${.5 + yp} L.5,${.5 + yp}` },\n  '╢': { [Style.NORMAL]: (xp, yp) => `M0,.5 L${.5 - xp},.5 M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╣': { [Style.NORMAL]: (xp, yp) => `M${.5 + xp},0 L${.5 + xp},1 M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0` },\n  '╤': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp} M.5,${.5 + yp} L.5,1` },\n  '╥': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},1 M${.5 + xp},.5 L${.5 + xp},1` },\n  '╦': { [Style.NORMAL]: (xp, yp) => `M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1` },\n  '╧': { [Style.NORMAL]: (xp, yp) => `M.5,0 L.5,${.5 - yp} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╨': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},.5 L${.5 - xp},0 M${.5 + xp},.5 L${.5 + xp},0` },\n  '╩': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L1,${.5 + yp} M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n  '╪': { [Style.NORMAL]: (xp, yp) => `${Shapes.TOP_TO_BOTTOM} M0,${.5 - yp} L1,${.5 - yp} M0,${.5 + yp} L1,${.5 + yp}` },\n  '╫': { [Style.NORMAL]: (xp, yp) => `${Shapes.LEFT_TO_RIGHT} M${.5 - xp},0 L${.5 - xp},1 M${.5 + xp},0 L${.5 + xp},1` },\n  '╬': { [Style.NORMAL]: (xp, yp) => `M0,${.5 + yp} L${.5 - xp},${.5 + yp} L${.5 - xp},1 M1,${.5 + yp} L${.5 + xp},${.5 + yp} L${.5 + xp},1 M0,${.5 - yp} L${.5 - xp},${.5 - yp} L${.5 - xp},0 M1,${.5 - yp} L${.5 + xp},${.5 - yp} L${.5 + xp},0` },\n\n  // Diagonal\n  '╱': { [Style.NORMAL]: 'M1,0 L0,1' },\n  '╲': { [Style.NORMAL]: 'M0,0 L1,1' },\n  '╳': { [Style.NORMAL]: 'M1,0 L0,1 M0,0 L1,1' },\n\n  // Mixed weight\n  '╼': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '╽': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╾': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '╿': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┍': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┎': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┑': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┒': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┕': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┖': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┙': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┚': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┝': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┞': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┟': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┠': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┡': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┢': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┥': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┦': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┧': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┨': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '┩': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┪': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┭': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┮': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┯': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┰': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '┱': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '┲': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '┵': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┶': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┷': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '┸': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '┹': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '┺': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '┽': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}`,  [Style.BOLD]: Shapes.MIDDLE_TO_LEFT },\n  '┾': { [Style.NORMAL]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}`,   [Style.BOLD]: Shapes.MIDDLE_TO_RIGHT },\n  '┿': { [Style.NORMAL]: Shapes.TOP_TO_BOTTOM,                                 [Style.BOLD]: Shapes.LEFT_TO_RIGHT },\n  '╀': { [Style.NORMAL]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}`, [Style.BOLD]: Shapes.MIDDLE_TO_TOP },\n  '╁': { [Style.NORMAL]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}`,    [Style.BOLD]: Shapes.MIDDLE_TO_BOTTOM },\n  '╂': { [Style.NORMAL]: Shapes.LEFT_TO_RIGHT,                                 [Style.BOLD]: Shapes.TOP_TO_BOTTOM },\n  '╃': { [Style.NORMAL]: Shapes.RIGHT_TO_BOTTOM,                               [Style.BOLD]: Shapes.TOP_TO_LEFT },\n  '╄': { [Style.NORMAL]: Shapes.LEFT_TO_BOTTOM,                                [Style.BOLD]: Shapes.TOP_TO_RIGHT },\n  '╅': { [Style.NORMAL]: Shapes.TOP_TO_RIGHT,                                  [Style.BOLD]: Shapes.LEFT_TO_BOTTOM },\n  '╆': { [Style.NORMAL]: Shapes.TOP_TO_LEFT,                                   [Style.BOLD]: Shapes.RIGHT_TO_BOTTOM },\n  '╇': { [Style.NORMAL]: Shapes.MIDDLE_TO_BOTTOM,                              [Style.BOLD]: `${Shapes.MIDDLE_TO_TOP} ${Shapes.LEFT_TO_RIGHT}` },\n  '╈': { [Style.NORMAL]: Shapes.MIDDLE_TO_TOP,                                 [Style.BOLD]: `${Shapes.LEFT_TO_RIGHT} ${Shapes.MIDDLE_TO_BOTTOM}` },\n  '╉': { [Style.NORMAL]: Shapes.MIDDLE_TO_RIGHT,                               [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_LEFT}` },\n  '╊': { [Style.NORMAL]: Shapes.MIDDLE_TO_LEFT,                                [Style.BOLD]: `${Shapes.TOP_TO_BOTTOM} ${Shapes.MIDDLE_TO_RIGHT}` },\n\n  // Dashed\n  '╌': { [Style.NORMAL]: Shapes.TWO_DASHES_HORIZONTAL },\n  '╍': { [Style.BOLD]:   Shapes.TWO_DASHES_HORIZONTAL },\n  '┄': { [Style.NORMAL]: Shapes.THREE_DASHES_HORIZONTAL },\n  '┅': { [Style.BOLD]:   Shapes.THREE_DASHES_HORIZONTAL },\n  '┈': { [Style.NORMAL]: Shapes.FOUR_DASHES_HORIZONTAL },\n  '┉': { [Style.BOLD]:   Shapes.FOUR_DASHES_HORIZONTAL },\n  '╎': { [Style.NORMAL]: Shapes.TWO_DASHES_VERTICAL },\n  '╏': { [Style.BOLD]:   Shapes.TWO_DASHES_VERTICAL },\n  '┆': { [Style.NORMAL]: Shapes.THREE_DASHES_VERTICAL  },\n  '┇': { [Style.BOLD]:   Shapes.THREE_DASHES_VERTICAL },\n  '┊': { [Style.NORMAL]: Shapes.FOUR_DASHES_VERTICAL },\n  '┋': { [Style.BOLD]:   Shapes.FOUR_DASHES_VERTICAL },\n\n  // Curved\n  '╭': { [Style.NORMAL]: 'C.5,1,.5,.5,1,.5' },\n  '╮': { [Style.NORMAL]: 'C.5,1,.5,.5,0,.5' },\n  '╯': { [Style.NORMAL]: 'C.5,0,.5,.5,0,.5' },\n  '╰': { [Style.NORMAL]: 'C.5,0,.5,.5,1,.5' }\n};\n\ninterface IVectorShape {\n  d: string;\n  type: VectorType;\n  /** Padding to apply to the vector's x axis in CSS pixels. */\n  horizontalPadding?: number;\n}\n\nconst enum VectorType {\n  FILL,\n  STROKE\n}\n\n/**\n * This contains the definitions of the primarily used box drawing characters as vector shapes. The\n * reason these characters are defined specially is to avoid common problems if a user's font has\n * not been patched with powerline characters and also to get pixel perfect rendering as rendering\n * issues can occur around AA/SPAA.\n *\n * Original symbols defined in https://github.com/powerline/fontpatcher\n */\nexport const powerlineDefinitions: { [index: string]: IVectorShape } = {\n  // Right triangle solid\n  '\\u{E0B0}': { d: 'M0,0 L1,.5 L0,1', type: VectorType.FILL },\n  // Right triangle line\n  '\\u{E0B1}': { d: 'M0,0 L1,.5 L0,1', type: VectorType.STROKE, horizontalPadding: 0.5 },\n  // Left triangle solid\n  '\\u{E0B2}': { d: 'M1,0 L0,.5 L1,1', type: VectorType.FILL },\n  // Left triangle line\n  '\\u{E0B3}': { d: 'M1,0 L0,.5 L1,1', type: VectorType.STROKE, horizontalPadding: 0.5 }\n};\n\n/**\n * Try drawing a custom block element or box drawing character, returning whether it was\n * successfully drawn.\n */\nexport function tryDrawCustomChar(\n  ctx: CanvasRenderingContext2D,\n  c: string,\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): boolean {\n  const blockElementDefinition = blockElementDefinitions[c];\n  if (blockElementDefinition) {\n    drawBlockElementChar(ctx, blockElementDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const patternDefinition = patternCharacterDefinitions[c];\n  if (patternDefinition) {\n    drawPatternChar(ctx, patternDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const boxDrawingDefinition = boxDrawingDefinitions[c];\n  if (boxDrawingDefinition) {\n    drawBoxDrawingChar(ctx, boxDrawingDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  const powerlineDefinition = powerlineDefinitions[c];\n  if (powerlineDefinition) {\n    drawPowerlineChar(ctx, powerlineDefinition, xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n    return true;\n  }\n\n  return false;\n}\n\nfunction drawBlockElementChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: IBlockVector[],\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  for (let i = 0; i < charDefinition.length; i++) {\n    const box = charDefinition[i];\n    const xEighth = scaledCellWidth / 8;\n    const yEighth = scaledCellHeight / 8;\n    ctx.fillRect(\n      xOffset + box.x * xEighth,\n      yOffset + box.y * yEighth,\n      box.w * xEighth,\n      box.h * yEighth\n    );\n  }\n}\n\nconst cachedPatterns: Map<PatternDefinition, Map</* fillStyle */string, CanvasPattern>> = new Map();\n\nfunction drawPatternChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: number[][],\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  let patternSet = cachedPatterns.get(charDefinition);\n  if (!patternSet) {\n    patternSet = new Map();\n    cachedPatterns.set(charDefinition, patternSet);\n  }\n  const fillStyle = ctx.fillStyle;\n  if (typeof fillStyle !== 'string') {\n    throw new Error(`Unexpected fillStyle type \"${fillStyle}\"`);\n  }\n  let pattern = patternSet.get(fillStyle);\n  if (!pattern) {\n    const width = charDefinition[0].length;\n    const height = charDefinition.length;\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = width;\n    tmpCanvas.height = height;\n    const tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d'));\n    const imageData = new ImageData(width, height);\n\n    // Extract rgba from fillStyle\n    let r: number;\n    let g: number;\n    let b: number;\n    let a: number;\n    if (fillStyle.startsWith('#')) {\n      r = parseInt(fillStyle.slice(1, 3), 16);\n      g = parseInt(fillStyle.slice(3, 5), 16);\n      b = parseInt(fillStyle.slice(5, 7), 16);\n      a = fillStyle.length > 7 && parseInt(fillStyle.slice(7, 9), 16) || 1;\n    } else if (fillStyle.startsWith('rgba')) {\n      ([r, g, b, a] = fillStyle.substring(5, fillStyle.length - 1).split(',').map(e => parseFloat(e)));\n    } else {\n      throw new Error(`Unexpected fillStyle color format \"${fillStyle}\" when drawing pattern glyph`);\n    }\n\n    for (let y = 0; y < height; y++) {\n      for (let x = 0; x < width; x++) {\n        imageData.data[(y * width + x) * 4    ] = r;\n        imageData.data[(y * width + x) * 4 + 1] = g;\n        imageData.data[(y * width + x) * 4 + 2] = b;\n        imageData.data[(y * width + x) * 4 + 3] = charDefinition[y][x] * (a * 255);\n      }\n    }\n    tmpCtx.putImageData(imageData, 0, 0);\n    pattern = throwIfFalsy(ctx.createPattern(tmpCanvas, null));\n    patternSet.set(fillStyle, pattern);\n  }\n  ctx.fillStyle = pattern;\n  ctx.fillRect(xOffset, yOffset, scaledCellWidth, scaledCellHeight);\n}\n\n/**\n * Draws the following box drawing characters by mapping a subset of SVG d attribute instructions to\n * canvas draw calls.\n *\n * Box styles:       ┎┰┒┍┯┑╓╥╖╒╤╕ ┏┳┓┌┲┓┌┬┐┏┱┐\n * ┌─┬─┐ ┏━┳━┓ ╔═╦═╗ ┠╂┨┝┿┥╟╫╢╞╪╡ ┡╇┩├╊┫┢╈┪┣╉┤\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┖┸┚┕┷┙╙╨╜╘╧╛ └┴┘└┺┛┗┻┛┗┹┘\n * ├─┼─┤ ┣━╋━┫ ╠═╬═╣ ┏┱┐┌┲┓┌┬┐┌┬┐ ┏┳┓┌┮┓┌┬┐┏┭┐\n * │ │ │ ┃ ┃ ┃ ║ ║ ║ ┡╃┤├╄┩├╆┪┢╅┤ ┞╀┦├┾┫┟╁┧┣┽┤\n * └─┴─┘ ┗━┻━┛ ╚═╩═╝ └┴┘└┴┘└┺┛┗┹┘ └┴┘└┶┛┗┻┛┗┵┘\n *\n * Other:\n * ╭─╮ ╲ ╱ ╷╻╎╏┆┇┊┋ ╺╾╴ ╌╌╌ ┄┄┄ ┈┈┈\n * │ │  ╳  ╽╿╎╏┆┇┊┋ ╶╼╸ ╍╍╍ ┅┅┅ ┉┉┉\n * ╰─╯ ╱ ╲ ╹╵╎╏┆┇┊┋\n *\n * All box drawing characters:\n * ─ ━ │ ┃ ┄ ┅ ┆ ┇ ┈ ┉ ┊ ┋ ┌ ┍ ┎ ┏\n * ┐ ┑ ┒ ┓ └ ┕ ┖ ┗ ┘ ┙ ┚ ┛ ├ ┝ ┞ ┟\n * ┠ ┡ ┢ ┣ ┤ ┥ ┦ ┧ ┨ ┩ ┪ ┫ ┬ ┭ ┮ ┯\n * ┰ ┱ ┲ ┳ ┴ ┵ ┶ ┷ ┸ ┹ ┺ ┻ ┼ ┽ ┾ ┿\n * ╀ ╁ ╂ ╃ ╄ ╅ ╆ ╇ ╈ ╉ ╊ ╋ ╌ ╍ ╎ ╏\n * ═ ║ ╒ ╓ ╔ ╕ ╖ ╗ ╘ ╙ ╚ ╛ ╜ ╝ ╞ ╟\n * ╠ ╡ ╢ ╣ ╤ ╥ ╦ ╧ ╨ ╩ ╪ ╫ ╬ ╭ ╮ ╯\n * ╰ ╱ ╲ ╳ ╴ ╵ ╶ ╷ ╸ ╹ ╺ ╻ ╼ ╽ ╾ ╿\n *\n * ---\n *\n * Box drawing alignment tests:                                          █\n *                                                                       ▉\n *   ╔══╦══╗  ┌──┬──┐  ╭──┬──╮  ╭──┬──╮  ┏━━┳━━┓  ┎┒┏┑   ╷  ╻ ┏┯┓ ┌┰┐    ▊ ╱╲╱╲╳╳╳\n *   ║┌─╨─┐║  │╔═╧═╗│  │╒═╪═╕│  │╓─╁─╖│  ┃┌─╂─┐┃  ┗╃╄┙  ╶┼╴╺╋╸┠┼┨ ┝╋┥    ▋ ╲╱╲╱╳╳╳\n *   ║│╲ ╱│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╿ │┃  ┍╅╆┓   ╵  ╹ ┗┷┛ └┸┘    ▌ ╱╲╱╲╳╳╳\n *   ╠╡ ╳ ╞╣  ├╢   ╟┤  ├┼─┼─┼┤  ├╫─╂─╫┤  ┣┿╾┼╼┿┫  ┕┛┖┚     ┌┄┄┐ ╎ ┏┅┅┓ ┋ ▍ ╲╱╲╱╳╳╳\n *   ║│╱ ╲│║  │║   ║│  ││ │ ││  │║ ┃ ║│  ┃│ ╽ │┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▎\n *   ║└─╥─┘║  │╚═╤═╝│  │╘═╪═╛│  │╙─╀─╜│  ┃└─╂─┘┃  ░░▒▒▓▓██ ┊  ┆ ╎ ╏  ┇ ┋ ▏\n *   ╚══╩══╝  └──┴──┘  ╰──┴──╯  ╰──┴──╯  ┗━━┻━━┛           └╌╌┘ ╎ ┗╍╍┛ ┋  ▁▂▃▄▅▆▇█\n *\n * Source: https://www.w3.org/2001/06/utf-8-test/UTF-8-demo.html\n */\nfunction drawBoxDrawingChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: { [fontWeight: number]: string | ((xp: number, yp: number) => string) },\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  ctx.strokeStyle = ctx.fillStyle;\n  for (const [fontWeight, instructions] of Object.entries(charDefinition)) {\n    ctx.beginPath();\n    ctx.lineWidth = window.devicePixelRatio * Number.parseInt(fontWeight);\n    let actualInstructions: string;\n    if (typeof instructions === 'function') {\n      const xp = .15;\n      const yp = .15 / scaledCellHeight * scaledCellWidth;\n      actualInstructions = instructions(xp, yp);\n    } else {\n      actualInstructions = instructions;\n    }\n    for (const instruction of actualInstructions.split(' ')) {\n      const type = instruction[0];\n      const f = svgToCanvasInstructionMap[type];\n      if (!f) {\n        console.error(`Could not find drawing instructions for \"${type}\"`);\n        continue;\n      }\n      const args: string[] = instruction.substring(1).split(',');\n      if (!args[0] || !args[1]) {\n        continue;\n      }\n      f(ctx, translateArgs(args, scaledCellWidth, scaledCellHeight, xOffset, yOffset));\n    }\n    ctx.stroke();\n    ctx.closePath();\n  }\n}\n\nfunction drawPowerlineChar(\n  ctx: CanvasRenderingContext2D,\n  charDefinition: IVectorShape,\n  xOffset: number,\n  yOffset: number,\n  scaledCellWidth: number,\n  scaledCellHeight: number\n): void {\n  ctx.beginPath();\n  ctx.lineWidth = window.devicePixelRatio;\n  for (const instruction of charDefinition.d.split(' ')) {\n    const type = instruction[0];\n    const f = svgToCanvasInstructionMap[type];\n    if (!f) {\n      console.error(`Could not find drawing instructions for \"${type}\"`);\n      continue;\n    }\n    const args: string[] = instruction.substring(1).split(',');\n    if (!args[0] || !args[1]) {\n      continue;\n    }\n    f(ctx, translateArgs(args, scaledCellWidth, scaledCellHeight, xOffset, yOffset, charDefinition.horizontalPadding));\n  }\n  if (charDefinition.type === VectorType.STROKE) {\n    ctx.strokeStyle = ctx.fillStyle;\n    ctx.stroke();\n  } else {\n    ctx.fill();\n  }\n  ctx.closePath();\n}\n\nfunction clamp(value: number, max: number, min: number = 0): number {\n  return Math.max(Math.min(value, max), min);\n}\n\nconst svgToCanvasInstructionMap: { [index: string]: any } = {\n  'C': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.bezierCurveTo(args[0], args[1], args[2], args[3], args[4], args[5]),\n  'L': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.lineTo(args[0], args[1]),\n  'M': (ctx: CanvasRenderingContext2D, args: number[]) => ctx.moveTo(args[0], args[1])\n};\n\nfunction translateArgs(args: string[], cellWidth: number, cellHeight: number, xOffset: number, yOffset: number, horizontalPadding: number = 0): number[] {\n  const result = args.map(e => parseFloat(e) || parseInt(e));\n\n  if (result.length < 2) {\n    throw new Error('Too few arguments for instruction');\n  }\n\n  for (let x = 0; x < result.length; x += 2) {\n    // Translate from 0-1 to 0-cellWidth\n    result[x] *= cellWidth - (horizontalPadding * 2 * window.devicePixelRatio);\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (result[x] !== 0) {\n      result[x] = clamp(Math.round(result[x] + 0.5) - 0.5, cellWidth, 0);\n    }\n    // Apply the cell's offset (ie. x*cellWidth)\n    result[x] += xOffset + (horizontalPadding * window.devicePixelRatio);\n  }\n\n  for (let y = 1; y < result.length; y += 2) {\n    // Translate from 0-1 to 0-cellHeight\n    result[y] *= cellHeight;\n    // Ensure coordinate doesn't escape cell bounds and round to the nearest 0.5 to ensure a crisp\n    // line at 100% devicePixelRatio\n    if (result[y] !== 0) {\n      result[y] = clamp(Math.round(result[y] + 0.5) - 0.5, cellHeight, 0);\n    }\n    // Apply the cell's offset (ie. x*cellHeight)\n    result[y] += yOffset;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class GridCache<T> {\n  public cache: (T | undefined)[][];\n\n  public constructor() {\n    this.cache = [];\n  }\n\n  public resize(width: number, height: number): void {\n    for (let x = 0; x < width; x++) {\n      if (this.cache.length <= x) {\n        this.cache.push([]);\n      }\n      for (let y = this.cache[x].length; y < height; y++) {\n        this.cache[x].push(undefined);\n      }\n      this.cache[x].length = height;\n    }\n    this.cache.length = width;\n  }\n\n  public clear(): void {\n    for (let x = 0; x < this.cache.length; x++) {\n      for (let y = 0; y < this.cache[x].length; y++) {\n        this.cache[x][y] = undefined;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { is256Color } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent | undefined;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @IDecorationService decorationService: IDecorationService\n  ) {\n    super(container, 'link', zIndex, true, colors, rendererId, bufferService, optionsService, decorationService);\n    linkifier.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    linkifier.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n\n    linkifier2.onShowLinkUnderline(e => this._onShowLinkUnderline(e));\n    linkifier2.onHideLinkUnderline(e => this._onHideLinkUnderline(e));\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = undefined;\n  }\n\n  public reset(): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = undefined;\n    }\n  }\n\n  private _onShowLinkUnderline(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (e.fg && is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[e.fg].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _onHideLinkUnderline(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { TextRenderLayer } from 'browser/renderer/TextRenderLayer';\nimport { SelectionRenderLayer } from 'browser/renderer/SelectionRenderLayer';\nimport { CursorRenderLayer } from 'browser/renderer/CursorRenderLayer';\nimport { IRenderLayer, IRenderer, IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { LinkRenderLayer } from 'browser/renderer/LinkRenderLayer';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService, IInstantiationService } from 'common/services/Services';\nimport { removeTerminalFromCache } from 'browser/renderer/atlas/CharAtlasCache';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nlet nextRendererId = 1;\n\nexport class Renderer extends Disposable implements IRenderer {\n  private _id = nextRendererId++;\n\n  private _renderLayers: IRenderLayer[];\n  private _devicePixelRatio: number;\n\n  public dimensions: IRenderDimensions;\n\n  private _onRequestRedraw = new EventEmitter<IRequestRedrawEvent>();\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return this._onRequestRedraw.event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _screenElement: HTMLElement,\n    linkifier: ILinkifier,\n    linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    const allowTransparency = this._optionsService.rawOptions.allowTransparency;\n    this._renderLayers = [\n      instantiationService.createInstance(TextRenderLayer, this._screenElement, 0, this._colors, allowTransparency, this._id),\n      instantiationService.createInstance(SelectionRenderLayer, this._screenElement, 1, this._colors, this._id),\n      instantiationService.createInstance(LinkRenderLayer, this._screenElement, 2, this._colors, this._id, linkifier, linkifier2),\n      instantiationService.createInstance(CursorRenderLayer, this._screenElement, 3, this._colors, this._id, this._onRequestRedraw)\n    ];\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._devicePixelRatio = window.devicePixelRatio;\n    this._updateDimensions();\n    this.onOptionsChanged();\n  }\n\n  public dispose(): void {\n    for (const l of this._renderLayers) {\n      l.dispose();\n    }\n    super.dispose();\n    removeTerminalFromCache(this._id);\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== window.devicePixelRatio) {\n      this._devicePixelRatio = window.devicePixelRatio;\n      this.onResize(this._bufferService.cols, this._bufferService.rows);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    // Clear layers and force a full render\n    for (const l of this._renderLayers) {\n      l.setColors(this._colors);\n      l.reset();\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    // Resize all render layers\n    for (const l of this._renderLayers) {\n      l.resize(this.dimensions);\n    }\n\n    // Resize the screen\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public onCharSizeChanged(): void {\n    this.onResize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public onBlur(): void {\n    this._runOperation(l => l.onBlur());\n  }\n\n  public onFocus(): void {\n    this._runOperation(l => l.onFocus());\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean = false): void {\n    this._runOperation(l => l.onSelectionChanged(start, end, columnSelectMode));\n    // Selection foreground requires a full re-render\n    if (this._colors.selectionForeground) {\n      this._onRequestRedraw.fire({ start: 0, end: this._bufferService.rows - 1 });\n    }\n  }\n\n  public onCursorMove(): void {\n    this._runOperation(l => l.onCursorMove());\n  }\n\n  public onOptionsChanged(): void {\n    this._runOperation(l => l.onOptionsChanged());\n  }\n\n  public clear(): void {\n    this._runOperation(l => l.reset());\n  }\n\n  private _runOperation(operation: (layer: IRenderLayer) => void): void {\n    for (const l of this._renderLayers) {\n      operation(l);\n    }\n  }\n\n  /**\n   * Performs the refresh loop callback, calling refresh only if a refresh is\n   * necessary before queueing up the next one.\n   */\n  public renderRows(start: number, end: number): void {\n    for (const l of this._renderLayers) {\n      l.onGridChanged(start, end);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    for (const layer of this._renderLayers) {\n      layer.clearTextureAtlas();\n    }\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    if (!this._charSizeService.hasValidSize) {\n      return;\n    }\n\n    // Calculate the scaled character width. Width is floored as it must be\n    // drawn to an integer grid in order for the CharAtlas \"stamps\" to not be\n    // blurry. When text is drawn to the grid not using the CharAtlas, it is\n    // clipped to ensure there is no overlap with the next cell.\n    this.dimensions.scaledCharWidth = Math.floor(this._charSizeService.width * window.devicePixelRatio);\n\n    // Calculate the scaled character height. Height is ceiled in case\n    // devicePixelRatio is a floating point number in order to ensure there is\n    // enough space to draw the character to the cell.\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n\n    // Calculate the scaled cell height, if lineHeight is not 1 then the value\n    // will be floored because since lineHeight can never be lower then 1, there\n    // is a guarentee that the scaled line height will always be larger than\n    // scaled char height.\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.rawOptions.lineHeight);\n\n    // Calculate the y coordinate within a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharTop = this._optionsService.rawOptions.lineHeight === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n\n    // Calculate the scaled cell width, taking the letterSpacing into account.\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.rawOptions.letterSpacing);\n\n    // Calculate the x coordinate with a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharLeft = Math.floor(this._optionsService.rawOptions.letterSpacing / 2);\n\n    // Recalculate the canvas dimensions; scaled* define the actual number of\n    // pixel in the canvas\n    this.dimensions.scaledCanvasHeight = this._bufferService.rows * this.dimensions.scaledCellHeight;\n    this.dimensions.scaledCanvasWidth = this._bufferService.cols * this.dimensions.scaledCellWidth;\n\n    // The the size of the canvas on the page. It's very important that this\n    // rounds to nearest integer and not ceils as browsers often set\n    // window.devicePixelRatio as something like 1.100000023841858, when it's\n    // actually 1.1. Ceiling causes blurriness as the backing canvas image is 1\n    // pixel too large for the canvas element size.\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n\n    // Get the _actual_ dimensions of an individual cell. This needs to be\n    // derived from the canvasWidth/Height calculated above which takes into\n    // account window.devicePixelRatio. ICharSizeService.width/height by itself\n    // is insufficient when the page is not at 100% zoom level as it's measured\n    // in CSS pixels, but the actual char size on the canvas can differ.\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <=  0xE0D6;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return (0x2500 <= codepoint && codepoint <= 0x259F);\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start?: [number, number];\n  end?: [number, number];\n  columnSelectMode?: boolean;\n  ydisp?: number;\n}\n\nexport class SelectionRenderLayer extends BaseRenderLayer {\n  private _state!: ISelectionState;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @IDecorationService decorationService: IDecorationService\n  ) {\n    super(container, 'selection', zIndex, true, colors, rendererId, bufferService, optionsService, decorationService);\n    this._clearState();\n  }\n\n  private _clearState(): void {\n    this._state = {\n      start: undefined,\n      end: undefined,\n      columnSelectMode: undefined,\n      ydisp: undefined\n    };\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._clearState();\n  }\n\n  public reset(): void {\n    if (this._state.start && this._state.end) {\n      this._clearState();\n      this._clearAll();\n    }\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    super.onSelectionChanged(start, end, columnSelectMode);\n\n    // Selection has not changed\n    if (!this._didStateChange(start, end, columnSelectMode, this._bufferService.buffer.ydisp)) {\n      return;\n    }\n\n    // Remove all selections\n    this._clearAll();\n\n    // Selection does not exist\n    if (!start || !end) {\n      this._clearState();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      this._state.ydisp = this._bufferService.buffer.ydisp;\n      return;\n    }\n\n    this._ctx.fillStyle = this._colors.selectionTransparent.css;\n\n    if (columnSelectMode) {\n      const startCol = start[0];\n      const width = end[0] - startCol;\n      const height = viewportCappedEndRow - viewportCappedStartRow + 1;\n      this._fillCells(startCol, viewportCappedStartRow, width, height);\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const startRowEndCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      this._fillCells(startCol, viewportCappedStartRow, startRowEndCol - startCol, 1);\n\n      // Draw middle rows\n      const middleRowsCount = Math.max(viewportCappedEndRow - viewportCappedStartRow - 1, 0);\n      this._fillCells(0, viewportCappedStartRow + 1, this._bufferService.cols, middleRowsCount);\n\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewportStartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        this._fillCells(0, viewportCappedEndRow, endCol, 1);\n      }\n    }\n\n    // Save state for next render\n    this._state.start = [start[0], start[1]];\n    this._state.end = [end[0], end[1]];\n    this._state.columnSelectMode = columnSelectMode;\n    this._state.ydisp = this._bufferService.buffer.ydisp;\n  }\n\n  private _didStateChange(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean, ydisp: number): boolean {\n    return !this._areCoordinatesEqual(start, this._state.start) ||\n      !this._areCoordinatesEqual(end, this._state.end) ||\n      columnSelectMode !== this._state.columnSelectMode ||\n      ydisp !== this._state.ydisp;\n  }\n\n  private _areCoordinatesEqual(coord1: [number, number] | undefined, coord2: [number, number] | undefined): boolean {\n    if (!coord1 || !coord2) {\n      return false;\n    }\n\n    return coord1[0] === coord2[0] && coord1[1] === coord2[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { CharData, ICellData } from 'common/Types';\nimport { GridCache } from 'browser/renderer/GridCache';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { NULL_CELL_CODE, Content } from 'common/buffer/Constants';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService, IBufferService, IDecorationService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\n\n/**\n * This CharData looks like a null character, which will forc a clear and render\n * when the character changes (a regular space ' ' character may not as it's\n * drawn state is a cleared cell).\n */\n// const OVERLAP_OWNED_CHAR_DATA: CharData = [null, '', 0, -1];\n\nexport class TextRenderLayer extends BaseRenderLayer {\n  private _state: GridCache<CharData>;\n  private _characterWidth: number = 0;\n  private _characterFont: string = '';\n  private _characterOverlapCache: { [key: string]: boolean } = {};\n  private _workCell = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    alpha: boolean,\n    rendererId: number,\n    @IBufferService bufferService: IBufferService,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IDecorationService decorationService: IDecorationService\n  ) {\n    super(container, 'text', zIndex, alpha, colors, rendererId, bufferService, optionsService, decorationService);\n    this._state = new GridCache<CharData>();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n\n    // Clear the character width cache if the font or width has changed\n    const terminalFont = this._getFont(false, false);\n    if (this._characterWidth !== dim.scaledCharWidth || this._characterFont !== terminalFont) {\n      this._characterWidth = dim.scaledCharWidth;\n      this._characterFont = terminalFont;\n      this._characterOverlapCache = {};\n    }\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state.clear();\n    this._state.resize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public reset(): void {\n    this._state.clear();\n    this._clearAll();\n  }\n\n  private _forEachCell(\n    firstRow: number,\n    lastRow: number,\n    callback: (\n      cell: ICellData,\n      x: number,\n      y: number\n    ) => void\n  ): void {\n    for (let y = firstRow; y <= lastRow; y++) {\n      const row = y + this._bufferService.buffer.ydisp;\n      const line = this._bufferService.buffer.lines.get(row);\n      const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n      for (let x = 0; x < this._bufferService.cols; x++) {\n        line!.loadCell(x, this._workCell);\n        let cell = this._workCell;\n\n        // If true, indicates that the current character(s) to draw were joined.\n        let isJoined = false;\n        let lastCharX = x;\n\n        // The character to the left is a wide character, drawing is owned by\n        // the char at x-1\n        if (cell.getWidth() === 0) {\n          continue;\n        }\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          const range = joinedRanges.shift()!;\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly\n          cell = new JoinedCellData(\n            this._workCell,\n            line!.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        // If the character is an overlapping char and the character to the\n        // right is a space, take ownership of the cell to the right. We skip\n        // this check for joined characters because their rendering likely won't\n        // yield the same result as rendering the last character individually.\n        if (!isJoined && this._isOverlapping(cell)) {\n          // If the character is overlapping, we want to force a re-render on every\n          // frame. This is specifically to work around the case where two\n          // overlaping chars `a` and `b` are adjacent, the cursor is moved to b and a\n          // space is added. Without this, the first half of `b` would never\n          // get removed, and `a` would not re-render because it thinks it's\n          // already in the correct state.\n          // this._state.cache[x][y] = OVERLAP_OWNED_CHAR_DATA;\n          if (lastCharX < line!.length - 1 && line!.getCodePoint(lastCharX + 1) === NULL_CELL_CODE) {\n            // patch width to 2\n            cell.content &= ~Content.WIDTH_MASK;\n            cell.content |= 2 << Content.WIDTH_SHIFT;\n            // this._clearChar(x + 1, y);\n            // The overlapping char's char data will force a clear and render when the\n            // overlapping char is no longer to the left of the character and also when\n            // the space changes to another character.\n            // this._state.cache[x + 1][y] = OVERLAP_OWNED_CHAR_DATA;\n          }\n        }\n\n        callback(\n          cell,\n          x,\n          y\n        );\n\n        x = lastCharX;\n      }\n    }\n  }\n\n  /**\n   * Draws the background for a specified range of columns. Tries to batch adjacent cells of the\n   * same color together to reduce draw calls.\n   */\n  private _drawBackground(firstRow: number, lastRow: number): void {\n    const ctx = this._ctx;\n    const cols = this._bufferService.cols;\n    let startX: number = 0;\n    let startY: number = 0;\n    let prevFillStyle: string | null = null;\n\n    ctx.save();\n\n    this._forEachCell(firstRow, lastRow, (cell, x, y) => {\n      // libvte and xterm both draw the background (but not foreground) of invisible characters,\n      // so we should too.\n      let nextFillStyle = null; // null represents default background color\n\n      if (cell.isInverse()) {\n        if (cell.isFgDefault()) {\n          nextFillStyle = this._colors.foreground.css;\n        } else if (cell.isFgRGB()) {\n          nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n        } else {\n          nextFillStyle = this._colors.ansi[cell.getFgColor()].css;\n        }\n      } else if (cell.isBgRGB()) {\n        nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else if (cell.isBgPalette()) {\n        nextFillStyle = this._colors.ansi[cell.getBgColor()].css;\n      }\n\n      // Get any decoration foreground/background overrides, this must be fetched before the early\n      // exist but applied after inverse\n      let isTop = false;\n      for (const d of this._decorationService.getDecorationsAtCell(x, this._bufferService.buffer.ydisp + y)) {\n        if (d.options.layer !== 'top' && isTop) {\n          continue;\n        }\n        if (d.backgroundColorRGB) {\n          nextFillStyle = d.backgroundColorRGB.css;\n        }\n        isTop = d.options.layer === 'top';\n      }\n\n      if (prevFillStyle === null) {\n        // This is either the first iteration, or the default background was set. Either way, we\n        // don't need to draw anything.\n        startX = x;\n        startY = y;\n      }\n\n      if (y !== startY) {\n        // our row changed, draw the previous row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, cols - startX, 1);\n        startX = x;\n        startY = y;\n      } else if (prevFillStyle !== nextFillStyle) {\n        // our color changed, draw the previous characters in this row\n        ctx.fillStyle = prevFillStyle || '';\n        this._fillCells(startX, startY, x - startX, 1);\n        startX = x;\n        startY = y;\n      }\n\n      prevFillStyle = nextFillStyle;\n    });\n\n    // flush the last color we encountered\n    if (prevFillStyle !== null) {\n      ctx.fillStyle = prevFillStyle;\n      this._fillCells(startX, startY, cols - startX, 1);\n    }\n\n    ctx.restore();\n  }\n\n  private _drawForeground(firstRow: number, lastRow: number): void {\n    this._forEachCell(firstRow, lastRow, (cell, x, y) => {\n      if (cell.isInvisible()) {\n        return;\n      }\n      this._drawChars(cell, x, y);\n      if (cell.isUnderline() || cell.isStrikethrough()) {\n        this._ctx.save();\n\n        if (cell.isInverse()) {\n          if (cell.isBgDefault()) {\n            this._ctx.fillStyle = this._colors.background.css;\n          } else if (cell.isBgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n          } else {\n            let bg = cell.getBgColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && bg < 8) {\n              bg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[bg].css;\n          }\n        } else {\n          if (cell.isFgDefault()) {\n            this._ctx.fillStyle = this._colors.foreground.css;\n          } else if (cell.isFgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n          } else {\n            let fg = cell.getFgColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[fg].css;\n          }\n        }\n\n        if (cell.isStrikethrough()) {\n          this._fillMiddleLineAtCells(x, y, cell.getWidth());\n        }\n        if (cell.isUnderline()) {\n          this._fillBottomLineAtCells(x, y, cell.getWidth());\n        }\n        this._ctx.restore();\n      }\n    });\n  }\n\n  public onGridChanged(firstRow: number, lastRow: number): void {\n    // Resize has not been called yet\n    if (this._state.cache.length === 0) {\n      return;\n    }\n\n    if (this._charAtlas) {\n      this._charAtlas.beginFrame();\n    }\n\n    this._clearCells(0, firstRow, this._bufferService.cols, lastRow - firstRow + 1);\n    this._drawBackground(firstRow, lastRow);\n    this._drawForeground(firstRow, lastRow);\n  }\n\n  public onOptionsChanged(): void {\n    this._setTransparency(this._optionsService.rawOptions.allowTransparency);\n  }\n\n  /**\n   * Whether a character is overlapping to the next cell.\n   */\n  private _isOverlapping(cell: ICellData): boolean {\n    // Only single cell characters can be overlapping, rendering issues can\n    // occur without this check\n    if (cell.getWidth() !== 1) {\n      return false;\n    }\n\n    // We assume that any ascii character will not overlap\n    if (cell.getCode() < 256) {\n      return false;\n    }\n\n    const chars = cell.getChars();\n\n    // Deliver from cache if available\n    if (this._characterOverlapCache.hasOwnProperty(chars)) {\n      return this._characterOverlapCache[chars];\n    }\n\n    // Setup the font\n    this._ctx.save();\n    this._ctx.font = this._characterFont;\n\n    // Measure the width of the character, but Math.floor it\n    // because that is what the renderer does when it calculates\n    // the character dimensions we are comparing against\n    const overlaps = Math.floor(this._ctx.measureText(chars).width) > this._characterWidth;\n\n    // Restore the original context\n    this._ctx.restore();\n\n    // Cache and return\n    this._characterOverlapCache[chars] = overlaps;\n    return overlaps;\n  }\n\n  /**\n   * Clear the charcater at the cell specified.\n   * @param x The column of the char.\n   * @param y The row of the char.\n   */\n  // private _clearChar(x: number, y: number): void {\n  //   let colsToClear = 1;\n  //   // Clear the adjacent character if it was wide\n  //   const state = this._state.cache[x][y];\n  //   if (state && state[CHAR_DATA_WIDTH_INDEX] === 2) {\n  //     colsToClear = 2;\n  //   }\n  //   this.clearCells(x, y, colsToClear, 1);\n  // }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { IDisposable } from 'common/Types';\n\nexport abstract class BaseCharAtlas implements IDisposable {\n  private _didWarmUp: boolean = false;\n\n  public dispose(): void { }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. May be called multiple times.\n   * Implement _doWarmUp instead if you only want to get called once.\n   */\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. Used by the default\n   * implementation of warmUp(), and will only be called once.\n   */\n  private _doWarmUp(): void { }\n\n  public clear(): void { }\n\n  /**\n   * Called when we start drawing a new frame.\n   *\n   * TODO: We rely on this getting called by TextRenderLayer. This should really be called by\n   * Renderer instead, but we need to make Renderer the source-of-truth for the char atlas, instead\n   * of BaseRenderLayer.\n   */\n  public beginFrame(): void { }\n\n  /**\n   * May be called before warmUp finishes, however it is okay for the implementation to\n   * do nothing and return false in that case.\n   *\n   * @param ctx Where to draw the character onto.\n   * @param glyph Information about what to draw\n   * @param x The position on the context to start drawing at\n   * @param y The position on the context to start drawing at\n   * @returns The success state. True if we drew the character.\n   */\n  public abstract draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { generateConfig, configEquals } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DynamicCharAtlas } from 'browser/renderer/atlas/DynamicCharAtlas';\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\ninterface ICharAtlasCacheEntry {\n  atlas: BaseCharAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: number[];\n}\n\nconst charAtlasCache: ICharAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n */\nexport function acquireCharAtlas(\n  options: ITerminalOptions,\n  rendererId: number,\n  colors: IColorSet,\n  scaledCharWidth: number,\n  scaledCharHeight: number\n): BaseCharAtlas {\n  const newConfig = generateConfig(scaledCharWidth, scaledCharHeight, options, colors);\n\n  // Check to see if the renderer already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(rendererId);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the renderer from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the renderer to the cache entry and return\n      entry.ownedBy.push(rendererId);\n      return entry.atlas;\n    }\n  }\n\n  const newEntry: ICharAtlasCacheEntry = {\n    atlas: new DynamicCharAtlas(\n      document,\n      newConfig\n    ),\n    config: newConfig,\n    ownedBy: [rendererId]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n */\nexport function removeTerminalFromCache(rendererId: number): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(rendererId);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only renderer\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { DEFAULT_COLOR } from 'common/buffer/Constants';\nimport { IColorSet, IPartialColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\nexport function generateConfig(scaledCharWidth: number, scaledCharHeight: number, options: ITerminalOptions, colors: IColorSet): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors: IPartialColorSet = {\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: undefined,\n    cursorAccent: undefined,\n    selection: undefined,\n    ansi: colors.ansi.slice()\n  };\n  return {\n    devicePixelRatio: window.devicePixelRatio,\n    scaledCharWidth,\n    scaledCharHeight,\n    fontFamily: options.fontFamily,\n    fontSize: options.fontSize,\n    fontWeight: options.fontWeight,\n    fontWeightBold: options.fontWeightBold,\n    allowTransparency: options.allowTransparency,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.scaledCharWidth === b.scaledCharWidth &&\n      a.scaledCharHeight === b.scaledCharHeight &&\n      a.colors.foreground === b.colors.foreground &&\n      a.colors.background === b.colors.background;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return colorCode < DEFAULT_COLOR;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge would\n// result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n\nexport const CHAR_ATLAS_CELL_SPACING = 1;\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR, TEXT_BASELINE } from 'browser/renderer/atlas/Constants';\nimport { IGlyphIdentifier, ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DEFAULT_ANSI_COLORS } from 'browser/ColorManager';\nimport { LRUMap } from 'browser/renderer/atlas/LRUMap';\nimport { isFirefox, isSafari } from 'common/Platform';\nimport { IColor } from 'common/Types';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\nimport { color } from 'common/Color';\n\n// In practice we're probably never going to exhaust a texture this large. For debugging purposes,\n// however, it can be useful to set this to a really tiny value, to verify that LRU eviction works.\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 1024;\n\nconst TRANSPARENT_COLOR = {\n  css: 'rgba(0, 0, 0, 0)',\n  rgba: 0\n};\n\n// Drawing to the cache is expensive: If we have to draw more than this number of glyphs to the\n// cache in a single frame, give up on trying to cache anything else, and try to finish the current\n// frame ASAP.\n//\n// This helps to limit the amount of damage a program can do when it would otherwise thrash the\n// cache.\nconst FRAME_CACHE_DRAW_LIMIT = 100;\n\n/**\n * The number of milliseconds to wait before generating the ImageBitmap, this is to debounce/batch\n * the operation as window.createImageBitmap is asynchronous.\n */\nconst GLYPH_BITMAP_COMMIT_DELAY = 100;\n\ninterface IGlyphCacheValue {\n  index: number;\n  isEmpty: boolean;\n  inBitmap: boolean;\n}\n\nexport function getGlyphCacheKey(glyph: IGlyphIdentifier): number {\n  // Note that this only returns a valid key when code < 256\n  // Layout:\n  // 0b00000000000000000000000000000001: italic (1)\n  // 0b00000000000000000000000000000010: dim (1)\n  // 0b00000000000000000000000000000100: bold (1)\n  // 0b00000000000000000000111111111000: fg (9)\n  // 0b00000000000111111111000000000000: bg (9)\n  // 0b00011111111000000000000000000000: code (8)\n  // 0b11100000000000000000000000000000: unused (3)\n  return glyph.code << 21 | glyph.bg << 12 | glyph.fg << 3 | (glyph.bold ? 0 : 4) + (glyph.dim ? 0 : 2) + (glyph.italic ? 0 : 1);\n}\n\nexport class DynamicCharAtlas extends BaseCharAtlas {\n  // An ordered map that we're using to keep track of where each glyph is in the atlas texture.\n  // It's ordered so that we can determine when to remove the old entries.\n  private _cacheMap: LRUMap<IGlyphCacheValue>;\n\n  // The texture that the atlas is drawn to\n  private _cacheCanvas: HTMLCanvasElement;\n  private _cacheCtx: CanvasRenderingContext2D;\n\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  // The number of characters stored in the atlas by width/height\n  private _width: number;\n  private _height: number;\n\n  private _drawToCacheCount: number = 0;\n\n  // An array of glyph keys that are waiting on the bitmap to be generated.\n  private _glyphsWaitingOnBitmap: IGlyphCacheValue[] = [];\n\n  // The timeout that is used to batch bitmap generation so it's not requested for every new glyph.\n  private _bitmapCommitTimeout: number | null = null;\n\n  // The bitmap to draw from, this is much faster on other browsers than others.\n  private _bitmap: ImageBitmap | null = null;\n\n  constructor(document: Document, private _config: ICharAtlasConfig) {\n    super();\n    this._cacheCanvas = document.createElement('canvas');\n    this._cacheCanvas.width = TEXTURE_WIDTH;\n    this._cacheCanvas.height = TEXTURE_HEIGHT;\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this._cacheCtx = throwIfFalsy(this._cacheCanvas.getContext('2d', { alpha: true }));\n\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = this._config.scaledCharWidth;\n    tmpCanvas.height = this._config.scaledCharHeight;\n    this._tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d', { alpha: this._config.allowTransparency }));\n\n    this._width = Math.floor(TEXTURE_WIDTH / this._config.scaledCharWidth);\n    this._height = Math.floor(TEXTURE_HEIGHT / this._config.scaledCharHeight);\n    const capacity = this._width * this._height;\n    this._cacheMap = new LRUMap(capacity);\n    this._cacheMap.prealloc(capacity);\n\n    // This is useful for debugging\n    // document.body.appendChild(this._cacheCanvas);\n  }\n\n  public dispose(): void {\n    if (this._bitmapCommitTimeout !== null) {\n      window.clearTimeout(this._bitmapCommitTimeout);\n      this._bitmapCommitTimeout = null;\n    }\n  }\n\n  public beginFrame(): void {\n    this._drawToCacheCount = 0;\n  }\n\n  public clear(): void {\n    if (this._cacheMap.size > 0) {\n      const capacity = this._width * this._height;\n      this._cacheMap = new LRUMap(capacity);\n      this._cacheMap.prealloc(capacity);\n    }\n    this._cacheCtx.clearRect(0, 0, TEXTURE_WIDTH, TEXTURE_HEIGHT);\n    this._tmpCtx.clearRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    // Space is always an empty cell, special case this as it's so common\n    if (glyph.code === 32) {\n      return true;\n    }\n\n    // Exit early for uncachable glyphs\n    if (!this._canCache(glyph)) {\n      return false;\n    }\n\n    const glyphKey = getGlyphCacheKey(glyph);\n    const cacheValue = this._cacheMap.get(glyphKey);\n    if (cacheValue !== null && cacheValue !== undefined) {\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    if (this._drawToCacheCount < FRAME_CACHE_DRAW_LIMIT) {\n      let index;\n      if (this._cacheMap.size < this._cacheMap.capacity) {\n        index = this._cacheMap.size;\n      } else {\n        // we're out of space, so our call to set will delete this item\n        index = this._cacheMap.peek()!.index;\n      }\n      const cacheValue = this._drawToCache(glyph, index);\n      this._cacheMap.set(glyphKey, cacheValue);\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    return false;\n  }\n\n  private _canCache(glyph: IGlyphIdentifier): boolean {\n    // Only cache ascii and extended characters for now, to be safe. In the future, we could do\n    // something more complicated to determine the expected width of a character.\n    //\n    // If we switch the renderer over to webgl at some point, we may be able to use blending modes\n    // to draw overlapping glyphs from the atlas:\n    // https://github.com/servo/webrender/issues/464#issuecomment-255632875\n    // https://webglfundamentals.org/webgl/lessons/webgl-text-texture.html\n    return glyph.code < 256;\n  }\n\n  private _toCoordinateX(index: number): number {\n    return (index % this._width) * this._config.scaledCharWidth;\n  }\n\n  private _toCoordinateY(index: number): number {\n    return Math.floor(index / this._width) * this._config.scaledCharHeight;\n  }\n\n  private _drawFromCache(\n    ctx: CanvasRenderingContext2D,\n    cacheValue: IGlyphCacheValue,\n    x: number,\n    y: number\n  ): void {\n    // We don't actually need to do anything if this is whitespace.\n    if (cacheValue.isEmpty) {\n      return;\n    }\n    const cacheX = this._toCoordinateX(cacheValue.index);\n    const cacheY = this._toCoordinateY(cacheValue.index);\n    ctx.drawImage(\n      cacheValue.inBitmap ? this._bitmap! : this._cacheCanvas,\n      cacheX,\n      cacheY,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight,\n      x,\n      y,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight\n    );\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx < this._config.colors.ansi.length) {\n      return this._config.colors.ansi[idx];\n    }\n    return DEFAULT_ANSI_COLORS[idx];\n  }\n\n  private _getBackgroundColor(glyph: IGlyphIdentifier): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return TRANSPARENT_COLOR;\n    }\n    if (glyph.bg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.foreground;\n    }\n    if (glyph.bg < 256) {\n      return this._getColorFromAnsiIndex(glyph.bg);\n    }\n    return this._config.colors.background;\n  }\n\n  private _getForegroundColor(glyph: IGlyphIdentifier): IColor {\n    if (glyph.fg === INVERTED_DEFAULT_COLOR) {\n      return color.opaque(this._config.colors.background);\n    }\n    if (glyph.fg < 256) {\n      // 256 color support\n      return this._getColorFromAnsiIndex(glyph.fg);\n    }\n    return this._config.colors.foreground;\n  }\n\n  // TODO: We do this (or something similar) in multiple places. We should split this off\n  // into a shared function.\n  private _drawToCache(glyph: IGlyphIdentifier, index: number): IGlyphCacheValue {\n    this._drawToCacheCount++;\n\n    this._tmpCtx.save();\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(glyph);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = glyph.bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = glyph.italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = TEXT_BASELINE;\n\n    this._tmpCtx.fillStyle = this._getForegroundColor(glyph).css;\n\n    // Apply alpha to dim the character\n    if (glyph.dim) {\n      this._tmpCtx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight);\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    let imageData = this._tmpCtx.getImageData(\n      0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n    );\n    let isEmpty = false;\n    if (!this._config.allowTransparency) {\n      isEmpty = clearColor(imageData, backgroundColor);\n    }\n\n    // If this charcater is underscore and empty, shift it up until it is visible, try for a maximum\n    // of 5 pixels.\n    if (isEmpty && glyph.chars === '_' && !this._config.allowTransparency) {\n      for (let offset = 1; offset <= 5; offset++) {\n        // Draw the character\n        this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight - offset);\n\n        // clear the background from the character to avoid issues with drawing over the previous\n        // character if it extends past it's bounds\n        imageData = this._tmpCtx.getImageData(\n          0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n        );\n        isEmpty = clearColor(imageData, backgroundColor);\n        if (!isEmpty) {\n          break;\n        }\n      }\n    }\n\n    this._tmpCtx.restore();\n\n    // copy the data from imageData to _cacheCanvas\n    const x = this._toCoordinateX(index);\n    const y = this._toCoordinateY(index);\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    this._cacheCtx.putImageData(imageData, x, y);\n\n    // Add the glyph and queue it to the bitmap (if the browser supports it)\n    const cacheValue = {\n      index,\n      isEmpty,\n      inBitmap: false\n    };\n    this._addGlyphToBitmap(cacheValue);\n\n    return cacheValue;\n  }\n\n  private _addGlyphToBitmap(cacheValue: IGlyphCacheValue): void {\n    // Support is patchy for createImageBitmap at the moment, pass a canvas back\n    // if support is lacking as drawImage works there too. Firefox is also\n    // included here as ImageBitmap appears both buggy and has horrible\n    // performance (tested on v55).\n    if (!('createImageBitmap' in window) || isFirefox || isSafari) {\n      return;\n    }\n\n    // Add the glyph to the queue\n    this._glyphsWaitingOnBitmap.push(cacheValue);\n\n    // Check if bitmap generation timeout already exists\n    if (this._bitmapCommitTimeout !== null) {\n      return;\n    }\n\n    this._bitmapCommitTimeout = window.setTimeout(() => this._generateBitmap(), GLYPH_BITMAP_COMMIT_DELAY);\n  }\n\n  private _generateBitmap(): void {\n    const glyphsMovingToBitmap = this._glyphsWaitingOnBitmap;\n    this._glyphsWaitingOnBitmap = [];\n    window.createImageBitmap(this._cacheCanvas).then(bitmap => {\n      // Set bitmap\n      this._bitmap = bitmap;\n\n      // Mark all new glyphs as in bitmap, excluding glyphs that came in after\n      // the bitmap was requested\n      for (let i = 0; i < glyphsMovingToBitmap.length; i++) {\n        const value = glyphsMovingToBitmap[i];\n        // It doesn't matter if the value was already evicted, it will be\n        // released from memory after this block if so.\n        value.inBitmap = true;\n      }\n    });\n    this._bitmapCommitTimeout = null;\n  }\n}\n\n// This is used for debugging the renderer, just swap out `new DynamicCharAtlas` with\n// `new NoneCharAtlas`.\nexport class NoneCharAtlas extends BaseCharAtlas {\n  constructor(document: Document, config: ICharAtlasConfig) {\n    super();\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    return false;\n  }\n}\n\n/**\n * Makes a partiicular rgb color in an ImageData completely transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, color: IColor): boolean {\n  let isEmpty = true;\n  const r = color.rgba >>> 24;\n  const g = color.rgba >>> 16 & 0xFF;\n  const b = color.rgba >>> 8 & 0xFF;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      isEmpty = false;\n    }\n  }\n  return isEmpty;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface ILinkedListNode<T> {\n  prev: ILinkedListNode<T> | null;\n  next: ILinkedListNode<T> | null;\n  key: number | null;\n  value: T | null;\n}\n\nexport class LRUMap<T> {\n  private _map: { [key: number]: ILinkedListNode<T> } = {};\n  private _head: ILinkedListNode<T> | null = null;\n  private _tail: ILinkedListNode<T> | null = null;\n  private _nodePool: ILinkedListNode<T>[] = [];\n  public size: number = 0;\n\n  constructor(public capacity: number) { }\n\n  private _unlinkNode(node: ILinkedListNode<T>): void {\n    const prev = node.prev;\n    const next = node.next;\n    if (node === this._head) {\n      this._head = next;\n    }\n    if (node === this._tail) {\n      this._tail = prev;\n    }\n    if (prev !== null) {\n      prev.next = next;\n    }\n    if (next !== null) {\n      next.prev = prev;\n    }\n  }\n\n  private _appendNode(node: ILinkedListNode<T>): void {\n    const tail = this._tail;\n    if (tail !== null) {\n      tail.next = node;\n    }\n    node.prev = tail;\n    node.next = null;\n    this._tail = node;\n    if (this._head === null) {\n      this._head = node;\n    }\n  }\n\n  /**\n   * Preallocate a bunch of linked-list nodes. Allocating these nodes ahead of time means that\n   * they're more likely to live next to each other in memory, which seems to improve performance.\n   *\n   * Each empty object only consumes about 60 bytes of memory, so this is pretty cheap, even for\n   * large maps.\n   */\n  public prealloc(count: number): void {\n    const nodePool = this._nodePool;\n    for (let i = 0; i < count; i++) {\n      nodePool.push({\n        prev: null,\n        next: null,\n        key: null,\n        value: null\n      });\n    }\n  }\n\n  public get(key: number): T | null {\n    // This is unsafe: We're assuming our keyspace doesn't overlap with Object.prototype. However,\n    // it's faster than calling hasOwnProperty, and in our case, it would never overlap.\n    const node = this._map[key];\n    if (node !== undefined) {\n      this._unlinkNode(node);\n      this._appendNode(node);\n      return node.value;\n    }\n    return null;\n  }\n\n  /**\n   * Gets a value from a key without marking it as the most recently used item.\n   */\n  public peekValue(key: number): T | null {\n    const node = this._map[key];\n    if (node !== undefined) {\n      return node.value;\n    }\n    return null;\n  }\n\n  public peek(): T | null {\n    const head = this._head;\n    return head === null ? null : head.value;\n  }\n\n  public set(key: number, value: T): void {\n    // This is unsafe: See note above.\n    let node = this._map[key];\n    if (node !== undefined) {\n      // already exists, we just need to mutate it and move it to the end of the list\n      node = this._map[key];\n      this._unlinkNode(node);\n      node.value = value;\n    } else if (this.size >= this.capacity) {\n      // we're out of space: recycle the head node, move it to the tail\n      node = this._head!;\n      this._unlinkNode(node);\n      delete this._map[node.key!];\n      node.key = key;\n      node.value = value;\n      this._map[key] = node;\n    } else {\n      // make a new element\n      const nodePool = this._nodePool;\n      if (nodePool.length > 0) {\n        // use a preallocated node if we can\n        node = nodePool.pop()!;\n        node.key = key;\n        node.value = value;\n      } else {\n        node = {\n          prev: null,\n          next: null,\n          key,\n          value\n        };\n      }\n      this._map[key] = node;\n      this.size++;\n    }\n    this._appendNode(node);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, IRequestRedrawEvent } from 'browser/renderer/Types';\nimport { BOLD_CLASS, ITALIC_CLASS, CURSOR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_BLINK_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifierEvent, ILinkifier, ILinkifier2 } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IOptionsService, IBufferService, IInstantiationService, IDecorationService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { color } from 'common/Color';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n\n  public dimensions: IRenderDimensions;\n\n  public get onRequestRedraw(): IEvent<IRequestRedrawEvent> { return new EventEmitter<IRequestRedrawEvent>().event; }\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier: ILinkifier,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = {\n      scaledCharWidth: 0,\n      scaledCharHeight: 0,\n      scaledCellWidth: 0,\n      scaledCellHeight: 0,\n      scaledCharLeft: 0,\n      scaledCharTop: 0,\n      scaledCanvasWidth: 0,\n      scaledCanvasHeight: 0,\n      canvasWidth: 0,\n      canvasHeight: 0,\n      actualCellWidth: 0,\n      actualCellHeight: 0\n    };\n    this._updateDimensions();\n    this._injectCss();\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document, this._colors);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier.onShowLinkUnderline(e => this._onLinkHover(e)));\n    this.register(this._linkifier.onHideLinkUnderline(e => this._onLinkLeave(e)));\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._onLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._onLinkLeave(e)));\n  }\n\n  public dispose(): void {\n    this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n    // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n    // https://github.com/xtermjs/xterm.js/issues/2960\n    removeElementFromParent(this._rowContainer, this._selectionContainer, this._themeStyleElement, this._dimensionsStyleElement);\n\n    super.dispose();\n  }\n\n  private _updateDimensions(): void {\n    this.dimensions.scaledCharWidth = this._charSizeService.width * window.devicePixelRatio;\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.scaledCharLeft = 0;\n    this.dimensions.scaledCharTop = 0;\n    this.dimensions.scaledCanvasWidth = this.dimensions.scaledCellWidth * this._bufferService.cols;\n    this.dimensions.scaledCanvasHeight = this.dimensions.scaledCellHeight * this._bufferService.rows;\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._bufferService.cols;\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.canvasWidth}px`;\n      element.style.height = `${this.dimensions.actualCellHeight}px`;\n      element.style.lineHeight = `${this.dimensions.actualCellHeight}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      ` width: ${this.dimensions.actualCellWidth}px` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    this._injectCss();\n  }\n\n  private _injectCss(): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${this._colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  box-shadow: none;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${this._colors.cursor.css};` +\n      `  color: ${this._colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: ${this._colors.cursorAccent.css};` +\n      `  color: ${this._colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` outline: 1px solid ${this._colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${this._colors.cursor.css};` +\n      ` color: ${this._colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${this._colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` box-shadow: 0 -1px 0 ${this._colors.cursor.css} inset;` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${this._colors.selectionOpaque.css};` +\n      `}`;\n    // Colors\n    this._colors.ansi.forEach((c, i) => {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    });\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(this._colors.background).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${this._colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public onCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public onBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public onFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    this._rowFactory.onSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.actualCellHeight}px`;\n    element.style.top = `${row * this.dimensions.actualCellHeight}px`;\n    element.style.left = `${colStart * this.dimensions.actualCellWidth}px`;\n    element.style.width = `${this.dimensions.actualCellWidth * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public onCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  public onOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    this._injectCss();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      e.innerText = '';\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const cursorAbsoluteY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      rowElement.innerText = '';\n      const row = y + this._bufferService.buffer.ydisp;\n      const lineData = this._bufferService.buffer.lines.get(row);\n      const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n      rowElement.appendChild(this._rowFactory.createRow(lineData!, row, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.actualCellWidth, this._bufferService.cols));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = row.children[x] as HTMLElement;\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'common/Color';\nimport { IColorSet } from 'browser/Types';\nimport { ICharacterJoinerService, ISelectionService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { excludeFromContrastRatioDemands } from 'browser/renderer/RendererUtils';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const STRIKETHROUGH_CLASS = 'xterm-strikethrough';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  constructor(\n    private readonly _document: Document,\n    private _colors: IColorSet,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService\n  ) {\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(lineData: IBufferLine, row: number, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number): DocumentFragment {\n    const fragment = this._document.createDocumentFragment();\n\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isJoined) {\n        // Ligatures in the DOM renderer must use display inline, as they may not show with\n        // inline-block if they are outside the bounds of the element\n        charElement.style.display = 'inline';\n\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (cell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (cell.isUnderline()) {\n        charElement.classList.add(UNDERLINE_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        charElement.textContent = WHITESPACE_CELL_CHAR;\n      } else {\n        charElement.textContent = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isStrikethrough()) {\n        charElement.classList.add(STRIKETHROUGH_CLASS);\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      for (const d of this._decorationService.getDecorationsAtCell(x, row)) {\n        if (d.options.layer !== 'top' && isTop) {\n          continue;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      }\n\n      // Apply selection foreground if applicable\n      const isInSelection = this._isCellInSelection(x, row);\n      if (!isTop) {\n        if (this._colors.selectionForeground && isInSelection) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = this._colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = this._colors.selectionForeground;\n        }\n      }\n\n      // If in the selection, force the element to be above the selection to improve contrast and\n      // support opaque selections\n      if (isInSelection) {\n        bgOverride = this._colors.selectionOpaque;\n        isTop = true;\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        charElement.classList.add(`xterm-decoration-top`);\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = this._colors.ansi[bg];\n          charElement.classList.add(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = rgba.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = this._colors.foreground;\n            charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = this._colors.background;\n          }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, this._colors.ansi[fg], cell, bgOverride, undefined)) {\n            charElement.classList.add(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, this._colors.foreground, cell, bgOverride, undefined)) {\n            if (isInverse) {\n              charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      fragment.appendChild(charElement);\n\n      x = lastCharX;\n    }\n    return fragment;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = this._colors.contrastCache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, this._optionsService.rawOptions.minimumContrastRatio);\n      this._colors.contrastCache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @return Whether a refresh is necessary.\n   */\n  public onTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\n\nexport class CharSizeService implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private _onCharSizeChange = new EventEmitter<void>();\n  public get onCharSizeChange(): IEvent<void> { return this._onCharSizeChange.event; }\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement\n  ) {\n  }\n\n  public get isFocused(): boolean {\n    const docOrShadowRoot = this._textarea.getRootNode ? this._textarea.getRootNode() as Document | ShadowRoot : document;\n    return docOrShadowRoot.activeElement === this._textarea && document.hasFocus();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getRawByteCoords } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.actualCellWidth,\n      this._renderService.dimensions.actualCellHeight,\n      isSelection\n    );\n  }\n\n  public getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined {\n    const coords = this.getCoords(event, element, colCount, rowCount);\n    return getRawByteCoords(coords);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions } from 'browser/renderer/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IRenderDebouncer, IRenderDebouncerWithCallback } from 'browser/Types';\nimport { IOptionsService, IBufferService, IDecorationService } from 'common/services/Services';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private _onDimensionsChange = new EventEmitter<IRenderDimensions>();\n  public get onDimensionsChange(): IEvent<IRenderDimensions> { return this._onDimensionsChange.event; }\n  private _onRenderedViewportChange = new EventEmitter<{ start: number, end: number }>();\n  public get onRenderedViewportChange(): IEvent<{ start: number, end: number }> { return this._onRenderedViewportChange.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onRefreshRequest = new EventEmitter<{ start: number, end: number }>();\n  public get onRefreshRequest(): IEvent<{ start: number, end: number }> { return this._onRefreshRequest.event; }\n\n  public get dimensions(): IRenderDimensions { return this._renderer.dimensions; }\n\n  constructor(\n    private _renderer: IRenderer,\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService\n  ) {\n    super();\n\n    this.register({ dispose: () => this._renderer.dispose() });\n\n    this._renderDebouncer = new RenderDebouncer((start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this._screenDprMonitor.setListener(() => this.onDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.onCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // No need to register this as renderer is explicitly disposed in RenderService.dispose\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(window, 'resize', () => this.onDevicePixelRatioChange()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in window) {\n      const observer = new IntersectionObserver(e => this._onIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _onIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    this._renderer.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.onSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    this._renderer.onOptionsChanged();\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.canvasWidth === this._canvasWidth && this._renderer.dimensions.canvasHeight === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderer?.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._renderer.setColors(colors);\n    this._fullRefresh();\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    this._renderer.onDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._renderer.onResize(cols, rows);\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public onCharSizeChanged(): void {\n    this._renderer.onCharSizeChanged();\n  }\n\n  public onBlur(): void {\n    this._renderer.onBlur();\n  }\n\n  public onFocus(): void {\n    this._renderer.onFocus();\n  }\n\n  public onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer.onSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public onCursorMove(): void {\n    this._renderer.onCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.clear();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IMouseService, ISelectionService, IRenderService } from 'browser/services/Services';\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { Disposable } from 'common/Lifecycle';\nimport { getRangeLength } from 'common/buffer/BufferRange';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public get onLinuxMouseSelection(): IEvent<string> { return this._onLinuxMouseSelection.event; }\n  private _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public get onRequestRedraw(): IEvent<ISelectionRedrawRequestEvent> { return this._onRedrawRequest.event; }\n  private _onSelectionChange = this.register(new EventEmitter<void>());\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public get onRequestScrollLines(): IEvent<ISelectionRequestScrollLinesEvent> { return this._onRequestScrollLines.event; }\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._onMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._onMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._onTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._onBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n  }\n\n  public dispose(): void {\n    this._removeMouseDownListeners();\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _onTrim(amount: number): void {\n    const needsRefresh = this._model.onTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(window, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.canvasHeight;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public onMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._onIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._onSingleClick(event);\n      } else if (event.detail === 2) {\n        this._onDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._onTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _onIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _onSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _onDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _onTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _onMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _onMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.getOption('altClickMovesCursor')) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _onBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._onTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column to the character index on the buffer line, the\n   * latter takes into account wide characters.\n   * @param coords The coordinates to find the 2 index for.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, coords: [number, number]): number {\n    let charIndex = coords[0];\n    for (let i = 0; coords[0] >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && coords[0] !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param char The character to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/Types';\nimport { IColorSet, IRenderDebouncer } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDisposable } from 'common/Types';\nimport { IDecorationOptions, IDecoration } from 'xterm';\nimport { IBufferService } from 'common/services/Services';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  setRenderer(renderer: IRenderer): void;\n  setColors(colors: IColorSet): void;\n  onDevicePixelRatioChange(): void;\n  onResize(cols: number, rows: number): void;\n  // TODO: Is this useful when we have onResize?\n  onCharSizeChanged(): void;\n  onBlur(): void;\n  onFocus(): void;\n  onSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  onCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  onMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ISoundService = createDecorator<ISoundService>('SoundService');\nexport interface ISoundService {\n  serviceBrand: undefined;\n\n  playBellSound(): void;\n}\n\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { ISoundService } from 'browser/services/Services';\n\nexport class SoundService implements ISoundService {\n  public serviceBrand: undefined;\n\n  private static _audioContext: AudioContext;\n\n  public static get audioContext(): AudioContext | null {\n    if (!SoundService._audioContext) {\n      const audioContextCtor: typeof AudioContext = (window as any).AudioContext || (window as any).webkitAudioContext;\n      if (!audioContextCtor) {\n        console.warn('Web Audio API is not supported by this browser. Consider upgrading to the latest version');\n        return null;\n      }\n      SoundService._audioContext = new audioContextCtor();\n    }\n    return SoundService._audioContext;\n  }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n  }\n\n  public playBellSound(): void {\n    const ctx = SoundService.audioContext;\n    if (!ctx) {\n      return;\n    }\n    const bellAudioSource = ctx.createBufferSource();\n    ctx.decodeAudioData(this._base64ToArrayBuffer(this._removeMimeType(this._optionsService.rawOptions.bellSound)), (buffer) => {\n      bellAudioSource.buffer = buffer;\n      bellAudioSource.connect(ctx.destination);\n      bellAudioSource.start(0);\n    });\n  }\n\n  private _base64ToArrayBuffer(base64: string): ArrayBuffer {\n    const binaryString = window.atob(base64);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n\n    return bytes.buffer;\n  }\n\n  private _removeMimeType(dataURI: string): string {\n    // Split the input to get the mime-type and the data itself\n    const splitUri = dataURI.split(',');\n\n    // Return only the data\n    return splitUri[1];\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public onDeleteEmitter = new EventEmitter<IDeleteEvent>();\n  public get onDelete(): IEvent<IDeleteEvent> { return this.onDeleteEmitter.event; }\n  public onInsertEmitter = new EventEmitter<IInsertEvent>();\n  public get onInsert(): IEvent<IInsertEvent> { return this.onInsertEmitter.event; }\n  public onTrimEmitter = new EventEmitter<number>();\n  public get onTrim(): IEvent<number> { return this.onTrimEmitter.event; }\n\n  constructor(\n    private _maxLength: number\n  ) {\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @return The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @return The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColor, IColorRGB } from 'common/Types';\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    const a = (fg.rgba & 0xFF) / 255;\n    if (a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    const r = bgR + Math.round((fgR - bgR) * a);\n    const g = bgG + Math.round((fgG - bgG) * a);\n    const b = bgB + Math.round((fgB - bgB) * a);\n    const css = channels.toCss(r, g, b);\n    const rgba = channels.toRgba(r, g, b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    const [r, g, b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss(r, g, b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    const a = Math.round(opacity * 0xFF);\n    const [r, g, b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  export function toColor(css: string): IColor {\n    if (css.match(/#[0-9a-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          const r = parseInt(css.slice(1, 2).repeat(2), 16);\n          const g = parseInt(css.slice(2, 3).repeat(2), 16);\n          const b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor(r, g, b);\n        }\n        case 5: { // #rgba\n          const r = parseInt(css.slice(1, 2).repeat(2), 16);\n          const g = parseInt(css.slice(2, 3).repeat(2), 16);\n          const b = parseInt(css.slice(3, 4).repeat(2), 16);\n          const a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor(r, g, b, a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) { // rgb() or rgba()\n      const r = parseInt(rgbaMatch[1]);\n      const g = parseInt(rgbaMatch[2]);\n      const b = parseInt(rgbaMatch[3]);\n      const a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor(r, g, b, a);\n    }\n    throw new Error('css.toColor: Unsupported css format');\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, bgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, bgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n","/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, IDirtyRowService, LogLevelEnum, ITerminalOptions } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IBufferLine, IAttributeData, ICoreTerminal, IKeyboardEvent, IScrollEvent, ScrollSource, ITerminalOptions as IPublicTerminalOptions } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { DirtyRowService } from 'common/services/DirtyRowService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _dirtyRowService: IDirtyRowService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsMode: IDisposable | undefined;\n\n  private _onBinary = new EventEmitter<string>();\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  protected _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  protected _onScroll = new EventEmitter<IScrollEvent, void>();\n  public get onWriteParsed(): IEvent<void> { return this._onWriteParsed.event; }\n  protected _onWriteParsed = new EventEmitter<void>();\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = new EventEmitter<number, void>();\n      this.register(this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      }));\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): ITerminalOptions { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = new OptionsService(options);\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this._instantiationService.createInstance(LogService);\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService, () => this.scrollToBottom()));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this._instantiationService.createInstance(CoreMouseService);\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this._dirtyRowService = this._instantiationService.createInstance(DirtyRowService);\n    this._instantiationService.setService(IDirtyRowService, this._dirtyRowService);\n    this.unicodeService = this._instantiationService.createInstance(UnicodeService);\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = new InputHandler(this._bufferService, this._charsetService, this.coreService, this._dirtyRowService, this._logService, this.optionsService, this.coreMouseService, this.unicodeService);\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.optionsService.onOptionChange(key => this._updateOptions(key)));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._dirtyRowService.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._dirtyRowService.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    this._windowsMode?.dispose();\n    this._windowsMode = undefined;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this._bufferService.scrollPages(pageCount);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this._bufferService.scrollToTop();\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this._bufferService.scrollToBottom();\n  }\n\n  public scrollToLine(line: number): void {\n    this._bufferService.scrollToLine(line);\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    if (this.optionsService.rawOptions.windowsMode) {\n      this._enableWindowsMode();\n    }\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n  protected _updateOptions(key: string): void {\n    // TODO: These listeners should be owned by individual components\n    switch (key) {\n      case 'scrollback':\n        this.buffers.resize(this.cols, this.rows);\n        break;\n      case 'windowsMode':\n        if (this.optionsService.rawOptions.windowsMode) {\n          this._enableWindowsMode();\n        } else {\n          this._windowsMode?.dispose();\n          this._windowsMode = undefined;\n        }\n        break;\n    }\n  }\n\n  protected _enableWindowsMode(): void {\n    if (!this._windowsMode) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsMode = {\n        dispose: () => {\n          for (const d of disposables) {\n            d.dispose();\n          }\n        }\n      };\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { concat } from 'common/TypedArrayUtils';\nimport { StringToUtf32, stringFromCodePoint, utf32ToString, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, IDirtyRowService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document common VT features here that are currently unsupported\n */\n// @vt: #N   DCS   SIXEL   \"SIXEL Graphics\"  \"DCS Ps ; Ps ; Ps ; q \tPt ST\"   \"Draw SIXEL image starting at cursor position.\"\n// @vt: #N   OSC    1   \"Set Icon Name\"  \"OSC 1 ; Pt BEL\"  \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n/**\n * DCS subparser implementations\n */\n\n/**\n * DCS $ q Pt ST\n *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n *   Request Status String (DECRQSS), VT420 and up.\n *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n *\n * @vt: #P[See limited support below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the corresponding CSI string,\n * `ESC P 0 ST` for invalid requests.\n *\n * Supported requests and responses:\n *\n * | Type                             | Request           | Response (`Pt`)                                       |\n * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | always reporting `0 \" q` (DECSCA is unsupported)      |\n * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n *\n *\n * TODO:\n * - fix SGR report\n * - either implement DECSCA or remove the report\n * - either check which conformance is better suited or remove the report completely\n *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n */\nclass DECRQSS implements IDcsHandler {\n  private _data: Uint32Array = new Uint32Array(0);\n\n  constructor(\n    private _bufferService: IBufferService,\n    private _coreService: ICoreService,\n    private _logService: ILogService,\n    private _optionsService: IOptionsService\n  ) { }\n\n  public hook(params: IParams): void {\n    this._data = new Uint32Array(0);\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    this._data = concat(this._data, data.subarray(start, end));\n  }\n\n  public unhook(success: boolean): boolean {\n    if (!success) {\n      this._data = new Uint32Array(0);\n      return true;\n    }\n    const data = utf32ToString(this._data);\n    this._data = new Uint32Array(0);\n    switch (data) {\n      // valid: DCS 1 $ r Pt ST (xterm)\n      case '\"q': // DECSCA\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r0\"q${C0.ESC}\\\\`);\n        break;\n      case '\"p': // DECSCL\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r61;1\"p${C0.ESC}\\\\`);\n        break;\n      case 'r': // DECSTBM\n        const pt = '' + (this._bufferService.buffer.scrollTop + 1) +\n          ';' + (this._bufferService.buffer.scrollBottom + 1) + 'r';\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r${pt}${C0.ESC}\\\\`);\n        break;\n      case 'm': // SGR\n        // TODO: report real settings instead of 0m\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r0m${C0.ESC}\\\\`);\n        break;\n      case ' q': // DECSCUSR\n        const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n        let style = STYLES[this._optionsService.rawOptions.cursorStyle];\n        style -= this._optionsService.rawOptions.cursorBlink ? 1 : 0;\n        this._coreService.triggerDataEvent(`${C0.ESC}P1$r${style} q${C0.ESC}\\\\`);\n        break;\n      default:\n        // invalid: DCS 0 $ r Pt ST (xterm)\n        this._logService.debug('Unknown DCS $q %s', data);\n        this._coreService.triggerDataEvent(`${C0.ESC}P0$r${C0.ESC}\\\\`);\n    }\n    return true;\n  }\n}\n\n/**\n * DCS Ps; Ps| Pt ST\n *   DECUDK (https://vt100.net/docs/vt510-rm/DECUDK.html)\n *   not supported\n *\n * @vt: #N  DCS   DECUDK   \"User Defined Keys\"  \"DCS Ps ; Ps | Pt ST\"   \"Definitions for user-defined keys.\"\n */\n\n/**\n * DCS + q Pt ST (xterm)\n *   Request Terminfo String\n *   not implemented\n *\n * @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\"  \"DCS + q Pt ST\"   \"Request Terminfo String.\"\n */\n\n/**\n * DCS + p Pt ST (xterm)\n *   Set Terminfo Data\n *   not supported\n *\n * @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"  \"DCS + p Pt ST\"   \"Set Terminfo Data.\"\n */\n\n\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private _onRequestBell = new EventEmitter<void>();\n  public get onRequestBell(): IEvent<void> { return this._onRequestBell.event; }\n  private _onRequestRefreshRows = new EventEmitter<number, number>();\n  public get onRequestRefreshRows(): IEvent<number, number> { return this._onRequestRefreshRows.event; }\n  private _onRequestReset = new EventEmitter<void>();\n  public get onRequestReset(): IEvent<void> { return this._onRequestReset.event; }\n  private _onRequestSendFocus = new EventEmitter<void>();\n  public get onRequestSendFocus(): IEvent<void> { return this._onRequestSendFocus.event; }\n  private _onRequestSyncScrollBar = new EventEmitter<void>();\n  public get onRequestSyncScrollBar(): IEvent<void> { return this._onRequestSyncScrollBar.event; }\n  private _onRequestWindowsOptionsReport = new EventEmitter<WindowsOptionsReportType>();\n  public get onRequestWindowsOptionsReport(): IEvent<WindowsOptionsReportType> { return this._onRequestWindowsOptionsReport.event; }\n\n  private _onA11yChar = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this._onA11yChar.event; }\n  private _onA11yTab = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this._onA11yTab.event; }\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n  private _onColor = new EventEmitter<IColorEvent>();\n  public get onColor(): IEvent<IColorEvent> { return this._onColor.event; }\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _dirtyRowService: IDirtyRowService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DECRQSS(this._bufferService, this._coreService, this._logService, this._optionsService));\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with\n   *   same chunk and the promise resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order and\n   * proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowService.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowService.start, this._dirtyRowService.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (!chWidth && this._activeBuffer.x) {\n        if (!bufferRow.getWidth(this._activeBuffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (this._activeBuffer.x < cols) {\n            bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          this._activeBuffer.x = 0;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(this._activeBuffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once before\n          // early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y row index\n   * @param start first cell index to be erased\n   * @param end   end - 1 is last erased cell\n   * @param cleanWrap clear the isWrapped flag\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData()\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()));\n    this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Currently the same as ED.\"\n   */\n  public eraseInDisplay(params: IParams): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowService.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowService.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowService.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #P[Protection attributes are not supported.] CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Currently the same as EL.\"\n   */\n  public eraseInLine(params: IParams): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true);\n        break;\n    }\n    this._dirtyRowService.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the blank characters.\n   * Text between the cursor and right margin moves to the right. Characters moved past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to the left.\n   * Character attributes move with the characters. The terminal adds blank characters at the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll margins,\n   * moving content to the right. Content at the right margin is lost.\n   * DECIC has no effect outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowService.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is set.\n   * REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM). Always off.   | #N      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          // this._t.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          // this.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM). Always off.     | #N      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          // this._t.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          // this.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #P[Currently outputs a single underline.] |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #P[Currently outputs a single underline.] |\n   * | 3      | Curly underline.                                              | #P[Currently outputs a single underline.] |\n   * | 4      | Dotted underline.                                             | #P[Currently outputs a single underline.] |\n   * | 5      | Dashed underline.                                             | #P[Currently outputs a single underline.] |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38) and background (Ps=48) as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._curAttrData.fg = DEFAULT_ATTR_DATA.fg;\n      this._curAttrData.bg = DEFAULT_ATTR_DATA.bg;\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        attr.fg = DEFAULT_ATTR_DATA.fg;\n        attr.bg = DEFAULT_ATTR_DATA.bg;\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full terminal bootstrap,\n   * DECSTR only resets certain attributes. For most needs DECSTR should be sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from `XParseColor` (see OSC 10 for supported formats).\n   * There may be multipe `c ; spec` pairs present in the same instruction.\n   * If `spec` contains `?` the terminal returns a sequence with the currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (0 <= index && index < 256) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [ColorIndex.FOREGROUND, ColorIndex.BACKGROUND, ColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (0 <= index && index < 256) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowService.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowService.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nconst isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    const i = this._search(this._getKey(value), 0, this._array.length - 1);\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    let i = this._search(key, 0, this._array.length - 1);\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    let i = this._search(key, 0, this._array.length - 1);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    return this._array.values();\n  }\n\n  private _search(key: number, min: number, max: number): number {\n    if (max < min) {\n      return min;\n    }\n    let mid = Math.floor((min + max) / 2);\n    if (this._getKey(this._array[mid]) > key) {\n      return this._search(key, min, mid - 1);\n    }\n    if (this._getKey(this._array[mid]) < key) {\n      return this._search(key, mid + 1, max);\n    }\n    // Value found! Since keys can be duplicates, move the result index back to the lowest index\n    // that matches the key.\n    while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n      mid--;\n    }\n    return mid;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray | Int8Array | Int16Array | Int32Array | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     { return this.fg & FgFlags.UNDERLINE; }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  constructor(\n    // underline style, NONE is empty\n    public underlineStyle: UnderlineStyle = UnderlineStyle.NONE,\n    // underline color, -1 is empty (same as FG)\n    public underlineColor: number = -1\n  ) {}\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this.underlineStyle, this.underlineColor);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  // TODO: Type me\n  public tabs: any;\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param startCol column offset the string was retrieved from\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor(\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let content = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      content += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return { range, content };\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData, IAttributeData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content, BgFlags } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: ExtendedAttrs} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   * */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    const startIndex = index * CELL_SIZE;\n    cell.content = this._data[startIndex + Cell.CONTENT];\n    cell.fg = this._data[startIndex + Cell.FG];\n    cell.bg = this._data[startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index];\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  public resize(cols: number, fillCellData: ICellData): void {\n    if (cols === this.length) {\n      return;\n    }\n    if (cols > this.length) {\n      const data = new Uint32Array(cols * CELL_SIZE);\n      if (this.length) {\n        if (cols * CELL_SIZE < this._data.length) {\n          data.set(this._data.subarray(0, cols * CELL_SIZE));\n        } else {\n          data.set(this._data);\n        }\n      }\n      this._data = data;\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      if (cols) {\n        const data = new Uint32Array(cols * CELL_SIZE);\n        data.set(this._data.subarray(0, cols * CELL_SIZE));\n        this._data = data;\n        // Remove any cut off combined data, FIXME: repeat this for extended attrs\n        const keys = Object.keys(this._combined);\n        for (let i = 0; i < keys.length; i++) {\n          const key = parseInt(keys[i], 10);\n          if (key >= cols) {\n            delete this._combined[key];\n          }\n        }\n      } else {\n        this._data = new Uint32Array(0);\n        this._combined = {};\n      }\n    }\n    this.length = cols;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData): void {\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param newCols The columns after resize.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public get onBufferActivate(): IEvent<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}> { return this._onBufferActivate.event; }\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   * @param _terminal - The terminal the BufferSet will belong to\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   * */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 256;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IMarker } from 'common/Types';\n\nexport class Marker extends Disposable implements IMarker {\n  private static _nextId = 1;\n\n  private _id: number = Marker._nextId++;\n  public isDisposed: boolean = false;\n\n  public get id(): number { return this._id; }\n\n  private _onDispose = new EventEmitter<void>();\n  public get onDispose(): IEvent<void> { return this._onDispose.event; }\n\n  constructor(\n    public line: number\n  ) {\n    super();\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.shiftKey) {\n        result.key = C0.BS; // ^H\n        break;\n      } else if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\nimport { fill } from 'common/TypedArrayUtils';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      fill(table, 1);\n      table[0] = 0;\n      // control chars\n      fill(table, 0, 1, 32);\n      fill(table, 0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      fill(table, 2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      fill(table, 2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      fill(table, 2, 0xac00, 0xd7a4);\n      fill(table, 2, 0xf900, 0xfb00);\n      fill(table, 2, 0xfe10, 0xfe1a);\n      fill(table, 2, 0xfe30, 0xfe70);\n      fill(table, 2, 0xff00, 0xff61);\n      fill(table, 2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        fill(table, 0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\n// queueMicrotask polyfill for nodejs < v11\nconst qmt: (cb: () => void) => void = (typeof queueMicrotask === 'undefined')\n  ? (cb: () => void) => { Promise.resolve().then(cb); }\n  : queueMicrotask;\n\n\nexport class WriteBuffer {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  public get onWriteParsed(): IEvent<void> { return this._onWriteParsed.event; }\n  private _onWriteParsed = new EventEmitter<void>();\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) { }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens took very long).\n         * This cannot be solved here for the handler itself (it is the handlers responsibility to slice hard work),\n         * but we can at least schedule a screen update as we gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          qmt(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n* Internal actions of EscapeSequenceParser.\n*/\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { fill } from 'common/TypedArrayUtils';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    fill(this.table, action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected _oscParser: IOscParser;\n  protected _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser = new OscParser();\n    this._dcsParser = new DcsParser();\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public dispose(): void {\n    this._csiHandlers = Object.create(null);\n    this._executeHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser.dispose();\n    this._dcsParser.dispose();\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing.\n           * This is a really bad condition with screwed up execution order and prolly messed up\n           * terminal state, therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that,\n           * as the pending async handler still might mess up the terminal later. Instead fix the faulty\n           * async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class BufferNamespaceApi implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n  private _onBufferChange = new EventEmitter<IBufferApi>();\n  public get onBufferChange(): IEvent<IBufferApi> { return this._onBufferChange.event; }\n\n  constructor(private _core: ICoreTerminal) {\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n    super();\n    this.cols = Math.max(_optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(_optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = new BufferSet(_optionsService, this);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.buffers.dispose();\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    this.buffers.setupTabStops(this.cols);\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: {[key: string]: ICoreMouseProtocol} = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: {[key: string]: CoreMouseEncoding} = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService implements ICoreMouseService {\n  private _protocols: {[name: string]: ICoreMouseProtocol} = {};\n  private _encodings: {[name: string]: CoreMouseEncoding} = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _onProtocolChange = new EventEmitter<CoreMouseEventType>();\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  public get onProtocolChange(): IEvent<CoreMouseEventType> {\n    return this._onProtocolChange.event;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n        || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move at grid level\n    if (e.action === CoreMouseAction.MOVE && this._lastEvent && this._compareEvents(this._lastEvent, e)) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): {[event: string]: boolean} {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _compareEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent): boolean {\n    if (e1.col !== e2.col) return false;\n    if (e1.row !== e2.row) return false;\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { clone } from 'common/Clone';\nimport { Disposable } from 'common/Lifecycle';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  // Circular dependency, this must be unset or memory will leak after Terminal.dispose\n  private _scrollToBottom: (() => void) | undefined;\n\n  private _onData = this.register(new EventEmitter<string>());\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onUserInput = this.register(new EventEmitter<void>());\n  public get onUserInput(): IEvent<void> { return this._onUserInput.event; }\n  private _onBinary = this.register(new EventEmitter<string>());\n  public get onBinary(): IEvent<string> { return this._onBinary.event; }\n\n  constructor(\n    // TODO: Move this into a service\n    scrollToBottom: () => void,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._scrollToBottom = scrollToBottom;\n    this.register({ dispose: () => this._scrollToBottom = undefined });\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (buffer.ybase !== buffer.ydisp) {\n      this._scrollToBottom!();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecorationOptions, IDecoration, IMarker, IEvent } from 'xterm';\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e.marker.line);\n\n  private _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public get onDecorationRegistered(): IEvent<IInternalDecoration> { return this._onDecorationRegistered.event; }\n  private _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public get onDecorationRemoved(): IEvent<IInternalDecoration> { return this._onDecorationRemoved.event; }\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  constructor() {\n    super();\n  }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtLine(line: number): IterableIterator<IInternalDecoration> {\n    return this._decorations.getKeyIterator(line);\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public dispose(): void {\n    for (const d of this._decorations.values()) {\n      this._onDecorationRemoved.fire(d);\n    }\n    this.reset();\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public isDisposed: boolean = false;\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    this._isDisposed = true;\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IDirtyRowService } from 'common/services/Services';\n\nexport class DirtyRowService implements IDirtyRowService {\n  public serviceBrand: any;\n\n  private _start!: number;\n  private _end!: number;\n\n  public get start(): number { return this._start; }\n  public get end(): number { return this._end; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this._start = this._bufferService.buffer.y;\n    this._end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this._start) {\n      this._start = y;\n    } else if (y > this._end) {\n      this._end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      const temp = y1;\n      y1 = y2;\n      y2 = temp;\n    }\n    if (y1 < this._start) {\n      this._start = y1;\n    }\n    if (y2 > this._end) {\n      this._end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    this._entries.forEach((value, key) => callback(key, value));\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService implements ILogService {\n  public serviceBrand: any;\n\n  public logLevel: LogLevelEnum = LogLevelEnum.OFF;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._updateLogLevel();\n    this._optionsService.onOptionChange(key => {\n      if (key === 'logLevel') {\n        this._updateLogLevel();\n      }\n    });\n  }\n\n  private _updateLogLevel(): void {\n    this.logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, LOG_PREFIX + message, ...optionalParams);\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.DEBUG) {\n      this._log(console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.INFO) {\n      this._log(console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.WARN) {\n      this._log(console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.ERROR) {\n      this._log(console.error, message, optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, FontWeight } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\n\n// Source: https://freesound.org/people/altemark/sounds/45759/\n// This sound is released under the Creative Commons Attribution 3.0 Unported\n// (CC BY 3.0) license. It was created by 'altemark'. No modifications have been\n// made, apart from the conversion to base64.\nexport const DEFAULT_BELL_SOUND = 'data:audio/mp3;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU4LjMyLjEwNAAAAAAAAAAAAAAA//tQxAADB8AhSmxhIIEVCSiJrDCQBTcu3UrAIwUdkRgQbFAZC1CQEwTJ9mjRvBA4UOLD8nKVOWfh+UlK3z/177OXrfOdKl7pyn3Xf//WreyTRUoAWgBgkOAGbZHBgG1OF6zM82DWbZaUmMBptgQhGjsyYqc9ae9XFz280948NMBWInljyzsNRFLPWdnZGWrddDsjK1unuSrVN9jJsK8KuQtQCtMBjCEtImISdNKJOopIpBFpNSMbIHCSRpRR5iakjTiyzLhchUUBwCgyKiweBv/7UsQbg8isVNoMPMjAAAA0gAAABEVFGmgqK////9bP/6XCykxBTUUzLjEwMKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq';\n\nexport const DEFAULT_OPTIONS: Readonly<ITerminalOptions> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  customGlyphs: true,\n  bellSound: DEFAULT_BELL_SOUND,\n  bellStyle: 'none',\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  linkTooltipHoverDuration: 500,\n  letterSpacing: 0,\n  logLevel: 'info',\n  scrollback: 1000,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: true,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  rendererType: 'canvas',\n  windowOptions: {},\n  windowsMode: false,\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: undefined\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: ITerminalOptions;\n  public options: ITerminalOptions;\n\n  private _onOptionChange = new EventEmitter<string>();\n  public get onOptionChange(): IEvent<string> { return this._onOptionChange.event; }\n\n  constructor(options: Partial<ITerminalOptions>) {\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  public setOption(key: string, value: any): void {\n    this.options[key] = value;\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'bellStyle':\n      case 'cursorStyle':\n      case 'rendererType':\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n\n  public getOption(key: string): any {\n    return this.options[key];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColorRGB, IColor } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration } from 'xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollToBottom(): void;\n  scrollToTop(): void;\n  scrollToLine(line: number): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  scrollPages(pageCount: number): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasFromUser Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer.s\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport const IDirtyRowService = createDecorator<IDirtyRowService>('DirtyRowService');\nexport interface IDirtyRowService {\n  serviceBrand: undefined;\n\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<Args> =\n  Args extends [...IBrandedService[]] ? []\n    : Args extends [infer A1, ...IBrandedService[]] ? [A1]\n      : Args extends [infer A1, infer A2, ...IBrandedService[]] ? [A1, A2]\n        : Args extends [infer A1, infer A2, infer A3, ...IBrandedService[]] ? [A1, A2, A3]\n          : Args extends [infer A1, infer A2, infer A3, infer A4, ...IBrandedService[]] ? [A1, A2, A3, A4]\n            : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...IBrandedService[]] ? [A1, A2, A3, A4, A5]\n              : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n                : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n                  : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n                    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  logLevel: LogLevelEnum;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Readonly<ITerminalOptions>;\n  readonly options: ITerminalOptions;\n\n  readonly onOptionChange: IEvent<string>;\n\n  setOption<T>(key: string, value: T): void;\n  getOption<T>(key: string): T | undefined;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport type RendererType = 'dom' | 'canvas';\n\nexport interface ITerminalOptions {\n  allowProposedApi: boolean;\n  allowTransparency: boolean;\n  altClickMovesCursor: boolean;\n  bellSound: string;\n  bellStyle: 'none' | 'sound' /* | 'visual' | 'both' */;\n  cols: number;\n  convertEol: boolean;\n  cursorBlink: boolean;\n  cursorStyle: 'block' | 'underline' | 'bar';\n  cursorWidth: number;\n  customGlyphs: boolean;\n  disableStdin: boolean;\n  drawBoldTextInBrightColors: boolean;\n  fastScrollModifier: 'alt' | 'ctrl' | 'shift' | undefined;\n  fastScrollSensitivity: number;\n  fontSize: number;\n  fontFamily: string;\n  fontWeight: FontWeight;\n  fontWeightBold: FontWeight;\n  letterSpacing: number;\n  lineHeight: number;\n  linkTooltipHoverDuration: number;\n  logLevel: LogLevel;\n  macOptionIsMeta: boolean;\n  macOptionClickForcesSelection: boolean;\n  minimumContrastRatio: number;\n  rendererType: RendererType;\n  rightClickSelectsWord: boolean;\n  rows: number;\n  screenReaderMode: boolean;\n  scrollback: number;\n  scrollSensitivity: number;\n  tabStopWidth: number;\n  theme: ITheme;\n  windowsMode: boolean;\n  windowOptions: IWindowOptions;\n  wordSeparator: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selection?: string;\n  selectionForeground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /** Iterates over the decorations at a line (in no particular order). */\n  getDecorationsAtLine(line: number): IterableIterator<IInternalDecoration>;\n  /** Iterates over the decorations at a cell (in no particular order). */\n  getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration>;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\n\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n  private _onChange = new EventEmitter<string>();\n  public get onChange(): IEvent<string> { return this._onChange.event; }\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(4389);\n","import api from \"!../../../../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../css-loader/dist/cjs.js!./terminal-search.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"names":["root","factory","exports","module","define","amd","self","activate","terminal","this","_terminal","dispose","fit","dims","proposeDimensions","core","_core","rows","cols","_renderService","clear","resize","element","parentElement","dimensions","actualCellWidth","actualCellHeight","parentElementStyle","window","getComputedStyle","parentElementHeight","parseInt","getPropertyValue","parentElementWidth","Math","max","elementStyle","availableHeight","availableWidth","viewport","scrollBarWidth","floor","FitAddon","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","NON_WORD_CHARACTERS","_linesCacheTimeoutId","findNext","term","searchOptions","Error","length","clearSelection","currentSelection","startCol","startRow","hasSelection","incremental","getSelectionPosition","endRow","startColumn","endColumn","_initLinesCache","searchPosition","result","_findInLine","y","buffer","active","baseY","_selectResult","findPrevious","isReverseSearch","row","col","_linesCache","Array","_cursorMoveListener","onCursorMove","_destroyLinesCache","_resizeListener","onResize","clearTimeout","setTimeout","undefined","_isWholeWord","searchIndex","line","includes","firstLine","getLine","isWrapped","cache","_translateBufferLineToStringWithWrap","stringLine","offsets","offset","_bufferColsToStringOffset","searchTerm","caseSensitive","toLowerCase","searchStringLine","resultIndex","regex","searchRegex","RegExp","foundTerm","exec","slice","lastIndex","lastIndexOf","indexOf","wholeWord","startRowOffset","endRowOffset","startColOffset","endColOffset","startColIndex","_stringLengthToBufferSize","size","i","cell","getCell","char","getChars","nextCell","getWidth","lineIndex","trimRight","strings","lineOffsets","nextLine","lineWrapsToNext","string","translateToString","lastCell","getCode","push","join","select","viewportY","scrollLines","SearchAddon","a","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","_accessibilityTreeRoot","document","createElement","classList","add","tabIndex","_rowContainer","setAttribute","_rowElements","_createAccessibilityTreeNode","appendChild","_topBoundaryFocusListener","e","_onBoundaryFocus","_bottomBoundaryFocusListener","addEventListener","_refreshRowsDimensions","_renderRowsDebouncer","TimeBasedDebouncer","_renderRows","bind","_refreshRows","_liveRegion","insertAdjacentElement","register","_onResize","onRender","start","end","onScroll","onA11yChar","_onChar","onLineFeed","onA11yTab","spaceCount","_onTab","onKey","_onKey","key","onBlur","_clearLiveRegion","onDimensionsChange","_screenDprMonitor","ScreenDprMonitor","setListener","addDisposableDomListener","removeElementFromParent","position","boundaryElement","target","beforeBoundaryElement","getAttribute","lines","relatedTarget","topBoundaryElement","bottomBoundaryElement","pop","removeChild","shift","removeEventListener","newElement","unshift","focus","preventDefault","stopImmediatePropagation","children","_refreshRowDimensions","MAX_ROWS_TO_READ","textContent","Strings","tooMuchOutput","isMac","parentNode","keyChar","refresh","setSize","toString","lineData","translateBufferLineToString","ydisp","posInSet","innerText","_announceCharacters","style","height","Disposable","AccessibilityManager","prepareTextForTerminal","text","replace","bracketTextForPaste","bracketedPasteMode","paste","textarea","coreService","decPrivateModes","triggerDataEvent","value","moveTextAreaUnderMouseCursor","ev","screenElement","pos","getBoundingClientRect","left","clientX","top","clientY","width","zIndex","selectionService","clipboardData","setData","selectionText","stopPropagation","getData","shouldSelectWord","rightClickSelect","_color","_rgba","setCss","bg","fg","getCss","setColor","getColor","ColorContrastCache","DEFAULT_FOREGROUND","css","toColor","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","rgba","DEFAULT_ANSI_COLORS","Object","freeze","colors","v","r","g","b","channels","toCss","toRgba","c","allowTransparency","canvas","ctx","getContext","_ctx","globalCompositeOperation","_litmusColor","createLinearGradient","_contrastCache","foreground","background","cursor","cursorAccent","selectionTransparent","selectionOpaque","color","blend","selectionForeground","ansi","contrastCache","_updateRestoreColors","onOptionsChange","setTheme","theme","_parseColor","selection","nullColor","isOpaque","opacity","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","restoreColor","slot","_restoreColors","fallback","fillStyle","console","warn","fillRect","data","getImageData","substring","split","map","component","Number","alpha","round","ColorManager","elements","node","type","handler","options","disposed","_bufferService","_logService","_unicodeService","_linkMatchers","_nextLinkMatcherId","_onShowLinkUnderline","EventEmitter","_onHideLinkUnderline","_onLinkTooltip","_rowsToLinkify","event","attachToDom","mouseZoneManager","_element","_mouseZoneManager","linkifyRows","min","clearAll","_rowsTimeoutId","_linkifyRows","Linkifier","_timeBeforeLatency","absoluteRowIndexStart","absoluteRowIndexEnd","overscanLineLimit","ceil","iterator","hasNext","next","_doLinkifyRow","range","first","content","debug","registerLinkMatcher","matcher","id","matchIndex","validationCallback","hoverTooltipCallback","tooltipCallback","hoverLeaveCallback","leaveCallback","willLinkActivate","priority","_addLinkMatcherToList","splice","deregisterLinkMatcher","matcherId","rowIndex","match","rex","source","flags","stringIndex","uri","bufferIndex","stringIndexToBufferIndex","get","attr","getFg","isValid","_addLink","x","getStringCellWidth","x1","y1","x2","y2","MouseZone","newWindow","open","opener","location","href","fire","_createLinkHoverEvent","remove","IBufferService","ILogService","IUnicodeService","clickCallback","hoverCallback","_linkProviders","_linkCacheDisposables","_isMouseOut","_activeLine","getDisposeArrayDisposable","_currentLink","registerLinkProvider","linkProvider","providerIndex","mouseService","renderService","_mouseService","_clearCurrentLink","_onMouseMove","_handleMouseDown","_handleMouseUp","_lastMouseEvent","_positionFromMouseEvent","composedPath","contains","_lastBufferCell","_onHover","_askForLink","_linkAtPosition","link","useLineCache","_activeProviderReplies","forEach","reply","linkWithState","Map","linkProvided","_checkLinkProviderResult","provideLinks","links","linksWithState","set","_removeIntersectingLinks","entries","replies","occupiedCells","Set","providerReply","startX","endX","has","index","hasLinkBefore","j","linkAtPosition","find","_handleNewLink","currentLink","_mouseDownLink","_linkLeave","disposeArray","state","decorations","underline","pointerCursor","isHovered","_linkHover","defineProperties","toggle","_fireUnderlineEvent","onRenderedViewportChange","hover","showEvent","scrollOffset","_createLinkUnderlineEvent","leave","sameLine","wrappedFromLeft","wrappedToRight","coords","getCoords","Linkifier2","promptLabel","_screenElement","_selectionService","_optionsService","_zones","_areZonesActive","_lastHoverCoords","_initialSelectionLength","_onMouseDown","_mouseMoveListener","_mouseLeaveListener","_onMouseLeave","_clickListener","_onClick","_deactivate","zone","_activate","_currentZone","pageX","pageY","_findZoneEventAt","_tooltipTimeout","_onTooltip","rawOptions","linkTooltipHoverDuration","_getSelectionLength","currentSelectionLength","IMouseService","ISelectionService","IOptionsService","MouseZoneManager","_renderCallback","_refreshCallbacks","_animationFrame","cancelAnimationFrame","addRefreshCallback","callback","requestAnimationFrame","_innerRefresh","rowStart","rowEnd","rowCount","_rowCount","_rowStart","_rowEnd","_runRefreshCallbacks","RenderDebouncer","_currentDevicePixelRatio","devicePixelRatio","listener","_listener","clearListener","_outerListener","_updateDpr","_resolutionMediaMatchList","removeListener","matchMedia","addListener","browser","Browser","_keyDownHandled","_keyDownSeen","_keyPressHandled","_unprocessedDeadKey","_onCursorMove","_onRender","_onSelectionChange","_onTitleChange","_onBell","_onFocus","_onBlur","_onA11yCharEmitter","_onA11yTabEmitter","_setup","linkifier","_instantiationService","createInstance","linkifier2","_decorationService","DecorationService","setService","IDecorationService","_inputHandler","onRequestBell","bell","onRequestRefreshRows","onRequestSendFocus","_reportFocus","onRequestReset","reset","onRequestWindowsOptionsReport","_reportWindowsOptions","onColor","_handleColorEvent","forwardEvent","onTitleChange","_afterResize","_colorManager","req","acc","ident","toColorRGB","C0","ESC","toRgbString","C1_ESCAPED","ST","setColors","onThemeChange","_isDisposed","_customKeyEventHandler","write","buffers","preventScroll","_updateOptions","_charSizeService","measure","setRenderer","_createRenderer","syncScrollArea","optionsService","screenReaderMode","_accessibilityManager","setupTabStops","_setTheme","_onTextAreaFocus","sendFocus","updateCursorStyle","_showCursor","blur","_onTextAreaBlur","_syncTextArea","isCursorInViewport","_compositionHelper","isComposing","cursorY","ybase","bufferLine","cursorX","cellHeight","cellWidth","cursorTop","cursorLeft","lineHeight","_initGlobal","_bindKeys","copyHandler","pasteHandlerWrapper","handlePasteEvent","isFirefox","button","rightClickHandler","rightClickSelectsWord","isLinux","_keyUp","_keyDown","_keyPress","compositionstart","compositionupdate","compositionend","_inputEvent","updateCompositionElements","_queueLinkification","parent","isConnected","_document","ownerDocument","dir","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","coreBrowserService","CoreBrowserService","ICoreBrowserService","CharSizeService","ICharSizeService","_theme","onOptionChange","_characterJoinerService","CharacterJoinerService","ICharacterJoinerService","renderer","RenderService","IRenderService","_compositionView","CompositionHelper","_soundService","SoundService","ISoundService","MouseService","Viewport","amount","onRequestSyncScrollBar","onFocus","SelectionService","onRequestScrollLines","suppressScrollEvent","onSelectionChange","onRequestRedraw","onSelectionChanged","columnSelectMode","onLinuxMouseSelection","_onScroll","BufferDecorationRenderer","onMouseDown","coreMouseService","areMouseEventsActive","disable","enable","overviewRulerWidth","_overviewRulerRenderer","OverviewRulerRenderer","bindMouse","rendererType","Renderer","DomRenderer","el","sendEvent","but","action","getRawByteCoords","overrideType","buttons","getLinesScrolled","deltaY","triggerMouseEvent","ctrl","ctrlKey","alt","altKey","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","onProtocolChange","events","logLevel","explainEvents","passive","activeProtocol","shouldForceSelection","hasScrollback","sequence","applicationCursorKeys","abs","onWheel","onTouchStart","onTouchMove","refreshRows","shouldColumnSelect","isCursorInitialized","disp","attachCustomKeyEventHandler","customKeyEventHandler","registerCharacterJoiner","joinerId","deregisterCharacterJoiner","deregister","markers","addMarker","cursorYOffset","normal","registerDecoration","decorationOptions","column","setSelection","getSelection","selectionStart","selectionEnd","selectAll","selectLines","shouldIgnoreComposition","macOptionIsMeta","keydown","scrollToBottom","evaluateKeyboardEvent","scrollCount","_isThirdLevelShift","metaKey","charCodeAt","ETX","CR","domEvent","thirdLevelKey","isWindows","getModifierState","keyCode","wasModifierKeyOnlyEvent","charCode","which","String","fromCharCode","inputType","composed","_soundBell","playBellSound","hasValidSize","clearAllMarkers","getBlankLine","DEFAULT_ATTR_DATA","clearTextureAtlas","WindowsOptionsReportType","GET_WIN_SIZE_PIXELS","canvasWidth","scaledCanvasWidth","toFixed","canvasHeight","scaledCanvasHeight","GET_CELL_SIZE_PIXELS","scaledCellWidth","scaledCellHeight","force","cancelEvents","_visualBell","bellStyle","CoreTerminal","Terminal","_debounceThresholdMS","_lastRefreshMs","_additionalRefreshRequested","_refreshTimeoutID","refreshRequestTime","Date","now","elapsed","waitPeriodBeforeTrailingRefresh","_scrollLines","_scrollArea","_currentRowHeight","_currentScaledCellHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","offsetWidth","_activeBuffer","onBufferActivate","activeBuffer","_renderDimensions","backgroundColor","_refresh","immediate","offsetHeight","newBufferHeight","scrollTop","offsetParent","diff","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","DOM_DELTA_PIXEL","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","_decorationElements","_altBufferIsActive","_dimensionsChanged","_container","_queueRefresh","onDecorationRegistered","onDecorationRemoved","decoration","_removeDecoration","refreshDecorations","_renderDecoration","_refreshStyle","_refreshXPosition","_createElement","marker","display","onRenderEmitter","onDispose","anchor","right","delete","_zonePool","_zonePoolIndex","_linePadding","full","center","addDecoration","overviewRulerOptions","z","_lineIntersectsZone","_lineAdjacentToZone","_addLineToZone","startBufferLine","endBufferLine","setPadding","padding","ColorZoneStore","drawHeight","drawWidth","drawX","_colorZoneStore","_shouldUpdateDimensions","_shouldUpdateAnchor","_lastKnownBufferLength","_canvas","_refreshCanvasDimensions","insertBefore","_registerDecorationListeners","_registerBufferChangeListeners","_registerDimensionChangeListeners","_refreshDrawHeightConstants","_refreshColorZonePadding","_containerHeight","clientHeight","o","_refreshDrawConstants","outerWidth","innerWidth","pixelsPerLine","nonFullHeight","_width","_refreshDecorations","clearRect","lineWidth","zones","_renderColorZone","updateCanvasDimensions","updateAnchor","_textarea","_coreService","_isComposing","_isSendingComposition","_compositionPosition","_dataAlreadySent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","input","oldValue","dontRecurse","fontFamily","fontSize","compositionViewBounds","ICoreService","getCoordsRelativeToElement","rect","leftPadding","topPadding","colCount","hasValidCharSize","isSelection","moveToRequestedRow","startY","targetY","bufferService","applicationCursor","wrappedRowsForRow","rowsToMove","wrappedRows","direction","verticalDirection","wrappedRowsCount","repeat","currentRow","lineWraps","endCol","forward","currentCol","bufferStr","mod","count","str","rpt","targetX","resetStartingRow","horizontalDirection","moveToRequestedCol","rowDifference","currX","colsFromRowEnd","CONSTRUCTOR_ONLY_OPTIONS","_addonManager","AddonManager","_publicOptions","getter","propName","setter","_checkReadonlyOptions","desc","defineProperty","_checkProposedApi","allowProposedApi","onBell","onBinary","onData","onWriteParsed","_parser","ParserApi","UnicodeApi","_buffer","BufferNamespaceApi","m","mouseTrackingMode","applicationCursorKeysMode","applicationKeypadMode","applicationKeypad","insertMode","modes","originMode","origin","reverseWraparoundMode","reverseWraparound","sendFocusMode","wraparoundMode","wraparound","columns","_verifyIntegers","registerMarker","_verifyPositiveIntegers","scrollPages","pageCount","scrollToTop","scrollToLine","writeUtf8","writeln","getOption","setOption","loadAddon","addon","values","Infinity","isNaN","_alpha","_colors","_rendererId","_scaledCharWidth","_scaledCharHeight","_scaledCellWidth","_scaledCellHeight","_scaledCharLeft","_scaledCharTop","_columnSelectMode","_currentGlyphIdentifier","chars","code","bold","dim","italic","_initCanvas","_charAtlas","throwIfFalsy","_clearAll","onOptionsChanged","onGridChanged","_selectionStart","_selectionEnd","colorSet","_refreshCharAtlas","_setTransparency","oldCanvas","cloneNode","replaceChild","acquireCharAtlas","warmUp","scaledCharWidth","scaledCharHeight","scaledCharLeft","scaledCharTop","_fillCells","_fillMiddleLineAtCells","cellOffset","_fillBottomLineAtCells","_fillLeftLineAtCell","_strokeRectAtCell","strokeRect","_clearCells","_fillCharTrueColor","font","_getFont","textBaseline","TEXT_BASELINE","_clipRow","drawSuccess","customGlyphs","tryDrawCustomChar","fillText","_drawChars","contrastColor","_getContrastColor","isFgRGB","isBgRGB","_drawUncachedChars","isInverse","isBgDefault","INVERTED_DEFAULT_COLOR","getBgColor","isFgDefault","getFgColor","DEFAULT_COLOR","drawBoldTextInBrightColors","isBold","WHITESPACE_CELL_CHAR","WHITESPACE_CELL_CODE","isDim","isItalic","hasOverrides","getDecorationsAtCell","d","backgroundColorRGB","foregroundColorRGB","draw","fgOverride","save","opaque","AttributeData","globalAlpha","DIM_OPACITY","restore","beginPath","clip","fontWeightBold","fontWeight","bgOverride","isTop","layer","_isCellInSelection","minimumContrastRatio","excludeFromContrastRatioDemands","adjustedColor","fgColor","fgColorMode","getFgColorMode","bgColor","bgColorMode","getBgColorMode","temp","temp2","bgRgba","_resolveBackgroundRgba","fgRgba","_resolveForegroundRgba","ensureContrastRatio","inverse","BaseRenderLayer","BLINK_INTERVAL","container","rendererId","_onRequestRedraw","_coreBrowserService","decorationService","_cell","CellData","_state","isFocused","_cursorRenderers","_renderBarCursor","_renderBlockCursor","_renderUnderlineCursor","_cursorBlinkStateManager","_clearCursor","restartBlinkAnimation","pause","resume","cursorBlink","CursorBlinkStateManager","_render","isPaused","triggeredByAnimationFrame","isCursorHidden","viewportRelativeCursorY","loadCell","cursorStyle","_renderBlurCursor","isCursorVisible","cursorWidth","strokeStyle","CursorRenderLayer","_restartInterval","_blinkStartTimeout","_blinkInterval","clearInterval","_animationTimeRestarted","timeToStart","time","setInterval","blockElementDefinitions","w","h","patternCharacterDefinitions","boxDrawingDefinitions","xp","yp","powerlineDefinitions","horizontalPadding","xOffset","yOffset","blockElementDefinition","charDefinition","box","xEighth","yEighth","drawBlockElementChar","patternDefinition","patternSet","cachedPatterns","pattern","tmpCanvas","tmpCtx","imageData","ImageData","startsWith","parseFloat","putImageData","createPattern","drawPatternChar","boxDrawingDefinition","instructions","actualInstructions","instruction","f","svgToCanvasInstructionMap","args","translateArgs","error","stroke","closePath","drawBoxDrawingChar","powerlineDefinition","fill","drawPowerlineChar","clamp","bezierCurveTo","lineTo","moveTo","GridCache","onShowLinkUnderline","onHideLinkUnderline","middleRowCount","is256Color","LinkRenderLayer","nextRendererId","instantiationService","_id","_renderLayers","TextRenderLayer","SelectionRenderLayer","_devicePixelRatio","_updateDimensions","removeTerminalFromCache","onDevicePixelRatioChange","l","onCharSizeChanged","_runOperation","operation","renderRows","letterSpacing","IInstantiationService","isPowerlineGlyph","codepoint","isBoxOrBlockGlyph","_clearState","_didStateChange","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","startRowEndCol","middleRowsCount","_areCoordinatesEqual","coord1","coord2","_characterWidth","_characterFont","_characterOverlapCache","_workCell","terminalFont","_forEachCell","firstRow","lastRow","joinedRanges","getJoinedCharacters","isJoined","lastCharX","JoinedCellData","_isOverlapping","getCodePoint","NULL_CELL_CODE","_drawBackground","prevFillStyle","nextFillStyle","isBgPalette","_drawForeground","isInvisible","isUnderline","isStrikethrough","beginFrame","hasOwnProperty","overlaps","measureText","_didWarmUp","_doWarmUp","BaseCharAtlas","charAtlasCache","newConfig","generateConfig","ownedByIndex","entry","ownedBy","configEquals","config","atlas","newEntry","DynamicCharAtlas","clonedColors","colorCode","isLegacyEdge","CHAR_ATLAS_CELL_SPACING","TEXTURE_WIDTH","TEXTURE_HEIGHT","TRANSPARENT_COLOR","getGlyphCacheKey","glyph","_config","_drawToCacheCount","_glyphsWaitingOnBitmap","_bitmapCommitTimeout","_bitmap","_cacheCanvas","_cacheCtx","_tmpCtx","_height","capacity","_cacheMap","LRUMap","prealloc","_canCache","glyphKey","cacheValue","_drawFromCache","peek","_drawToCache","_toCoordinateX","_toCoordinateY","isEmpty","cacheX","cacheY","drawImage","inBitmap","_getColorFromAnsiIndex","idx","_getBackgroundColor","_getForegroundColor","fontStyle","clearColor","_addGlyphToBitmap","isSafari","_generateBitmap","glyphsMovingToBitmap","createImageBitmap","then","bitmap","NoneCharAtlas","_map","_head","_tail","_nodePool","_unlinkNode","prev","_appendNode","tail","nodePool","peekValue","head","TERMINAL_CLASS_PREFIX","FG_CLASS_PREFIX","BG_CLASS_PREFIX","FOCUS_CLASS","nextTerminalId","_linkifier","_linkifier2","_terminalClass","_refreshRowElements","_selectionContainer","_injectCss","_rowFactory","DomRendererRowFactory","_onLinkHover","_onLinkLeave","_themeStyleElement","_dimensionsStyleElement","overflow","styles","_terminalSelector","BOLD_CLASS","ITALIC_CLASS","CURSOR_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BAR_CLASS","CURSOR_STYLE_UNDERLINE_CLASS","documentFragment","isXFlipped","_createSelectionElement","colStart","colEnd","cursorAbsoluteY","rowElement","createRow","_setCellUnderline","enabled","span","textDecoration","DIM_CLASS","UNDERLINE_CLASS","STRIKETHROUGH_CLASS","isCursorRow","lineLength","charElement","isInSelection","resolvedBg","_addStyle","padStart","_applyMinimumContrast","padChar","isSelectAllActive","selectionStartLength","areSelectionValuesReversed","startPlusLength","onTrim","SelectionModel","_onCharSizeChange","_measureStrategy","DomMeasureStrategy","_parentElement","_result","_measureElement","geometry","firstCell","combinedData","isCombined","setFromCharData","getAsCharData","_characterJoiners","_nextCharacterJoinerId","joiner","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","rangeAttrBG","getBg","getTrimmedLength","_getJoinedRanges","startIndex","endIndex","allJoinedRanges","joinerRanges","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","getString","newRange","inRange","getRootNode","activeElement","hasFocus","_renderer","_isPaused","_needsFullRefresh","_isNextRenderRedrawOnly","_needsSelectionRefresh","_canvasWidth","_canvasHeight","_selectionState","_onDimensionsChange","_onRenderedViewportChange","_onRefreshRequest","_renderDebouncer","_fullRefresh","_handleOptionsChanged","onCharSizeChange","IntersectionObserver","_onIntersectionChange","threshold","observe","disconnect","isIntersecting","intersectionRatio","isRedrawOnly","_fireOnCanvasResize","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_oldHasSelection","_oldSelectionStart","_oldSelectionEnd","_onLinuxMouseSelection","_onRedrawRequest","_onRequestScrollLines","_mouseUpListener","_onMouseUp","onUserInput","_trimListener","_onTrim","_onBufferActivate","_model","_activeSelectionMode","_removeMouseDownListeners","finalSelectionStart","finalSelectionEnd","lineText","isLinuxMouseSelection","_isClickInSelection","_getMouseBufferCoords","_areCoordsInSelection","isCellInSelection","_selectWordAtCursor","allowWhitespaceOnlySelection","getRangeLength","_selectWordAt","_getMouseEventScrollAmount","terminalHeight","macOptionClickForcesSelection","timeStamp","_onIncrementalClick","detail","_onSingleClick","_onDoubleClick","_onTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","_dragScroll","hasWidth","_selectLineAt","previousSelectionEnd","_selectToWordAt","timeElapsed","coordinates","moveToCellSequence","_fireEventIfSelectionChanged","_fireOnSelectionChange","_convertViewportColToCharacterIndex","charIndex","_getWordAt","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","trim","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","wordSeparator","wrappedRange","getWrappedRangeForLine","last","createDecorator","_audioContext","audioContextCtor","AudioContext","webkitAudioContext","audioContext","bellAudioSource","createBufferSource","decodeAudioData","_base64ToArrayBuffer","_removeMimeType","bellSound","connect","destination","base64","binaryString","atob","len","bytes","Uint8Array","dataURI","_maxLength","onDeleteEmitter","onInsertEmitter","onTrimEmitter","_array","_startIndex","_length","newMaxLength","newArray","_getCyclicIndex","newLength","recycle","deleteCount","items","countToTrim","trimStart","shiftElements","expandListBy","CircularList","clone","val","depth","clonedObject","isArray","rgb","toPaddedHex","s","contrastRatio","l1","l2","fgR","fgG","fgB","bgR","bgG","bgB","ratio","rgbaColor","toChannels","rgbaMatch","relativeLuminance2","rs","gs","bs","pow","relativeLuminance","reduceLuminance","cr","increaseLuminance","bgL","fgL","resultB","resultA","resultARatio","hasWriteSyncWarnHappened","_onBinary","_onData","_onLineFeed","_onWriteParsed","InstantiationService","OptionsService","BufferService","LogService","CoreService","CoreMouseService","ICoreMouseService","_dirtyRowService","DirtyRowService","IDirtyRowService","unicodeService","UnicodeService","_charsetService","CharsetService","ICharsetService","InputHandler","markRangeDirty","scrollBottom","_writeBuffer","WriteBuffer","promiseResult","parse","_onScrollApi","_windowsMode","writeSync","maxSubsequentCalls","LogLevelEnum","WARN","MINIMUM_COLS","MINIMUM_ROWS","scroll","eraseAttr","registerEscHandler","registerDcsHandler","registerCsiHandler","registerOscHandler","windowsMode","_enableWindowsMode","updateWindowsModeWrappedState","final","_listeners","_disposed","_event","arg1","arg2","queue","call","from","to","GLEVEL","MAX_PARSEBUFFER_LENGTH","paramToWindowOption","n","opts","setWinLines","restoreWin","minimizeWin","setWinPosition","setWinSizePixels","raiseWin","lowerWin","refreshWin","setWinSizeChars","maximizeWin","fullscreenWin","getWinState","getWinPosition","getWinSizePixels","getScreenSizePixels","getCellSizePixels","getWinSizeChars","getScreenSizeChars","getIconTitle","getWinTitle","pushTitle","popTitle","_data","Uint32Array","hook","params","put","concat","subarray","unhook","success","utf32ToString","pt","_coreMouseService","EscapeSequenceParser","_parseBuffer","_stringDecoder","StringToUtf32","_utf8Decoder","Utf8ToUtf32","_windowTitle","_iconName","_windowTitleStack","_iconNameStack","_curAttrData","_eraseAttrDataInternal","_onRequestBell","_onRequestRefreshRows","_onRequestReset","_onRequestSendFocus","_onRequestSyncScrollBar","_onRequestWindowsOptionsReport","_onA11yChar","_onA11yTab","_onColor","_parseStack","paused","cursorStartX","cursorStartY","decodedLength","_specialColors","setCsiHandlerFallback","identifier","identToString","toArray","setEscHandlerFallback","setExecuteHandlerFallback","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","windowOptions","restoreCursor","insertColumns","deleteColumns","setExecuteHandler","BEL","LF","lineFeed","VT","FF","carriageReturn","BS","backspace","HT","tab","SO","shiftOut","SI","shiftIn","C1","IND","NEL","HTS","tabSet","OscHandler","setTitle","setIconName","setOrReportIndexedColor","setOrReportFgColor","setOrReportBgColor","setOrReportCursorColor","restoreIndexedColor","restoreFgColor","restoreBgColor","restoreCursorColor","reverseIndex","keypadApplicationMode","keypadNumericMode","fullReset","setgLevel","selectDefaultCharset","flag","selectCharset","CHARSETS","screenAlignmentPattern","setErrorHandler","DECRQSS","_preserveStack","_logSlowResolvingAsync","p","Promise","race","res","rej","catch","err","wasPaused","DEBUG","prototype","clearRange","decode","chWidth","charset","curAttr","bufferRow","markDirty","setCellFromCodePoint","extended","wcwidth","ch","stringFromCodePoint","_eraseAttrData","insertCells","getNullCell","NULL_CELL_WIDTH","addCodepointToCell","precedingCodepoint","hasContent","DcsHandler","convertEol","_restrictCursor","originalX","nextStop","maxCol","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","replaceCells","_resetBufferLine","clearMarkers","scrollBackSize","scrollBottomRowsOffset","scrollBottomAbsolute","deleteCells","_is","termName","setgCharset","DEFAULT_CHARSET","activeEncoding","activateAltBuffer","activateNormalBuffer","_updateAttrColor","mode","c1","c2","c3","fromColorRGB","_extractColor","accu","cSpace","advance","hasSubParams","subparams","getSubParams","underlineColor","_processUnderline","underlineStyle","updateExtended","savedX","savedY","savedCurAttrData","savedCharset","isBlinking","bottom","second","_savedCharset","slots","spec","parseColor","_setOrReportSpecialColor","collectAndFlag","scrollRegionHeight","level","markAllDirty","_disposables","unregister","disposables","array","isNode","navigator","userAgent","platform","test","isIpad","isIphone","_getKey","insert","_search","getKeyIterator","mid","SortedList","fillFallback","constructor","lastChar","CHAR_DATA_CODE_INDEX","ExtendedAttrs","newObj","isBlink","isFgPalette","isAttributeDefault","hasExtendedAttrs","getUnderlineColor","getUnderlineColorMode","isUnderlineColorRGB","isUnderlineColorPalette","isUnderlineColorDefault","getUnderlineStyle","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","fromCharData","NULL_CELL_CHAR","_whitespaceCell","WHITESPACE_CELL_WIDTH","_isClearing","_cols","_rows","_getCorrectBufferLength","getWhitespaceCell","BufferLine","maxLength","relativeY","correctBufferLength","scrollback","fillViewportRows","fillAttr","newCols","newRows","nullCell","addToY","amountToTrim","_isReflowEnabled","_reflow","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","trimmedLines","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","newLines","newLine","destLineIndex","destCol","srcLineIndex","srcCol","cellsToCopy","copyCellsFrom","wrappedLinesIndex","getWrappedLineTrimmedLength","setCell","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","CHAR_DATA_WIDTH_INDEX","CHAR_DATA_CHAR_INDEX","tabStopWidth","Marker","onInsert","onDelete","_removeMarker","startOverscan","endOverscan","BufferStringIterator","Buffer","_trimRight","_endIndex","_startOverscan","_endOverscan","_current","fillCellData","_combined","_extendedAttrs","cp","CHAR_DATA_ATTR_INDEX","codePoint","eAttrs","keys","copyFrom","src","applyInReverse","srcData","srcCombinedKeys","bufferCols","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","_normal","_alt","inactiveBuffer","BufferSet","obj","combined","DEFAULT_ATTR","_nextId","isDisposed","_onDispose","C","NUL","SOH","STX","EOT","ENQ","ACK","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","FS","GS","RS","US","SP","DEL","PAD","HOP","BPH","NBH","SSA","ESA","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","OSC","PM","APC","KEYCODE_KEY_MAPPINGS","applicationCursorMode","modifiers","keyMapping","keyString","toUpperCase","_interim","startPos","interim","byte1","byte2","byte3","byte4","discardInterim","tmp","missing","fourStop","table","BMP_COMBINING","HIGH_COMBINING","version","num","ucs","bisearch","UnicodeV6","qmt","queueMicrotask","cb","resolve","_action","_callbacks","_pendingData","_bufferOffset","_isSyncWriting","_syncCalls","chunk","_innerWrite","lastTime","startTime","RGB_REX","HASH_REX","pad","bits","s2","low","base","adv","PAYLOAD_LIMIT","EMPTY_HANDLERS","_handlers","create","_active","_ident","_handlerFb","_stack","loopPosition","fallThrough","registerHandler","handlerList","handlerIndex","clearHandler","setHandlerFallback","handlerResult","DcsParser","EMPTY_PARAMS","Params","addParam","_handler","_params","_hitLimit","ret","setDefault","addMany","codes","TransitionTable","NON_ASCII_PRINTABLE","VT500_TRANSITION_TABLE","blueprint","apply","unused","PRINTABLES","EXECUTABLES","states","_transitions","handlers","handlerPos","transition","chunkPos","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","OscParser","_dcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","collect","abort","addSubParam","addDigit","handlersEsc","jj","_start","_put","MAX_VALUE","maxSubParamsLength","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","fromArray","k","newParams","getSubParamsAll","store","cur","_addons","instance","loadedAddon","_wrappedAddonDispose","init","BufferLineApiView","BufferApiView","_line","_onBufferChange","_alternate","alternate","addCsiHandler","addDcsHandler","addEscHandler","addOscHandler","provider","versions","activeVersion","isUserScrolling","_cachedBlankLine","topRow","bottomRow","willBufferBeTrimmed","isFull","oldYdisp","scrollAmount","glevel","_charsets","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","S","DEFAULT_ENCODINGS","DEFAULT","SGR","_protocols","_encodings","_activeProtocol","_activeEncoding","_onProtocolChange","_lastEvent","addProtocol","addEncoding","name","protocol","encoding","_compareEvents","report","triggerBinaryEvent","down","up","drag","move","e1","e2","DEFAULT_MODES","DEFAULT_DEC_PRIVATE_MODES","_onUserInput","_scrollToBottom","wasUserInput","disableStdin","_decorations","_onDecorationRegistered","_onDecorationRemoved","Decoration","getDecorationsAtLine","xmin","xmax","_cachedBg","_cachedFg","foregroundColor","_end","_entries","service","ServiceCollection","_services","getService","ctor","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","optionsKeyToLogLevel","info","INFO","ERROR","off","OFF","_updateLogLevel","_evalLazyOptionalParams","optionalParams","_log","message","log","DEFAULT_BELL_SOUND","DEFAULT_OPTIONS","altClickMovesCursor","FONT_WEIGHT_OPTIONS","_onOptionChange","defaultOptions","newValue","_sanitizeAndValidateOption","_setupOptions","storeServiceDependency","serviceRegistry","decorator","arguments","_providers","_onChange","defaultProvider","_activeProvider","cachedModule"],"sourceRoot":""}